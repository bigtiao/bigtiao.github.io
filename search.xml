<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ABAP动态内表</title>
    <url>/2022/06/21/ABAP%E5%8A%A8%E6%80%81%E5%86%85%E8%A1%A8/</url>
    <content><![CDATA[<h3 id="ABAP动态内表"><a href="#ABAP动态内表" class="headerlink" title="ABAP动态内表"></a>ABAP动态内表</h3><p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&quot;新特性在ABAP7.5环境下使用</span><br><span class="line">TYPES:BEGIN OF GTY_DATA,</span><br><span class="line">      COL1 TYPE CHAR10,</span><br><span class="line">      COL2 TYPE CHAR10,</span><br><span class="line">      COL3 TYPE CHAR10,</span><br><span class="line">      COL4 TYPE CHAR10,</span><br><span class="line">      COL5 TYPE CHAR10,</span><br><span class="line">      COL6 TYPE CHAR10,</span><br><span class="line">      COL7 TYPE CHAR10,</span><br><span class="line">      COL8 TYPE CHAR10,</span><br><span class="line">      COL9 TYPE CHAR10,</span><br><span class="line">      COL10 TYPE CHAR10,</span><br><span class="line">      COL11 TYPE CHAR10,</span><br><span class="line">      COL12 TYPE CHAR10,</span><br><span class="line">  END OF GTY_DATA.</span><br><span class="line"></span><br><span class="line">DATA:GT_DATA TYPE TABLE OF GTY_DATA,</span><br><span class="line">      GS_DATA TYPE GTY_DATA.</span><br><span class="line"></span><br><span class="line">FIELD-SYMBOLS:&lt;FS_RESULT&gt; TYPE STANDARD TABLE,</span><br><span class="line">               &lt;FS_TABLE&gt; TYPE STANDARD TABLE,</span><br><span class="line">               &lt;FS_LINE&gt; TYPE ANY,</span><br><span class="line">               &lt;FS_DATA&gt; TYPE GTY_DATA.</span><br><span class="line"></span><br><span class="line">DATA:LR_TABLE TYPE REF TO DATA,</span><br><span class="line">      LR_LINE TYPE REF TO DATA.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*ALV字段列表。 &quot;构建fieldcat</span><br><span class="line">DATA: GT_FIELDCAT TYPE LVC_T_FCAT,</span><br><span class="line">      GS_FIELDCAT TYPE LVC_S_FCAT,</span><br><span class="line">      GS_LAYOUT   TYPE LVC_S_LAYO,</span><br><span class="line">      GT_EVENTS   TYPE SLIS_T_EVENT,</span><br><span class="line">      GS_EVENTS   TYPE SLIS_ALV_EVENT,</span><br><span class="line">      GS_VARIANT  TYPE DISVARIANT.</span><br><span class="line"></span><br><span class="line">PARAMETERS: P_ROW TYPE I DEFAULT 3,</span><br><span class="line">            P_COL TYPE I DEFAULT 3.</span><br><span class="line"></span><br><span class="line">START-OF-SELECTION.</span><br><span class="line">  PERFORM FRM_INIT_DATA.</span><br><span class="line">  PERFORM FRM_FETCH_DATA.</span><br><span class="line"></span><br><span class="line">  PERFORM FRM_DISPLAY_ALV.</span><br><span class="line"></span><br><span class="line">FORM FRM_INIT_DATA.</span><br><span class="line">  DO P_ROW TIMES.</span><br><span class="line">    DATA(LV_INDEX) = SY-INDEX.</span><br><span class="line">    &quot;快速创建并分配指针，添加空行,&lt;FS_DATA&gt;指向GT_DATA</span><br><span class="line">    APPEND INITIAL LINE TO GT_DATA ASSIGNING &lt;FS_DATA&gt;.</span><br><span class="line">    IF &lt;FS_DATA&gt; IS ASSIGNED.</span><br><span class="line">      DO 12 TIMES.</span><br><span class="line">        DATA(LV_COMP) = |COL&#123; SY-INDEX &#125;|.</span><br><span class="line">        &quot;填充&lt;FS_COMP&gt;指向&lt;FS_DATA&gt;</span><br><span class="line">        ASSIGN COMPONENT LV_COMP OF STRUCTURE &lt;FS_DATA&gt; TO FIELD-SYMBOL(&lt;FS_COMP&gt;).</span><br><span class="line">       IF SY-SUBRC = 0.</span><br><span class="line">         &lt;FS_COMP&gt; = |&#123; LV_COMP &#125;--&#123; LV_INDEX &#125;|.</span><br><span class="line">       ENDIF.</span><br><span class="line">      ENDDO.</span><br><span class="line">    ENDIF.</span><br><span class="line">  ENDDO.</span><br><span class="line">  &quot;初始化列</span><br><span class="line">  DO P_COL TIMES.</span><br><span class="line">    LV_COMP = |COL&#123; SY-INDEX &#125;|.</span><br><span class="line">    DATA(LV_TEXT) = |列&#123; SY-INDEX &#125;|.</span><br><span class="line">    PERFORM FRM_FILL_FIELDCAT USING SY-INDEX LV_COMP LV_TEXT.</span><br><span class="line">  ENDDO.</span><br><span class="line">  ENDFORM.</span><br><span class="line"></span><br><span class="line">FORM FRM_FILL_FIELDCAT USING P_COL P_FIELDNAME P_TEXT.</span><br><span class="line">  APPEND INITIAL LINE TO GT_FIELDCAT ASSIGNING FIELD-SYMBOL(&lt;FS_FIELD&gt;).</span><br><span class="line">  IF &lt;FS_FIELD&gt; IS ASSIGNED.</span><br><span class="line">    &lt;FS_FIELD&gt;-COL_POS = P_COL.</span><br><span class="line">    &lt;FS_FIELD&gt;-FIELDNAME = P_FIELDNAME.</span><br><span class="line">    &lt;FS_FIELD&gt;-SCRTEXT_M = P_TEXT.</span><br><span class="line">  ENDIF.</span><br><span class="line">  ENDFORM.</span><br><span class="line"></span><br><span class="line">FORM FRM_FETCH_DATA.</span><br><span class="line">  SORT GT_FIELDCAT BY COL_POS.</span><br><span class="line"></span><br><span class="line">  &quot; 根据列创建动态内表</span><br><span class="line">  CALL METHOD CL_ALV_TABLE_CREATE=&gt;CREATE_DYNAMIC_TABLE</span><br><span class="line">    EXPORTING</span><br><span class="line">      IT_FIELDCATALOG = GT_FIELDCAT</span><br><span class="line">    IMPORTING</span><br><span class="line">      EP_TABLE        = LR_TABLE.</span><br><span class="line"></span><br><span class="line">  &quot; 将表对象分配给指针</span><br><span class="line">  ASSIGN LR_TABLE-&gt;* TO &lt;FS_TABLE&gt;.</span><br><span class="line"></span><br><span class="line">*  &quot; 根据表对象创建行对象</span><br><span class="line">*  CREATE DATA LR_LINE LIKE LINE OF &lt;FS_TABLE&gt;.</span><br><span class="line">*</span><br><span class="line">*  &quot; 将行对象分配给指针</span><br><span class="line">*  ASSIGN LR_LINE-&gt;* TO &lt;FS_LINE&gt;.</span><br><span class="line"></span><br><span class="line">&quot; &lt;FS_TABLE&gt;按照GT_DATA重新赋值，相同字段赋值gt_data的值，不同字段重新定义</span><br><span class="line">  &lt;FS_TABLE&gt; = CORRESPONDING #( GT_DATA ).</span><br><span class="line">  </span><br><span class="line">  &quot;直接赋值</span><br><span class="line">*DATA itab TYPE TABLE OF i.</span><br><span class="line">*itab = VALUE #( ( 1 ) ( 2 ) ( 3 ) ). &quot;itab此时赋值为1,2,3</span><br><span class="line">*itab = VALUE #( ( 4 ) ( 5 ) ( 6 ) ). &quot; itab被覆盖，重新赋值4,5,6</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  ENDFORM.</span><br><span class="line"></span><br><span class="line">FORM FRM_DISPLAY_ALV.</span><br><span class="line">CALL FUNCTION &#x27;REUSE_ALV_GRID_DISPLAY_LVC&#x27;</span><br><span class="line">    EXPORTING</span><br><span class="line">      I_CALLBACK_PROGRAM = SY-CPROG</span><br><span class="line">      IT_FIELDCAT_LVC    = GT_FIELDCAT</span><br><span class="line">      I_DEFAULT          = &#x27;X&#x27;</span><br><span class="line">      I_SAVE             = &#x27;A&#x27;</span><br><span class="line">    TABLES</span><br><span class="line">      T_OUTTAB           = &lt;FS_TABLE&gt;.</span><br><span class="line"></span><br><span class="line">  ENDFORM.</span><br></pre></td></tr></table></figure>

<hr>
<p>获取字段标题，并动态获取内表中的字段值（最简单实例）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FIELD-SYMBOLS:&lt;fs_comp&gt; TYPE abap_compdescr.</span><br><span class="line">  FIELD-SYMBOLS &lt;fs_name&gt; TYPE ANY.</span><br><span class="line">  FIELD-SYMBOLS:&lt;fs&gt; TYPE ANY.</span><br><span class="line"></span><br><span class="line">  cl_descr ?= cl_abap_typedescr=&gt;describe_by_data( in_tab ).</span><br><span class="line">  LOOP AT cl_descr-&gt;components ASSIGNING &lt;fs_comp&gt;.</span><br><span class="line">    READ TABLE it_atnam INTO wa_atnam WITH key atnam = &lt;fs_comp&gt;-name.</span><br><span class="line">    IF sy-subrc = 0.</span><br><span class="line">      it_char-charact = wa_atnam-atnam.</span><br><span class="line">      ASSIGN wa_atnam-atnam to &lt;fs&gt;.</span><br><span class="line">      ASSIGN COMPONENT wa_atnam-atnam of STRUCTURE in_tab to &lt;fs&gt;.</span><br><span class="line"></span><br><span class="line">      it_char-charact = wa_atnam-atnam.</span><br><span class="line">      it_char-value_char = &lt;fs&gt;.</span><br><span class="line">      append it_char.</span><br><span class="line"></span><br><span class="line">    ENDIF.</span><br><span class="line">  ENDLOOP.</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP ABAP性能优化 - 使用 Field Symbol 和 Data Reference</title>
    <url>/2022/06/22/ABAP%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96-%E4%BD%BF%E7%94%A8Field%20Symbol%E5%92%8CData%20Reference/</url>
    <content><![CDATA[<p>相比较于一般的数据类型（例如 I, P, F, N, C, D, T等）的变量，Field Symbol和Data Reference类型的变量是ABAP中两个相关复杂的类型。理解和使用这两种变量，对于编写高性能、高灵活性的ABAP程序是十分重要的。</p>
<h3 id="1-含义解析"><a href="#1-含义解析" class="headerlink" title="1.含义解析"></a>1.含义解析</h3><p>Field Symbol：类似于C语言中的“指针”。初始状态为Unassigned。Field Symbol类型的变量自身并不对占用存储空间，仅“指向”被Assgined变量的地址空间。<br>Data Reference: 一种变量类型。初始状态为Initial。当被创建（实例化）成具体的类型时，系统会为其分配相应的存储空间。通过 ‘ -&gt;* ’ 的方式访问，将值从地址空间传输到变量中（显示）。若要改变Data Reference变量中的值，需要配合Field Symbol使用。即使用Field Symbol指向Data Reference变量所存储的地址空间，并用Field Symbol对其进行操作。<br>下图给出了配合Field Symbol操作Data Reference的一个例子 </p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20190308131010318.png" alt="在这里插入图片描述"></p>
<h3 id="2-使用Field-Symbol提升访问效率"><a href="#2-使用Field-Symbol提升访问效率" class="headerlink" title="2.使用Field Symbol提升访问效率"></a>2.使用Field Symbol提升访问效率</h3><p>因为Field Symbol并不会占用内存空间，因此在操作变量时，可以使用Field Symbol来提升运行效率。常用的Field Symbol的场景有以下几种 -</p>
<p>Read table &lt; itab &gt; assigning &lt; fs &gt;<br>Loop at &lt; itab &gt; assigning &lt; fs &gt;<br>Assign &lt; data object &gt; to &lt; fs &gt;<br>Assign component &lt;component name&#x2F;component index&gt; to &lt; fs &gt;<br>Append initial line to &lt; itab &gt; assigning &lt; fs &gt;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**********************************************************************</span><br><span class="line">* Field Symbol to prioritize the accessing of internal table</span><br><span class="line">**********************************************************************</span><br><span class="line"></span><br><span class="line">DATA: lt_sflight TYPE STANDARD TABLE OF sflight,</span><br><span class="line">      ls_sflight TYPE sflight.</span><br><span class="line"></span><br><span class="line">FIELD-SYMBOLS: &lt;ls_sflight&gt; TYPE sflight.</span><br><span class="line"></span><br><span class="line">SELECT * FROM sflight INTO TABLE lt_sflight UP TO 10 ROWS.</span><br><span class="line"></span><br><span class="line">* extra effort to copy data into variable ls_sflight</span><br><span class="line">LOOP AT lt_sflight INTO ls_sflight.</span><br><span class="line">  WRITE: / ls_sflight-carrid, ls_sflight-connid, ls_sflight-fldate.</span><br><span class="line">ENDLOOP.</span><br><span class="line"></span><br><span class="line">* access the address directly</span><br><span class="line">LOOP AT lt_sflight ASSIGNING &lt;ls_sflight&gt;.</span><br><span class="line">  WRITE: / &lt;ls_sflight&gt;-carrid, &lt;ls_sflight&gt;-connid, &lt;ls_sflight&gt;-fldate.</span><br><span class="line">ENDLOOP.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-使用Data-Reference动态创建变量"><a href="#3-使用Data-Reference动态创建变量" class="headerlink" title="3.使用Data Reference动态创建变量"></a>3.使用Data Reference动态创建变量</h3><p>使用Data Reference的主要场景是针对于unknown的变量类型，用于ABAP的动态编程。创建所需要的变量时并不能确定具体的类型（但这里并不是指“漫无边际”的不确定，需要变量&#x2F;结构&#x2F;内表是确定的，而所需要的具体类型是不确定的） -</p>
<p>创建时，并无法确定具体类型的“变量 variable”<br>创建时，并无法确定具体类型的“结构 structure”<br>创建时，并无法确定具体类型的“内表 internal table”<br>下面给出了，三个不同场景的具体例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**********************************************************************</span><br><span class="line">* 1. Un known data reference(creation of data variable)</span><br><span class="line">**********************************************************************</span><br><span class="line">PARAMETERS: p_var TYPE string DEFAULT &#x27;I&#x27;.</span><br><span class="line"></span><br><span class="line">DATA: lr_data TYPE REF TO data.</span><br><span class="line">CREATE DATA lr_data TYPE (p_var).</span><br><span class="line"></span><br><span class="line">FIELD-SYMBOLS: &lt;fs&gt; TYPE any.</span><br><span class="line">ASSIGN lr_data-&gt;* TO &lt;fs&gt;.</span><br><span class="line">IF sy-subrc = 0.</span><br><span class="line">  &lt;fs&gt; = &#x27;100&#x27;.</span><br><span class="line">ENDIF.</span><br><span class="line"></span><br><span class="line">WRITE: &lt;fs&gt;.</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**********************************************************************</span><br><span class="line">* 2. Un known data reference(creation of structure)</span><br><span class="line">**********************************************************************</span><br><span class="line"></span><br><span class="line">PARAMETERS: p_var TYPE string DEFAULT &#x27;SFLIGHT&#x27;.</span><br><span class="line"></span><br><span class="line">DATA: lr_data TYPE REF TO data.</span><br><span class="line">CREATE DATA lr_data TYPE (p_var).</span><br><span class="line"></span><br><span class="line">FIELD-SYMBOLS: &lt;fs&gt; TYPE any.</span><br><span class="line">ASSIGN lr_data-&gt;* TO &lt;fs&gt;.</span><br><span class="line">IF sy-subrc = 0.</span><br><span class="line">  SELECT SINGLE * FROM (p_var) INTO &lt;fs&gt;.</span><br><span class="line">  IF sy-subrc = 0.</span><br><span class="line">    FIELD-SYMBOLS: &lt;fs_field&gt; TYPE any.</span><br><span class="line"></span><br><span class="line">    DO .</span><br><span class="line">      ASSIGN COMPONENT sy-index OF STRUCTURE &lt;fs&gt; TO &lt;fs_field&gt;.</span><br><span class="line">      IF sy-subrc = 0.</span><br><span class="line">        WRITE: / &lt;fs_field&gt;.</span><br><span class="line">      ELSE.</span><br><span class="line">        EXIT.</span><br><span class="line">      ENDIF.</span><br><span class="line">    ENDDO.</span><br><span class="line"></span><br><span class="line">  ENDIF.</span><br><span class="line">ENDIF.</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**********************************************************************</span><br><span class="line">* 3. Un known data reference(creation of table)</span><br><span class="line">**********************************************************************</span><br><span class="line"></span><br><span class="line">PARAMETERS: p_var TYPE string DEFAULT &#x27;SFLIGHT&#x27;.</span><br><span class="line"></span><br><span class="line">DATA: lr_data TYPE REF TO data.</span><br><span class="line">CREATE DATA lr_data TYPE TABLE OF (p_var).</span><br><span class="line"></span><br><span class="line">FIELD-SYMBOLS: &lt;ft_table&gt; TYPE ANY TABLE.</span><br><span class="line"></span><br><span class="line">ASSIGN lr_data-&gt;* TO &lt;ft_table&gt;.</span><br><span class="line">IF sy-subrc = 0.</span><br><span class="line">  SELECT * FROM (p_var) INTO TABLE &lt;ft_table&gt; UP TO 10 ROWS.</span><br><span class="line">  IF sy-subrc = 0.</span><br><span class="line"></span><br><span class="line">    cl_salv_table=&gt;factory( IMPORTING r_salv_table = DATA(lr_salv)</span><br><span class="line">                            CHANGING t_table      = &lt;ft_table&gt; ).</span><br><span class="line">    lr_salv-&gt;display( ).</span><br><span class="line"></span><br><span class="line">  ENDIF.</span><br><span class="line">ENDIF.</span><br></pre></td></tr></table></figure>

<h3 id="4-Field-Symbol使用总结"><a href="#4-Field-Symbol使用总结" class="headerlink" title="4.Field Symbol使用总结"></a>4.Field Symbol使用总结</h3><p>Field <a href="https://so.csdn.net/so/search?q=Symbol&spm=1001.2101.3001.7020">Symbol</a>（以下简称FS），主要作用是程序更加灵活，有时可以实现一般做法无法实现的功能，比如动态ALV内表，LOOP时使用FS还可以提高程序效率。FS缺点是影响程序可读性，为修改和维护代码造成困难，而且有时错误是<a href="https://so.csdn.net/so/search?q=%E7%BC%96%E8%AF%91%E5%99%A8&spm=1001.2101.3001.7020">编译器</a>检查不出来的，只有运行时才会发生错误。下面是FS的一些使用总结。</p>
<p>首先请牢记，FS必须和某个变量，结构或者内表绑定后才能使用，这点和C语言里的指针（在ABAP里最接近指针的是TYPE REF TO）是不同的，在使用FS前必须分配给某个变量，不然会发生FS未分配的运行时错误。注意如果LOOP内表时ASSIGNING到FS.，那么之后假如有REFRESH内表的操作的话，FS也会再次回到初始未被ASSIGN的状态，这时如果使用FS也会发生FS未分配的RUNTIME ERROR。</p>
<p>ASSIGN ‘200’ TO<fs1>.意思是指向常量的<fs1>，之后不可更改值，比如执行<fs1> &#x3D; ‘300’会发生运行时错误。如果想实现改值的效果，那么需要ASSIGN一个变量给FS：</p>
<p>DATA gv_abc(6).</p>
<p>gv_abc &#x3D; ‘200’.</p>
<p>ASSGIN gv_abc TO <fs1>.</p>
<p><fs1> &#x3D; ‘300’.</p>
<p>这时<fs1>就从200变更为300了，另外如果直接改变变量的值，那么<fs1>也会发生变化。比如上例里gv_abc &#x3D; ‘400’，那么<fs1>也随之变为400，因为<fs1>和gv_abc是绑定了的。</p>
<p>假设定义了<fs1>和<fs2>两个FS，分别ASSGIN到两个变量，变量A和变量B。</p>
<p>ASSIGN <fs1> TO <fs2>的意思是，让<fs2>也指向<fs1>所指向的地方，即两个FS都指向变量A；而<fs2>&#x3D; <fs1>的意思是，把<fs1>所指向的变量A的值赋给<fs2>所指向的变量B的值，<fs1>依然指向变量A，<fs2>依然指向变量B。</p>
<p>LOOP 内表 INTO 结构（工作区）和LOOP内表ASSIGNING &lt;结构&gt;的比较。</p>
<p>LOOP内表INTO结构时，系统会把先把当前行的数据复制到结构，如果结构的值改了，还需要使用MODIFY语句把更改后的值传回内表。也就是说，结构是内表里的数据的一个副本，操作这个副本并不会影响内表里的数据。带表头的内表也是类似，LOOP内表时，把内表数据复制到表头。</p>
<p>为了提高效率，可以使用FS，FS直接指向内表数据，省去了复制数据到结构的过程，修改FS的值也就是相当于直接修改内表里的数据，不需要再使用MODIFY语句。</p>
<p>这里额外提一点，有一些人喜欢在ENDLOOP前使用CLEAR清空结构，首先这是没有必要的，为了提高效率，LOOP内的语句应该越精简越好，其次如果是LOOP到FS的写法，是不能使用CLEAR清空FS的，因为刚刚说了FS是直接指向内表数据，如果清空了FS，那相当于把内表内对应的那行数据也给清空了。</p>
<p>此外，像LOOP AT 内表 INTO &lt;结构&gt;的写法，初学者容易混淆，其实这里的&lt;结构&gt;是指向一个结构，这种写法和LOOP 内表 INTO 结构没什么区别。</p>
<p>READ TABLE 内表 INTO 结构和READ TABLE 内表 ASSIGNING &lt;结构&gt;的比较。</p>
<p>效率上的区别同LOOP的情况，这里说下READ TABLE和LOOP不同的地方，主要差别是，LOOP 是不会失败的，而READ TABLE是可能失败的，一旦READ失败，那么结构或&lt;结构&gt;的值依然是上次READ成功的值（而不是清空），所以READ使用完建议根据情况CLEAR结构或&lt;结构&gt;。</p>
<p>确定结构的FS和不确定结构的FS。</p>
<p>FIELD-SYMBOLS <gs_ab> TYPE ty_ab. “ty_ab是个结构，有一个字段为col1</p>
<p>FIELD-SYMBOLS <gs_ab> TYPE ANY.</p>
<p>前者是指定了结构，后者是不指定结构。</p>
<p>之后在为<gs_ab>赋值时，</p>
<p>ASSIGN COMPONNET ‘COL1’ OF STUCTURE <gs_ab>TO <fs1>.</p>
<p><fs1> &#x3D; ‘AAA’.</p>
<p>此种写法对确定结构的定义和未确定结构的定义的<gs_ab>都可行。</p>
<p> 但是有确定结构定义的<gs_ab>可以直接使用<gs_ab>-col1 &#x3D; ‘AAA’来赋值。</p>
<p>一般如果能事先知道结构的话，还是应该用确定结构的方式来定义FS，不确定结构的定义通常用于动态处理。</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>ABAP发票预制</title>
    <url>/2022/11/24/ABAP%E5%8F%91%E7%A5%A8%E9%A2%84%E5%88%B6/</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>MIR7的发票预制，不需要过账</p>
<p>1、BAPI_INCOMINGINVOICE_PARK<br>2、BAPI_INCOMINGINVOICE_CREATE<br>3、BAPI_INCOMINGINVOICE_CREATE1</p>
<p>1和2的价格可以输负数<br>2创建的发票直接过账</p>
<h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><p>BAPI_INCOMINGINVOICE_PARK例子</p>
<p>需要注意：发票有四种事务类型，可以通过BAPI参数进行设置</p>
<p>“发票:       headerdata-invoice_ind &#x3D; ‘X’    itemdata-de_cre_ind &#x3D; space<br>“贷项凭证:   headerdata-invoice_ind &#x3D; space  itemdata-de_cre_ind &#x3D; space<br>“后续借记:   headerdata-invoice_ind &#x3D; ‘X’    itemdata-de_cre_ind &#x3D; ‘X’<br>“后续贷记:   headerdata-invoice_ind &#x3D; space  itemdata-de_cre_ind &#x3D; ‘X’</p>
<p>如果设置税率自动计算，则不需要传taxitem</p>
<p>发票和后续借记金额传正数，贷项凭证和后续贷记金额传负数</p>
<p>参照凭证必须传输，否则报错，默认借方凭证找101，贷方找161退货凭证，EKBE表找</p>
<ol>
<li>新增</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FORM FRM_SAVE_FOR_CREATE .</span><br><span class="line"> </span><br><span class="line">  DATA: LS_HEADERDATA          TYPE BAPI_INCINV_CREATE_HEADER,</span><br><span class="line">        LS_ADDRESSDATA         TYPE BAPI_INCINV_CREATE_ADDRESSDATA,</span><br><span class="line">        LV_INVOICEDOCNUMBER    TYPE BAPI_INCINV_FLD-INV_DOC_NO,</span><br><span class="line">        LV_FISCALYEAR          TYPE BAPI_INCINV_FLD-FISC_YEAR,</span><br><span class="line">        LT_ITEMDATA            TYPE TABLE OF BAPI_INCINV_CREATE_ITEM WITH HEADER LINE,</span><br><span class="line">        LT_ACCOUNTINGDATA      TYPE TABLE OF BAPI_INCINV_CREATE_ACCOUNT WITH HEADER LINE,</span><br><span class="line">        LT_GLACCOUNTDATA       TYPE TABLE OF BAPI_INCINV_CREATE_GL_ACCOUNT WITH HEADER LINE,</span><br><span class="line">        LT_MATERIALDATA        TYPE TABLE OF BAPI_INCINV_CREATE_MATERIAL WITH HEADER LINE,</span><br><span class="line">        LT_TAXDATA             TYPE TABLE OF BAPI_INCINV_CREATE_TAX WITH HEADER LINE,</span><br><span class="line">        LT_WITHTAXDATA         TYPE TABLE OF BAPI_INCINV_CREATE_VENDORSPLIT WITH HEADER LINE,</span><br><span class="line">        LT_VENDORITEMSPLITDATA TYPE TABLE OF BAPI_INCINV_CREATE_ITEM WITH HEADER LINE,</span><br><span class="line">        LT_RETURN              TYPE TABLE OF BAPIRET2 WITH HEADER LINE,</span><br><span class="line">        LT_EXTENSIONIN         TYPE TABLE OF BAPI_INCINV_CREATE_TM_ITEM WITH HEADER LINE,</span><br><span class="line">        LT_TM_ITEMDATA         TYPE TABLE OF /NFM/BAPIDOCITM WITH HEADER LINE,</span><br><span class="line">        LV_WRBTR               TYPE BAPIWRBTR,</span><br><span class="line">        LT_FTAXP               TYPE TABLE OF FTAXP,</span><br><span class="line">        LV_ITEM                TYPE  RBLGP,</span><br><span class="line">        LV_MESSAGE             TYPE STRING,</span><br><span class="line">        LV_POST_MSG            TYPE CHAR300,</span><br><span class="line">        LV_ICON                TYPE CHAR04,</span><br><span class="line">        LV_STATUS              TYPE CHAR01.</span><br><span class="line"> </span><br><span class="line">  DATA(LT_ONLY) = GT_RBKP_DATA.</span><br><span class="line"> </span><br><span class="line">  DELETE LT_ONLY WHERE BOX IS INITIAL OR BELNR IS NOT INITIAL.</span><br><span class="line"> </span><br><span class="line">  SORT LT_ONLY BY LIFNR.</span><br><span class="line">  DELETE ADJACENT DUPLICATES FROM LT_ONLY COMPARING LIFNR.</span><br><span class="line"> </span><br><span class="line">  &quot; 数据校验</span><br><span class="line">  LOOP AT LT_ONLY INTO DATA(LS_ONLY).</span><br><span class="line">    CLEAR:LV_STATUS,LS_HEADERDATA,LT_ITEMDATA[],LT_TAXDATA[].</span><br><span class="line">    LOOP AT GT_RBKP_DATA INTO GS_RBKP_DATA WHERE BOX = &#x27;X&#x27; AND LIFNR = LS_ONLY-LIFNR AND TYPE NE LS_ONLY-TYPE.</span><br><span class="line">      LV_STATUS = &#x27;E&#x27;.</span><br><span class="line">      GS_RBKP_DATA-ICON = ICON_LED_RED.</span><br><span class="line">      GS_RBKP_DATA-MSG = &#x27;同一个供应商下，事务类型不同；&#x27;.</span><br><span class="line">      MODIFY GT_RBKP_DATA FROM GS_RBKP_DATA TRANSPORTING ICON MSG WHERE BOX = &#x27;X&#x27; AND LIFNR = LS_ONLY-LIFNR.</span><br><span class="line">      EXIT.</span><br><span class="line">    ENDLOOP.</span><br><span class="line"> </span><br><span class="line">    CASE LS_ONLY-TYPE+0(1).</span><br><span class="line">      WHEN &#x27;1&#x27; OR &#x27;3&#x27;.</span><br><span class="line">        LS_HEADERDATA-INVOICE_IND = &#x27;X&#x27;.</span><br><span class="line">      WHEN &#x27;2&#x27; OR &#x27;4&#x27;.</span><br><span class="line">        LS_HEADERDATA-INVOICE_IND = SPACE.</span><br><span class="line">      WHEN OTHERS.</span><br><span class="line">    ENDCASE.</span><br><span class="line">    LS_HEADERDATA-DOC_TYPE = &#x27;RE&#x27;. &quot;凭证类型</span><br><span class="line">    LS_HEADERDATA-DOC_DATE = LS_ONLY-BLDAT. &quot;凭证日期</span><br><span class="line">    LS_HEADERDATA-PSTNG_DATE = LS_ONLY-BUDAT. &quot;过账日期</span><br><span class="line">    LS_HEADERDATA-BLINE_DATE = LS_ONLY-ZFBDT.  &quot;基准日期</span><br><span class="line">    LS_HEADERDATA-COMP_CODE = LS_ONLY-BUKRS. &quot;公司代码</span><br><span class="line">    LS_HEADERDATA-DIFF_INV = LS_ONLY-LIFNR.  &quot;供应商</span><br><span class="line">    LS_HEADERDATA-CURRENCY = LS_ONLY-WAERS. &quot; 货币</span><br><span class="line">    LS_HEADERDATA-DELIV_POSTING = &#x27;S&#x27;.</span><br><span class="line">    LS_HEADERDATA-RETURN_POSTING = &#x27;H&#x27;.</span><br><span class="line">    LS_HEADERDATA-REF_DOC_NO = LS_ONLY-XBLNR. &quot; 参考</span><br><span class="line">    LS_HEADERDATA-HEADER_TXT = LS_ONLY-BKTXT. &quot; 抬头文本</span><br><span class="line">    IF LS_ONLY-CAL_IND IS NOT INITIAL.</span><br><span class="line">      LS_HEADERDATA-CALC_TAX_IND = &#x27;X&#x27;.</span><br><span class="line">    ENDIF.</span><br><span class="line"> </span><br><span class="line">    LOOP AT GT_RBKP_DATA INTO GS_RBKP_DATA WHERE BOX = &#x27;X&#x27; AND LIFNR = LS_ONLY-LIFNR.</span><br><span class="line">      CLEAR:LT_ITEMDATA.</span><br><span class="line">      LV_ITEM = LV_ITEM + 10.</span><br><span class="line">      LT_ITEMDATA-INVOICE_DOC_ITEM = LV_ITEM.</span><br><span class="line">      LT_ITEMDATA-PO_NUMBER = GS_RBKP_DATA-EBELN. &quot; 采购订单号</span><br><span class="line">      LT_ITEMDATA-PO_ITEM = GS_RBKP_DATA-EBELP. &quot; 采购订单行号</span><br><span class="line">      LT_ITEMDATA-TAX_CODE = GS_RBKP_DATA-MWSKZ. &quot; 税码</span><br><span class="line">      LT_ITEMDATA-ITEM_AMOUNT = GS_RBKP_DATA-WRBTR. &quot; 价格</span><br><span class="line">      IF LS_HEADERDATA-INVOICE_IND NE &#x27;X&#x27;.</span><br><span class="line">        LT_ITEMDATA-ITEM_AMOUNT = LT_ITEMDATA-ITEM_AMOUNT * -1.</span><br><span class="line">      ENDIF.</span><br><span class="line">      LT_ITEMDATA-QUANTITY = GS_RBKP_DATA-MENGE. &quot; 开票数</span><br><span class="line">      LT_ITEMDATA-PO_UNIT = GS_RBKP_DATA-MEINS. &quot; 单位</span><br><span class="line">      LT_ITEMDATA-ITEM_TEXT = GS_RBKP_DATA-SGTXT. &quot; 文本</span><br><span class="line"> </span><br><span class="line">      CASE LS_ONLY-TYPE+0(1).</span><br><span class="line">        WHEN &#x27;1&#x27; OR &#x27;2&#x27;.</span><br><span class="line">          LT_ITEMDATA-DE_CRE_IND  = SPACE.</span><br><span class="line">        WHEN &#x27;3&#x27; OR &#x27;4&#x27;.</span><br><span class="line">          LT_ITEMDATA-DE_CRE_IND = &#x27;X&#x27;.</span><br><span class="line">        WHEN OTHERS.</span><br><span class="line">      ENDCASE.</span><br><span class="line"> </span><br><span class="line">      SELECT</span><br><span class="line">        *</span><br><span class="line">        INTO TABLE @DATA(LT_REF)</span><br><span class="line">        FROM EKBE</span><br><span class="line">        WHERE EBELN = @GS_RBKP_DATA-EBELN AND</span><br><span class="line">              EBELP = @GS_RBKP_DATA-EBELP AND</span><br><span class="line">              BEWTP = &#x27;E&#x27; AND</span><br><span class="line">              BWART IN ( &#x27;101&#x27;, &#x27;105&#x27; , &#x27;161&#x27; ).</span><br><span class="line">      SORT LT_REF BY EBELN EBELP GJAHR DESCENDING BELNR DESCENDING.</span><br><span class="line"> </span><br><span class="line">      &quot; 非退货找101</span><br><span class="line">      IF LS_HEADERDATA-INVOICE_IND IS INITIAL.</span><br><span class="line">          READ TABLE LT_REF INTO DATA(LS_REF) WITH KEY EBELN = GS_RBKP_DATA-EBELN EBELP = GS_RBKP_DATA-EBELP BWART = &#x27;101&#x27;.</span><br><span class="line">      ELSE.</span><br><span class="line">        &quot; 退货找161</span><br><span class="line">        READ TABLE LT_REF INTO LS_REF WITH KEY EBELN = GS_RBKP_DATA-EBELN EBELP = GS_RBKP_DATA-EBELP BWART = &#x27;161&#x27;.</span><br><span class="line">        IF SY-SUBRC NE 0.</span><br><span class="line">          READ TABLE LT_REF INTO LS_REF WITH KEY EBELN = GS_RBKP_DATA-EBELN EBELP = GS_RBKP_DATA-EBELP BWART = &#x27;101&#x27;.</span><br><span class="line">        ENDIF.</span><br><span class="line">      ENDIF.</span><br><span class="line"> </span><br><span class="line">      LT_ITEMDATA-REF_DOC = LS_REF-LFBNR. &quot;参考物料凭证</span><br><span class="line">      LT_ITEMDATA-REF_DOC_YEAR = LS_REF-LFGJA.  &quot;参考年份</span><br><span class="line">      LT_ITEMDATA-REF_DOC_IT = LS_REF-LFPOS.  &quot;参考凭证行</span><br><span class="line">      APPEND LT_ITEMDATA.</span><br><span class="line"> </span><br><span class="line">      CLEAR:LT_FTAXP.</span><br><span class="line">      CALL FUNCTION &#x27;GET_TAX_PERCENTAGE&#x27;</span><br><span class="line">        EXPORTING</span><br><span class="line">          ALAND   = &#x27;CN&#x27;</span><br><span class="line">          DATAB   = SY-DATUM</span><br><span class="line">          MWSKZ   = GS_RBKP_DATA-MWSKZ</span><br><span class="line">          TXJCD   = &#x27;&#x27;</span><br><span class="line">        TABLES</span><br><span class="line">          T_FTAXP = LT_FTAXP.</span><br><span class="line">      READ TABLE LT_FTAXP INTO DATA(LS_FTAXP) INDEX 1.</span><br><span class="line"> </span><br><span class="line">      LT_TAXDATA-ITEMNO_TAX = &#x27;0010&#x27;.</span><br><span class="line">      LT_TAXDATA-TAX_AMOUNT = LT_TAXDATA-TAX_AMOUNT + GS_RBKP_DATA-WRBTR * ( LS_FTAXP-KBETR / 1000 ). &quot; 税额</span><br><span class="line">    ENDLOOP.</span><br><span class="line"> </span><br><span class="line">    IF LS_ONLY-CAL_IND IS INITIAL.</span><br><span class="line">      APPEND LT_TAXDATA.</span><br><span class="line">    ENDIF.</span><br><span class="line"> </span><br><span class="line">    LS_HEADERDATA-GROSS_AMOUNT = LS_ONLY-RMWWR. &quot; 总金额</span><br><span class="line"> </span><br><span class="line">    CALL FUNCTION &#x27;BAPI_INCOMINGINVOICE_PARK&#x27;</span><br><span class="line">      EXPORTING</span><br><span class="line">        HEADERDATA       = LS_HEADERDATA</span><br><span class="line">      IMPORTING</span><br><span class="line">        INVOICEDOCNUMBER = LV_INVOICEDOCNUMBER</span><br><span class="line">        FISCALYEAR       = LV_FISCALYEAR</span><br><span class="line">      TABLES</span><br><span class="line">        ITEMDATA         = LT_ITEMDATA</span><br><span class="line">*       ACCOUNTINGDATA   =</span><br><span class="line">*       GLACCOUNTDATA    =</span><br><span class="line">*       MATERIALDATA     =</span><br><span class="line">        TAXDATA          = LT_TAXDATA</span><br><span class="line">*       WITHTAXDATA      =</span><br><span class="line">*       VENDORITEMSPLITDATA       =</span><br><span class="line">        RETURN           = LT_RETURN</span><br><span class="line">*       EXTENSIONIN      =</span><br><span class="line">*       EXTENSIONOUT     =</span><br><span class="line">*       TM_ITEMDATA      =</span><br><span class="line">      .</span><br><span class="line">    LOOP AT LT_RETURN WHERE TYPE CA &#x27;EAX&#x27;.</span><br><span class="line">      LV_MESSAGE = LV_MESSAGE &amp;&amp; LT_RETURN-MESSAGE &amp;&amp; &#x27;；&#x27;.</span><br><span class="line">    ENDLOOP.</span><br><span class="line"> </span><br><span class="line">    IF SY-SUBRC NE 0.</span><br><span class="line">      COMMIT WORK AND WAIT.</span><br><span class="line">      LV_MESSAGE = |创建成功；|.</span><br><span class="line">      LV_ICON = ICON_LED_GREEN.</span><br><span class="line">    ELSE.</span><br><span class="line">      ROLLBACK WORK.</span><br><span class="line">      LV_ICON = ICON_LED_RED.</span><br><span class="line">    ENDIF.</span><br><span class="line"> </span><br><span class="line">    LOOP AT GT_RBKP_DATA INTO GS_RBKP_DATA WHERE BOX = &#x27;X&#x27; AND LIFNR = LS_ONLY-LIFNR AND BELNR IS INITIAL.</span><br><span class="line">      CLEAR:GS_RBKP_DATA-CELLTAB.</span><br><span class="line">      PERFORM FRM_SET_EDIT USING GS_RBKP_DATA.</span><br><span class="line">      GS_RBKP_DATA-ICON = LV_ICON.</span><br><span class="line">      GS_RBKP_DATA-MSG = LV_MESSAGE.</span><br><span class="line">      GS_RBKP_DATA-BELNR = LV_INVOICEDOCNUMBER.</span><br><span class="line">      GS_RBKP_DATA-GJAHR = LV_FISCALYEAR.</span><br><span class="line">      MODIFY GT_RBKP_DATA FROM GS_RBKP_DATA.</span><br><span class="line">    ENDLOOP.</span><br><span class="line">  ENDLOOP.</span><br><span class="line">ENDFORM.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li><p>修改：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FORM FRM_SAVE_FOR_CHANGE .</span><br><span class="line">  DATA: LS_HEADERDATA          TYPE BAPI_INCINV_DETAIL_HEADER,</span><br><span class="line">        LS_ADDRESSDATA         TYPE BAPI_INCINV_DETAIL_ADDRESSDATA,</span><br><span class="line">        LV_INVOICEDOCNUMBER    TYPE BAPI_INCINV_FLD-INV_DOC_NO,</span><br><span class="line">        LV_FISCALYEAR          TYPE BAPI_INCINV_FLD-FISC_YEAR,</span><br><span class="line">        LT_ITEMDATA            TYPE TABLE OF BAPI_INCINV_DETAIL_ITEM WITH HEADER LINE,</span><br><span class="line">        LT_ITEMDATA_CHANGE     TYPE TABLE OF BAPI_INCINV_CREATE_ITEM WITH HEADER LINE,</span><br><span class="line">        LT_ACCOUNTINGDATA      TYPE TABLE OF BAPI_INCINV_CREATE_ACCOUNT WITH HEADER LINE,</span><br><span class="line">        LT_GLACCOUNTDATA       TYPE TABLE OF BAPI_INCINV_CREATE_GL_ACCOUNT WITH HEADER LINE,</span><br><span class="line">        LT_MATERIALDATA        TYPE TABLE OF BAPI_INCINV_CREATE_MATERIAL WITH HEADER LINE,</span><br><span class="line">        LT_TAXDATA             TYPE TABLE OF BAPI_INCINV_DETAIL_TAX WITH HEADER LINE,</span><br><span class="line">        LT_TAXDATA_CHANGE      TYPE TABLE OF BAPI_INCINV_CREATE_TAX WITH HEADER LINE,</span><br><span class="line">        LT_WITHTAXDATA         TYPE TABLE OF BAPI_INCINV_CREATE_VENDORSPLIT WITH HEADER LINE,</span><br><span class="line">        LT_VENDORITEMSPLITDATA TYPE TABLE OF BAPI_INCINV_CREATE_ITEM WITH HEADER LINE,</span><br><span class="line">        LT_RETURN              TYPE TABLE OF BAPIRET2 WITH HEADER LINE,</span><br><span class="line">        LT_EXTENSIONIN         TYPE TABLE OF BAPI_INCINV_CREATE_TM_ITEM WITH HEADER LINE,</span><br><span class="line">        LT_TM_ITEMDATA         TYPE TABLE OF /NFM/BAPIDOCITM WITH HEADER LINE,</span><br><span class="line">        LV_WRBTR               TYPE BAPIWRBTR,</span><br><span class="line">        LT_FTAXP               TYPE TABLE OF FTAXP,</span><br><span class="line">        LV_ITEM                TYPE  RBLGP,</span><br><span class="line">        LV_STATUS              TYPE CHAR01,</span><br><span class="line">        LV_ICON                TYPE CHAR04,</span><br><span class="line">        LV_MESSAGE             TYPE STRING.</span><br><span class="line"> </span><br><span class="line">  DATA: LS_TABLE_CHANGE       TYPE BAPI_INCINV_CHNG_TABLES,</span><br><span class="line">        LS_HEADERDATA_CHANGE  TYPE  BAPI_INCINV_CHNG_HEADER,</span><br><span class="line">        LS_HEADERDATA_CHANGEX TYPE  BAPI_INCINV_CHNG_HEADERX.</span><br><span class="line"> </span><br><span class="line">  DATA(LT_ONLY) = GT_RBKP_DATA.</span><br><span class="line"> </span><br><span class="line">  DELETE LT_ONLY WHERE BOX IS INITIAL OR BELNR IS INITIAL.</span><br><span class="line"> </span><br><span class="line">  SORT LT_ONLY BY GJAHR BELNR.</span><br><span class="line">  DELETE ADJACENT DUPLICATES FROM LT_ONLY COMPARING GJAHR BELNR.</span><br><span class="line"> </span><br><span class="line">  &quot; 数据校验</span><br><span class="line">  LOOP AT LT_ONLY INTO DATA(LS_ONLY).</span><br><span class="line">    CLEAR:LV_STATUS.</span><br><span class="line">    IF LS_ONLY-RBSTAT = &#x27;5&#x27;.</span><br><span class="line">      LV_STATUS = &#x27;E&#x27;.</span><br><span class="line">      GS_RBKP_DATA-ICON = ICON_LED_RED.</span><br><span class="line">      GS_RBKP_DATA-MSG = &#x27;凭证已过账，无法修改；&#x27;.</span><br><span class="line">      MODIFY GT_RBKP_DATA FROM GS_RBKP_DATA TRANSPORTING ICON MSG WHERE BOX = &#x27;X&#x27; AND GJAHR = LS_ONLY-GJAHR AND BELNR = LS_ONLY-BELNR.</span><br><span class="line">    ENDIF.</span><br><span class="line"> </span><br><span class="line">    CALL FUNCTION &#x27;BAPI_INCOMINGINVOICE_GETDETAIL&#x27;</span><br><span class="line">      EXPORTING</span><br><span class="line">        INVOICEDOCNUMBER = LS_ONLY-BELNR</span><br><span class="line">        FISCALYEAR       = LS_ONLY-GJAHR</span><br><span class="line">      IMPORTING</span><br><span class="line">        HEADERDATA       = LS_HEADERDATA</span><br><span class="line">*       ADDRESSDATA      =</span><br><span class="line">      TABLES</span><br><span class="line">        ITEMDATA         = LT_ITEMDATA</span><br><span class="line">*       ACCOUNTINGDATA   =</span><br><span class="line">*       GLACCOUNTDATA    =</span><br><span class="line">*       MATERIALDATA     =</span><br><span class="line">        TAXDATA          = LT_TAXDATA</span><br><span class="line">*       WITHTAXDATA      =</span><br><span class="line">*       VENDORITEMSPLITDATA       =</span><br><span class="line">        RETURN           = LT_RETURN</span><br><span class="line">*       EXTENSIONOUT     =</span><br><span class="line">*       TMDATA           =</span><br><span class="line">*       NFMETALLITMS     =</span><br><span class="line">      .</span><br><span class="line"> </span><br><span class="line">    CASE LS_ONLY-TYPE+0(1).</span><br><span class="line">      WHEN &#x27;1&#x27; OR &#x27;3&#x27;.</span><br><span class="line">        LS_HEADERDATA-INVOICE_IND = &#x27;X&#x27;.</span><br><span class="line">      WHEN &#x27;2&#x27; OR &#x27;4&#x27;.</span><br><span class="line">        LS_HEADERDATA-INVOICE_IND = SPACE.</span><br><span class="line">      WHEN OTHERS.</span><br><span class="line">    ENDCASE.</span><br><span class="line"> </span><br><span class="line">    LS_HEADERDATA_CHANGE-DOC_DATE = LS_ONLY-BLDAT. &quot;凭证日期</span><br><span class="line">    LS_HEADERDATA_CHANGE-PSTNG_DATE = LS_ONLY-BUDAT. &quot;过账日期</span><br><span class="line">    LS_HEADERDATA_CHANGE-BLINE_DATE = LS_ONLY-ZFBDT.  &quot;基准日期</span><br><span class="line">    LS_HEADERDATA_CHANGE-DIFF_INV = LS_ONLY-LIFNR.  &quot;供应商</span><br><span class="line">    LS_HEADERDATA_CHANGE-REF_DOC_NO = LS_ONLY-XBLNR. &quot; 参考</span><br><span class="line">    LS_HEADERDATA_CHANGE-HEADER_TXT = LS_ONLY-BKTXT. &quot; 抬头文本</span><br><span class="line">    LS_HEADERDATA_CHANGE-GROSS_AMOUNT = LS_ONLY-RMWWR. &quot; 总金额</span><br><span class="line">    LS_HEADERDATA_CHANGE-CALC_TAX_IND = LS_ONLY-CAL_IND. &quot; 自动计算税额</span><br><span class="line"> </span><br><span class="line">    LS_HEADERDATA_CHANGEX-DOC_DATE = &#x27;X&#x27;.</span><br><span class="line">    LS_HEADERDATA_CHANGEX-PSTNG_DATE = &#x27;X&#x27;.</span><br><span class="line">    LS_HEADERDATA_CHANGEX-BLINE_DATE = &#x27;X&#x27;.</span><br><span class="line">    LS_HEADERDATA_CHANGEX-DIFF_INV = &#x27;X&#x27;.</span><br><span class="line">    LS_HEADERDATA_CHANGEX-REF_DOC_NO = &#x27;X&#x27;.</span><br><span class="line">    LS_HEADERDATA_CHANGEX-HEADER_TXT = &#x27;X&#x27;.</span><br><span class="line">    LS_HEADERDATA_CHANGEX-GROSS_AMOUNT = &#x27;X&#x27;.</span><br><span class="line">    LS_HEADERDATA_CHANGEX-CALC_TAX_IND = &#x27;X&#x27;.</span><br><span class="line">    LOOP AT LT_ITEMDATA.</span><br><span class="line">      READ TABLE GT_RBKP_DATA INTO GS_RBKP_DATA WITH KEY BOX = &#x27;X&#x27; EBELN = LT_ITEMDATA-PO_NUMBER EBELP = LT_ITEMDATA-PO_ITEM.</span><br><span class="line">      IF SY-SUBRC = 0.</span><br><span class="line">        LT_ITEMDATA-ITEM_AMOUNT = GS_RBKP_DATA-WRBTR. &quot; 金额</span><br><span class="line">        LT_ITEMDATA-QUANTITY = GS_RBKP_DATA-MENGE.</span><br><span class="line">        LT_ITEMDATA-TAX_CODE = GS_RBKP_DATA-MWSKZ.</span><br><span class="line">        LT_ITEMDATA-ITEM_TEXT = GS_RBKP_DATA-SGTXT. &quot; 文本</span><br><span class="line">      ENDIF.</span><br><span class="line">      LT_ITEMDATA-ITEM_AMOUNT = ABS( LT_ITEMDATA-ITEM_AMOUNT ).</span><br><span class="line">      IF LS_HEADERDATA-INVOICE_IND NE &#x27;X&#x27;.</span><br><span class="line">        LT_ITEMDATA-ITEM_AMOUNT = LT_ITEMDATA-ITEM_AMOUNT * -1.</span><br><span class="line">      ENDIF.</span><br><span class="line">      CASE LS_ONLY-TYPE+0(1).</span><br><span class="line">        WHEN &#x27;1&#x27; OR &#x27;2&#x27;.</span><br><span class="line">          LT_ITEMDATA-DE_CRE_IND  = SPACE.</span><br><span class="line">        WHEN &#x27;3&#x27; OR &#x27;4&#x27;.</span><br><span class="line">          LT_ITEMDATA-DE_CRE_IND = &#x27;X&#x27;.</span><br><span class="line">        WHEN OTHERS.</span><br><span class="line">      ENDCASE.</span><br><span class="line">      CLEAR:LT_ITEMDATA_CHANGE.</span><br><span class="line">      MOVE-CORRESPONDING LT_ITEMDATA TO LT_ITEMDATA_CHANGE.</span><br><span class="line">      APPEND LT_ITEMDATA_CHANGE.</span><br><span class="line">    ENDLOOP.</span><br><span class="line"> </span><br><span class="line">    LT_TAXDATA_CHANGE-TAX_CODE = LS_ONLY-MWSKZ.</span><br><span class="line">    LT_TAXDATA_CHANGE-TAX_AMOUNT = LS_ONLY-WMWST1.</span><br><span class="line">    IF LS_ONLY-CAL_IND IS INITIAL.</span><br><span class="line">      APPEND LT_TAXDATA_CHANGE.</span><br><span class="line">      LS_TABLE_CHANGE-TAXDATA = &#x27;X&#x27;.</span><br><span class="line">    ENDIF.</span><br><span class="line"> </span><br><span class="line">    LS_TABLE_CHANGE-ITEMDATA = &#x27;X&#x27;.</span><br><span class="line">    CALL FUNCTION &#x27;BAPI_INCOMINGINVOICE_CHANGE&#x27;</span><br><span class="line">      EXPORTING</span><br><span class="line">        INVOICEDOCNUMBER     = LS_ONLY-BELNR</span><br><span class="line">        FISCALYEAR           = LS_ONLY-GJAHR</span><br><span class="line">        INVOICE_DOC_STATUS   = &#x27;A&#x27;</span><br><span class="line">        TABLE_CHANGE         = LS_TABLE_CHANGE</span><br><span class="line">        HEADERDATA_CHANGE    = LS_HEADERDATA_CHANGE</span><br><span class="line">        HEADERDATA_CHANGEX   = LS_HEADERDATA_CHANGEX</span><br><span class="line">*       ADRESSDATA_CHANGE    =</span><br><span class="line">*       ADRESSDATA_CHANGEX   =</span><br><span class="line">      IMPORTING</span><br><span class="line">        INVOICEDOCNUMBER_NEW = LV_INVOICEDOCNUMBER</span><br><span class="line">        FISCALYEAR_NEW       = LV_FISCALYEAR</span><br><span class="line">      TABLES</span><br><span class="line">        ITEMDATA             = LT_ITEMDATA_CHANGE</span><br><span class="line">*       ACCOUNTINGDATA       =</span><br><span class="line">*       GLACCOUNTDATA        =</span><br><span class="line">*       MATERIALDATA         =</span><br><span class="line">        TAXDATA              = LT_TAXDATA_CHANGE</span><br><span class="line">*       WITHTAXDATA          =</span><br><span class="line">*       VENDORITEMSPLITDATA  =</span><br><span class="line">        RETURN               = LT_RETURN</span><br><span class="line">*       EXTENSIONIN          =</span><br><span class="line">*       TM_ITEMDATA          =</span><br><span class="line">      .</span><br><span class="line"> </span><br><span class="line">    CLEAR:LV_MESSAGE.</span><br><span class="line">    LOOP AT LT_RETURN WHERE TYPE CA &#x27;EAX&#x27;.</span><br><span class="line">      LV_MESSAGE = LV_MESSAGE &amp;&amp; LT_RETURN-MESSAGE &amp;&amp; &#x27;；&#x27;.</span><br><span class="line">    ENDLOOP.</span><br><span class="line"> </span><br><span class="line">    IF SY-SUBRC NE 0.</span><br><span class="line">      COMMIT WORK AND WAIT.</span><br><span class="line"> </span><br><span class="line">      LV_MESSAGE = |修改成功；|.</span><br><span class="line">      LV_ICON = ICON_LED_GREEN.</span><br><span class="line">    ELSE.</span><br><span class="line">      ROLLBACK WORK.</span><br><span class="line">      LV_ICON = ICON_LED_RED.</span><br><span class="line">    ENDIF.</span><br><span class="line"> </span><br><span class="line">    LOOP AT GT_RBKP_DATA INTO GS_RBKP_DATA WHERE BOX = &#x27;X&#x27; AND GJAHR = LS_ONLY-GJAHR AND BELNR = LS_ONLY-BELNR.</span><br><span class="line">      GS_RBKP_DATA-ICON = LV_ICON.</span><br><span class="line">      GS_RBKP_DATA-MSG = LV_MESSAGE.</span><br><span class="line">      MODIFY GT_RBKP_DATA FROM GS_RBKP_DATA.</span><br><span class="line">    ENDLOOP.</span><br><span class="line">  ENDLOOP.</span><br><span class="line"> </span><br><span class="line">ENDFORM.</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FORM FRM_DELETE_ROW .</span><br><span class="line"> </span><br><span class="line">  DATA: LT_RETURN  TYPE TABLE OF BAPIRET2 WITH HEADER LINE,</span><br><span class="line">        LV_MESSAGE TYPE STRING.</span><br><span class="line"> </span><br><span class="line">  DATA(LT_ONLY) = GT_RBKP_DATA.</span><br><span class="line"> </span><br><span class="line">  DELETE LT_ONLY WHERE BOX IS INITIAL OR BELNR IS INITIAL.</span><br><span class="line"> </span><br><span class="line">  SORT LT_ONLY BY GJAHR BELNR.</span><br><span class="line">  DELETE ADJACENT DUPLICATES FROM LT_ONLY COMPARING GJAHR BELNR.</span><br><span class="line"> </span><br><span class="line">  LOOP AT LT_ONLY INTO DATA(LS_ONLY).</span><br><span class="line">    CALL FUNCTION &#x27;BAPI_INCOMINGINVOICE_DELETE&#x27;</span><br><span class="line">      EXPORTING</span><br><span class="line">        INVOICEDOCNUMBER = LS_ONLY-BELNR</span><br><span class="line">        FISCALYEAR       = LS_ONLY-GJAHR</span><br><span class="line">      TABLES</span><br><span class="line">        RETURN           = LT_RETURN.</span><br><span class="line"> </span><br><span class="line">    LOOP AT LT_RETURN WHERE TYPE CA &#x27;EAX&#x27;.</span><br><span class="line">      LV_MESSAGE = LV_MESSAGE &amp;&amp; LT_RETURN-MESSAGE &amp;&amp; &#x27;；&#x27;.</span><br><span class="line">    ENDLOOP.</span><br><span class="line"> </span><br><span class="line">    IF SY-SUBRC NE 0.</span><br><span class="line">      COMMIT WORK AND WAIT.</span><br><span class="line">      DELETE GT_RBKP_DATA WHERE GJAHR = LS_ONLY-GJAHR AND BELNR = LS_ONLY-BELNR.</span><br><span class="line">    ELSE.</span><br><span class="line">      LOOP AT GT_RBKP_DATA INTO GS_RBKP_DATA WHERE BOX = &#x27;X&#x27; AND GJAHR = LS_ONLY-GJAHR AND BELNR = LS_ONLY-BELNR.</span><br><span class="line">        GS_RBKP_DATA-ICON = ICON_LED_RED.</span><br><span class="line">        GS_RBKP_DATA-MSG = LV_MESSAGE.</span><br><span class="line">        MODIFY GT_RBKP_DATA FROM GS_RBKP_DATA.</span><br><span class="line">      ENDLOOP.</span><br><span class="line">    ENDIF.</span><br><span class="line">  ENDLOOP.</span><br><span class="line">ENDFORM.</span><br></pre></td></tr></table></figure>
</li>
<li><p>过账</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FORM FRM_DELETE_ROW .</span><br><span class="line"> </span><br><span class="line">  DATA: LT_RETURN  TYPE TABLE OF BAPIRET2 WITH HEADER LINE,</span><br><span class="line">        LV_MESSAGE TYPE STRING.</span><br><span class="line"> </span><br><span class="line">  DATA(LT_ONLY) = GT_RBKP_DATA.</span><br><span class="line"> </span><br><span class="line">  DELETE LT_ONLY WHERE BOX IS INITIAL OR BELNR IS INITIAL.</span><br><span class="line"> </span><br><span class="line">  SORT LT_ONLY BY GJAHR BELNR.</span><br><span class="line">  DELETE ADJACENT DUPLICATES FROM LT_ONLY COMPARING GJAHR BELNR.</span><br><span class="line"> </span><br><span class="line">  LOOP AT LT_ONLY INTO DATA(LS_ONLY).</span><br><span class="line">    CALL FUNCTION &#x27;BAPI_INCOMINGINVOICE_POST&#x27;</span><br><span class="line">      EXPORTING</span><br><span class="line">        INVOICEDOCNUMBER = LS_ONLY-BELNR</span><br><span class="line">        FISCALYEAR       = LS_ONLY-GJAHR</span><br><span class="line">      TABLES</span><br><span class="line">        RETURN           = LT_RETURN.</span><br><span class="line"> </span><br><span class="line">    LOOP AT LT_RETURN WHERE TYPE CA &#x27;EAX&#x27;.</span><br><span class="line">      LV_MESSAGE = LV_MESSAGE &amp;&amp; LT_RETURN-MESSAGE &amp;&amp; &#x27;；&#x27;.</span><br><span class="line">    ENDLOOP.</span><br><span class="line"> </span><br><span class="line">    IF SY-SUBRC NE 0.</span><br><span class="line">      COMMIT WORK AND WAIT.</span><br><span class="line">      </span><br><span class="line">    ELSE.</span><br><span class="line"> </span><br><span class="line">    ENDIF.</span><br><span class="line">  ENDLOOP.</span><br><span class="line">ENDFORM.</span><br></pre></td></tr></table></figure>
<h2 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h2><p>&#x2F;</p>
</li>
</ol>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>OLTP与OLAP的区别</title>
    <url>/2022/06/30/OLTP%E4%B8%8EOLAP%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<p><strong>联机事务处理（On-Line Transaction Processing，OLTP）</strong><br><strong>联机分析处理（On-Line Analytical Processing，OLAP）</strong></p>
<p>OLTP和OLAP主要区别有：<br><strong>1、基本含义不同：</strong></p>
<ul>
<li>OLTP是传统的关系型数据库的主要应用，主要是基本的、日常的事务处理，记录即时的增、删、改、查，比如在银行存取一笔款，就是一个事务交易。</li>
<li>OLAP即联机分析处理，是数据仓库的核心部心，支持复杂的分析操作，侧重决策支持，并且提供直观易懂的查询结果。典型的应用就是复杂的动态报表系统。</li>
</ul>
<p><strong>2、实时性要求不同：</strong></p>
<ul>
<li>OLTP实时性要求高，OLTP 数据库旨在使事务应用程序仅写入所需的数据，以便尽快处理单个事务。</li>
<li>OLAP的实时性要求不是很高，很多应用顶多是每天更新一下数据。</li>
</ul>
<p><strong>3、数据量不同：</strong></p>
<ul>
<li>OLTP数据量不是很大，一般只读&#x2F;写数十条记录，处理简单的事务。</li>
<li>OLAP数据量大，因为OLAP支持的是动态查询，所以用户也许要通过将很多数据的统计后才能得到想要知道的信息，例如时间序列分析等等，所以处理的数据量很大。</li>
</ul>
<p><strong>4、用户和系统的面向性不同：</strong></p>
<ul>
<li>OLTP是面向顾客的,用于事务和查询处理。</li>
<li>OLAP是面向市场的,用于数据分析。</li>
</ul>
<p><strong>5、数据库设计不同：</strong></p>
<ul>
<li>OLTP采用实体-联系ER模型和面向应用的数据库设计。</li>
<li>OLAP采用星型或雪花模型和面向主题的数据库设计。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20191114152931845.png" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>数据</category>
      </categories>
      <tags>
        <tag>数据</tag>
      </tags>
  </entry>
  <entry>
    <title>Kettle实战学习</title>
    <url>/2022/10/20/Kettle%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h3 id="实现目标"><a href="#实现目标" class="headerlink" title="实现目标"></a>实现目标</h3><p>实现的目标是获取钉钉系统里所有日志信息，并写入数据库</p>
<h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><p>使用kettle请求钉钉日志接口，解析获取到的json结构，然后写入数据库。由于钉钉日志接口最大每次获取20个人记录，所以还需要根据关键字段判断是否需要继续执行，直到执行完毕。<br>这里要注意的是kettle里只有作业才可以执行循环，转换不能执行循环作业。</p>
<h3 id="具体思路"><a href="#具体思路" class="headerlink" title="具体思路"></a>具体思路</h3><p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221020201351.png" alt="20221020201351"></p>
<p>先拖一个start，默认的组件，然后设置变量，这里的变量是has_more 和 zcursor，主要的作用是has_more查询是否还有下一条记录。zcursor是下一条记录的游标字段。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221020201623.png" alt="20221020201623"></p>
<p>其次，获取token，获取token写了一个转换任务。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221020201747.png" alt="20221020201747"></p>
<ol>
<li><p>先构造参数，将获取token中的url、body、method等关键字段先进行定义。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221020201841.png" alt="20221020201841"></p>
</li>
<li><p>直接用rest组件根据构造参数里变量进行定义<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221020201923.png" alt="20221020201923"></p>
</li>
<li><p>直接用json组件，根据路径获取返回的token结果<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221020202000.png" alt="20221020202000"></p>
</li>
<li><p>把拿到的token放到全局变量中，方便后面的job作业使用<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221020202030.png" alt="20221020202030"></p>
</li>
</ol>
<p>token获取完毕后进入脚本验证，这里的脚本验证是判断has_more的变量是否发生了改变，然后根据判断条件是否进入循环和结束。在这个节点后面红色线条指向结束，即当判断条件为false的情况下结束，绿色线条指向循环，意思是当判断条件为true时进入循环。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221020202320.png" alt="20221020202320"></p>
<p>如果判断条件为false直接进入结束组件。</p>
<p>如果判断条件为true进入循环组件。循环组件中定义了一个请求日志的转换，然后定义一个dummy组件。由于循环只能是最少3个组件间循环，所以需要一个dummy组件来填补。</p>
<p>请求日志转换任务：<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221020202858.png" alt="20221020202858"></p>
<ol>
<li><p>拖一个生成记录<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221020202923.png" alt="20221020202923"></p>
</li>
<li><p>拼接js脚本，形成请求的记录<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221020203006.png" alt="20221020203006"></p>
</li>
<li><p>restful接口请求<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221020203101.png" alt="20221020203101"></p>
</li>
<li><p>解析json结果，一层层的解析结果，并拆出多条记录<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221020203144.png" alt="20221020203144"></p>
</li>
<li><p>拉一个表输出，输出到数据库<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221020203233.png" alt="20221020203233"></p>
</li>
</ol>
<p>kettle接口完成，然后部署到服务器上，最后设一个定时任务，完成。</p>
]]></content>
      <categories>
        <category>数据</category>
      </categories>
      <tags>
        <tag>数据</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP会计凭证类型总结</title>
    <url>/2022/06/07/SAP%E4%BC%9A%E8%AE%A1%E5%87%AD%E8%AF%81%E7%B1%BB%E5%9E%8B%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="1、SAP凭证类型作用"><a href="#1、SAP凭证类型作用" class="headerlink" title="1、SAP凭证类型作用"></a>1、SAP凭证类型作用</h2><p>传统的财务的系统凭证类型如收付转三类凭证类型，而SAP的凭证类型是用来区分业务的。</p>
<ul>
<li>凭证类型决定记账编号范围，常见的Tcode中FBN1维护编号范围，OBH1+OBH2复制编号范围</li>
<li>凭证类型决定了过账的会计科目的账户类型（S、A、D、K、M）</li>
<li>凭证类型决定了记账的默认汇率，默认的是M类型的汇率类型。</li>
<li>凭证类型决定了凭证抬头的参考号码+凭证抬头文本是否必输。</li>
<li>凭证类型决定允许负数记账、贸易伙伴必输、公司间过账等参数。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116204059594.png" alt="在这里插入图片描述"></p>
<h2 id="2、SAP常见凭证类型"><a href="#2、SAP常见凭证类型" class="headerlink" title="2、SAP常见凭证类型"></a>2、SAP常见凭证类型</h2><p>如上所述，SAP的凭证类型是用来区分业务，一般项目采用SAP默认的凭证类型清单即可满足业务需求。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116204149149.png" alt="在这里插入图片描述"></p>
<h2 id="3、OBU1：FI相应事务代码默认凭证类型"><a href="#3、OBU1：FI相应事务代码默认凭证类型" class="headerlink" title="3、OBU1：FI相应事务代码默认凭证类型"></a>3、OBU1：FI相应事务代码默认凭证类型</h2><p>通过OBU1可更改大部分FI事务代码的默认凭证类型，但是FB50&#x2F;FB60&#x2F;FB70这几个事务代码的凭证类型是不能直接更改的</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116204235953.png" alt="img"></p>
<h2 id="4、OBZO：更改感兴趣业务的凭证类型"><a href="#4、OBZO：更改感兴趣业务的凭证类型" class="headerlink" title="4、OBZO：更改感兴趣业务的凭证类型"></a>4、OBZO：更改感兴趣业务的凭证类型</h2><p>通过OBZO即可实现对FB50、60、70默认凭证类型的更改</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116204259797.png" alt="在这里插入图片描述"></p>
<ul>
<li>第一步：FB50&#x2F;FB60&#x2F;FB70这些默认的凭证不允许修改，但可通过设置OBZO就可以修改了，可能需要打NOTES-323113，也可以通过用户参数BAR默认FB50的凭证类型</li>
<li>你第二步：实施Notes-339765<br>优先级问题</li>
</ul>
<p>OBZO维护的默认凭证类型<br>用户参数BAR维护的凭证类型<br>程序写死的SA、KR、DR</p>
<h2 id="5、OMBA：后勤货物移动默认凭证类型"><a href="#5、OMBA：后勤货物移动默认凭证类型" class="headerlink" title="5、OMBA：后勤货物移动默认凭证类型"></a>5、OMBA：后勤货物移动默认凭证类型</h2><p>OMJJ对各种移动类型默认可使用的事务，然后通过OMBA对事务进行默认凭证类型。我们来举个栗子来，比如WI盘点凭证，你们看看各自的SAP系统是WI还是WA凭证类型，取决于你的盘点流程是采用标准的MI07还是借用701&#x2F;702通过MIGO_GI来处理。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116204352139.png" alt="在这里插入图片描述"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116204407986.png" alt="在这里插入图片描述"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116204423577.png" alt="在这里插入图片描述"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116204437214.png" alt="在这里插入图片描述"></p>
<h2 id="6、OMR4：发票默认的凭证类型"><a href="#6、OMR4：发票默认的凭证类型" class="headerlink" title="6、OMR4：发票默认的凭证类型"></a>6、OMR4：发票默认的凭证类型</h2><p>CKMI就是物料帐结算的事务代码，默认的是ML</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116204457539.png" alt="在这里插入图片描述"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116204509783.png" alt="在这里插入图片描述"></p>
<p>MIR7采购部预制发票</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/2021011620453342.png" alt="在这里插入图片描述"></p>
<p>MIRO采购部直接发票过账</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116204554606.png" alt="在这里插入图片描述"></p>
<p>MR21标准价格变更</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/2021011620490257.png" alt="在这里插入图片描述"></p>
<p>MR22移动价格变更</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116205017877.png" alt="在这里插入图片描述"></p>
<p>MR8M取消供应商发票</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116205250457.png" alt="在这里插入图片描述"></p>
<p>MRKO供应商寄售的凭证类型</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116205348662.png" alt="在这里插入图片描述"></p>
<h2 id="7、VOFA：销售开票默认凭证类型"><a href="#7、VOFA：销售开票默认凭证类型" class="headerlink" title="7、VOFA：销售开票默认凭证类型"></a>7、VOFA：销售开票默认凭证类型</h2><p>销售开票凭证类型会对应不同的会计凭证类型</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116205639312.png" alt="在这里插入图片描述"></p>
<h2 id="8、OKO7：订单结算默认凭证类型"><a href="#8、OKO7：订单结算默认凭证类型" class="headerlink" title="8、OKO7：订单结算默认凭证类型"></a>8、OKO7：订单结算默认凭证类型</h2><p>只要生产订单、销售订单、WBS结算、内部订单结算的凭证类型都在这默认。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116205705570.png" alt="在这里插入图片描述"></p>
<h2 id="9、OB59：外币评估默认凭证类型"><a href="#9、OB59：外币评估默认凭证类型" class="headerlink" title="9、OB59：外币评估默认凭证类型"></a>9、OB59：外币评估默认凭证类型</h2><p>通过外币评估方法直接定义凭证类型。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/2021011620573211.png" alt="在这里插入图片描述"></p>
<h2 id="10、FBKP：清账程序默认凭证类型"><a href="#10、FBKP：清账程序默认凭证类型" class="headerlink" title="10、FBKP：清账程序默认凭证类型"></a>10、FBKP：清账程序默认凭证类型</h2><p>比如说你是否意识到F.13自动清账产生的会计凭证凭证类型？</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116205756623.png" alt="在这里插入图片描述"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/2021011620584369.png" alt="在这里插入图片描述"></p>
<h2 id="11、GRIR重分类默认的凭证类型"><a href="#11、GRIR重分类默认的凭证类型" class="headerlink" title="11、GRIR重分类默认的凭证类型"></a>11、GRIR重分类默认的凭证类型</h2><p>这个SAP就没有地方来默认凭证类型了</p>
<p>直接在源程序上写了一段话，这也算隐式增强吧！</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116205945790.png" alt="在这里插入图片描述"></p>
<h2 id="12、FAGLF101往来重分类默认凭证类型"><a href="#12、FAGLF101往来重分类默认凭证类型" class="headerlink" title="12、FAGLF101往来重分类默认凭证类型"></a>12、FAGLF101往来重分类默认凭证类型</h2><p>往来重分类必然会用到评估范围，通过新增评估方法达到新增评估范围的作用，即可实现对往来重分类默认不同的会计科目。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116210011282.png" alt="在这里插入图片描述"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116210024300.png" alt="在这里插入图片描述"></p>
<p>如果想要在进入faglf101就直接默认凭证类型，可做一个小增强</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20210116210050103.png" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP变式配置BOM实现</title>
    <url>/2022/06/20/SAP%E5%8F%98%E5%BC%8F%E9%85%8D%E7%BD%AEBOM%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<p>**业务场景:**一般用于按单生产,且每次的订单BOM都不是固定的,但企业不可能为每一张订单所生产的产品都建立不同的物料编码.最常见的例子是按客户需求组装电脑,客户根据需求选择不同的配置,主板品牌,CPU 型号,硬盘容量等等参数,选择完毕后,组装电脑的 BOM 才确定下来.在 SAP 中,实现该过程是这样的:销售订单下达的时候,会提示该成品的特性,由用户去选择或填入相关特性,系统根据这些特性从一个最全的 BOM(SAP 称为超级 BOM)中做逻辑判断(SAP 称为相关性),配置出符合这个销售订单的 BOM.该业务场景在 SAP 中称为可配置 BOM 的实现。</p>
<p>下面举个例子说明如何实现可配置 BOM.要实现可配置 BOM,首先需要一个可配置物料,什么叫可配置物料,可以理解为最终成品的父亲,关系图如下:</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/mcn2u927lr.png" alt="img"></p>
<p>从上图可看出,可配置物料里含有该产品系列中覆盖到的所有组成的材料,正常的成品物料与可配置物料存在依赖关系,通过设定好的相关性来生成最终的 BOM 结构.可配置物料的 BOM 在 SAP 中称为超级 BOM.下面按照以下步骤实现这个过程:</p>
<p><strong>配置实现:</strong></p>
<p>\1. 建立特性(事务码 CT04)所谓的特性,就是描述该成品的特性.在上图中是建立相关性要用到这个特性,我们通过产品的不同特性来决定最终BOM 的构成. </p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/ctsfbj4e4y.jpeg" alt="img"></p>
<p>我们建立一个关于颜色的特性，类型：字符格式，值分配：单一性项目，意思是只能单选。特性值我们设置2个，分别为红色和黄色。</p>
<p>按照上述，我们依次建立2个特性，分别是Z101(颜色） 特性值Z1:红，Z2:黄；Z103(性别）特性值Z1:男，Z2：女。</p>
<p>2.建立分类（CL02）</p>
<p>在特性界面分配上述特性，即把我们上述建立的特性打包起来，再赋予给可配置物料物料。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/3jkof4dptn.jpeg" alt="img"></p>
<p>3.创建可配置物料（MM01）</p>
<p>物料类型选KMAT可配置物料：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/li2zt5wnrs.jpeg" alt="img"></p>
<p>项目类别组0002，策略组25</p>
<p>4.创建超级BOM中的其他物料（MM01）</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/rbjbqjt8ic.jpeg" alt="img"></p>
<p>由于原材料需要在半成品中配置出来，所以需要勾选物料时可配置的</p>
<p>5.把分类分配给物料（CL20N）</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/zzaye6aepy.jpeg" alt="img"></p>
<p>6.创建相关性（CU01）</p>
<p>相关性就是建立一个逻辑，让系统自动判断，当用户选择特性或填写特性值，自动匹配出我们所需的物料或物料的用量。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/zucy1yh8qn.jpeg" alt="img"></p>
<p>相关性类型选择(选择条件），点击编辑器，写入代码：Z101&#x3D;’Z1’，意思是当用户选择Z101颜色特性为红色的时候，我们的原材料1被选中，回到前面的前面，记得把状态更改为1下达。</p>
<p>同样的道理，设置其余物料的相关性。</p>
<p>7.创建超级BOM(CS01)</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/wv0wrvr4cv.jpeg" alt="img"></p>
<p>点绿色的箭头，把相关性维护到物料上</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/r7jyp0nfgi.png" alt="img"></p>
<p>建立完毕后，可以看到OD标志（含相关性）被打上勾</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/0qcko7q8l7.jpeg" alt="img"></p>
<p>同样的方式，我们在半成品1中也进行设置</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/8nihjt65jh.jpeg" alt="img"></p>
<p>创建完成后，用CS12展开整个可配置BOM的结构：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/ziitg7bcq0.jpeg" alt="img"></p>
<p>8.创建物料的可配置参数文件（CU41）</p>
<p>主要是设定可配置物料在执行配置时候的界面参数</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/hdxde7yffa.jpeg" alt="img"></p>
<p>9.检查和测试可配置物料（CU50）</p>
<p>用于测试特性是否生效，成本核算是否正确，成本核算是否出来，前提还需要为相应的成品和半成品建立工艺路线。</p>
<p>点右上角的配置按钮，输入特性值：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/8kpyvwgcip.jpeg" alt="img"></p>
<p>输入特性值后，点结果按钮显示配置出来的BOM结构：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/jyld9q8hhp.jpeg" alt="img"></p>
<p>如上图所示，当我们输入颜色特性是Z1红色，性别特性是Z1女，显示的BOM结构是把超级BOM中的原材料2和原材料4，符合我们的相关性设置。</p>
<p>再切换到特性界面，点成本核算按钮，成本核算变式选PPC4销售订单成本核算，传递控制选择PC01带工厂的传输，回车，可以看到产品成本：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/7jv67r939i.jpeg" alt="img"></p>
<p>10.创建正常的成品物料（MM01）</p>
<p>已有可配置物料，为什么不直接用可配置物料下达销售订单？由于可配置物料的物料类型是KMAT,默认不参与数量价值的更新，不能实现库存管理，所以，需要用一个正常的成品把可配置物料关联起来，MRP3视图中，需要制定关联到哪个可配置物料：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/sm6t8xnqn3.jpeg" alt="img"></p>
<p>11.执行正常物料与可配置物料的连接（CS40）</p>
<p>指定新建的成品与可配置物料的BOM建立连接</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/y5gohmx6q2.jpeg" alt="img"></p>
<p>勾选保存即可。建立连接后的成品BOM查看只能用CS12查看，不能用CS03</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/4kvhylxsc7.jpeg" alt="img"></p>
<p>我们可以看到CS12展开的BOM,只显示了一个半成品1，那是因为创建该成品的时候，分类特性1个都没有填写。</p>
<p>至此，我们所有基础数据已经准备完成，看看具体的销售订单和MRP的执行。</p>
<p><strong>业务实现：</strong></p>
<ol>
<li>创建销售订单（VA01） 输入正常成品，会提示选择特性：</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/4dw4n53jf4.png" alt="img"></p>
<ol>
<li>执行MRP运算（MD41） 会产生相应的计划订单，产生的计划订单类型是KD个别客户订单</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/tup614zo32.jpeg" alt="img"></p>
<ol>
<li><p>展开订单树 可以看到与特性值对应的物料的计划订单&#x2F;采购申请按需求产生</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/hy0acr1100.jpeg" alt="img"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP变式配置</title>
    <url>/2022/06/20/SAP%E5%8F%98%E5%BC%8F%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p><strong>1 VC基本概念及应用场景</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-9bd726088c625aff64211aacf1443e56_720w.jpg" alt="img"></p>
<p>VC是Variant Configuration，是依据客户需求做选择配置，完成后通过Super BOM及Super Routing结合相关性找到找到所需要物料及工序，来简化客户操作，减少BOM、物料及工艺路线的维护工作量。</p>
<p>但启用VC会增加BOM的维护复杂度，增加IT部门的工作量。VC的使用非常广泛，例如：电子消费品行业，家居行业(沙发)，凡是定制化生产的企业均可以尝试考虑一下VC是否能给企业带来便利。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-a500d9b6457cef02b54e1bf53446e7c0_720w.jpg" alt="img"></p>
<p>如图是联想针对ThinkPad定制化销售的WEB界面，界面上可以对“操作系统”、“显示屏”、“显卡”、“内存”等进行选配，但这不是SAP系统的标准的选配界面，但SAP可以向前和向后做扩展兼容，如：WEB，手机APP，SAP-Fiori等都可以用运用到可配置VC，同时</p>
<p>VC功能不仅仅是运用在ERP上，在其他的系统也能通用，如：PLM, CRM, MES。</p>
<p><strong>2 特性</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-cde6df12d3ed219b21eaaf7e0b0bf3fd_720w.jpg" alt="img"></p>
<p><strong>特性：</strong>可以理解为是一种属性。</p>
<p>举个例子，比如说人，有性别，年龄，民族等等这些区分，那么这些我们称为“特性”，特性里面会有“值”，比如民族有“汉族”，“蒙古族”，这些我们成为特性值，特性与特性值之间是一种从属关系，我们也可以定义这些特性它允许什么样的值存在，是什么类型的，数值型，货币型，日期型还是字段型，同时特性可以定义只允许被哪些类使用。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-01733add65bae6023090e03fe8e2a1ba_720w.jpg" alt="img"></p>
<p>上图展示的是SAP标准中哪些表允许被修改，即依据特性值的内容更新表里面的字段，例如：你想通过这个特性值来影响BOM里的数量，就需要用到“参照”表STOP。</p>
<p><strong>特性的价格应用</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-ddcba1356e1a60ec29b809485aa65e24_720w.jpg" alt="img"></p>
<p>例，如何用一个特性去影响销售价，有4个步骤：</p>
<ul>
<li>首先建立一个特征；</li>
<li>为条件类型“VA01”或“VA00”创建条件记录，需求维护变式值，指定某个变式对应单价；</li>
<li>将条件类型增加到SD的价格控制过程内；</li>
<li>分配条件记录给特性值，或者写程式相关性通过计算及选择之后使其能够等同于价格条件里面的变式，当两者匹配之后就能够带出价格出来。</li>
</ul>
<p>完成以上步骤之后，就可以达到效果：当用户选择了某个配置之后或某个特性之后，系统自动将价格计算出来。</p>
<p><strong>特性影响BOM数量</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-47fc798eb684c703181d97ac091c862d_720w.jpg" alt="img"></p>
<p>如上是表述如何通过特性影响BOM的数量，业务场景：如依据客户的选择来决定你要用某个材料用几个，比如我们的内存，规格是8G的，但客户选择的是16G,这样自然我们的内存是8G*2，在这个情况下我们需要去创建一个特性，然后用这个特性去更改我们的BOM值。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-bab2110e12201cdea3b9c974688e629c_720w.jpg" alt="img"></p>
<p>之前所列是允许被更改的表结构清单，上面列出的是仅能被读取的。主要是我们的销售的一些表，或物料的一些表，这些就不要希望能用特性去修改里面的数据。</p>
<p><strong>3 分类</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-988511e3a33747b997f9999c7fe603af_720w.jpg" alt="img"></p>
<p>SAP的分类有很多的类型，有针对物料、工作中心、供应商、客户的、批次的分类。每种分类的类型对应的系统后台表结构。故类类型决定了分类能被运用到哪个具体的对象，当然SAP标准存在的分类类型基本上可以满足正常的使用需求，用户无须自已新增类型。</p>
<p>在使用的过程中，常见的分类有001，或者200，300,或者023等，另外组织范围，可以决定特性是不是在这个“组织范围”内被显示出来。</p>
<p>分类可以理解为特性的集合，举个例子，电脑类是由什么特性组的，是由CPU，硬盘等特性组成的。 或者人这个类，是由民族，性别等特性组成的。那具体的对象，比如我这个人，那就是一个具体的实物对象，我们把这个叫做类的实例化。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-681631fc346f5e05981ddfba61bac9db_720w.jpg" alt="img"></p>
<p>分类类型300，是VC的主要类类型，还有一个类节点200，也是VC分类类型。他们的目的都是一样，即通过Super Bom,依据客户的需求去精确的找到所需要的组件。</p>
<p>那300和200有什么区别是，一般我们认为300是用在成品类型的。200运用于BOM里项目类别为K的分类。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-a4859c752f353ba001a455b13933f844_720w.jpg" alt="img"></p>
<p>例子，有个销售需求，颜色是一个科选择特性，在BOM里面会维护一个类节点为K的分类，它会依据客户的选择之后会自动找到颜色所对应的一个物料。</p>
<p>完成整套系统的配置，需要我们先创建一个300的成品分类。再创建一个200的分类，这个200的分类必须包含300里面的颜色的特性。完成后再把200的分类分配给对应的材料。这样做的好处：假设我们的颜色它有3种或4种5种，那么我们在BOM里面并不需要指定具体的物料号，而仅仅只需维护一行K类型的类节点。那通过销售订单的一个选择后系统会自动选择它所需要的材料，这种做法和我们传统的Super BOM不太一样。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-33c69bb92077751d8de28cbd134e040c_720w.jpg" alt="img"></p>
<p><strong>总结：分类、特性、特性值</strong></p>
<ul>
<li>首先维护特性、特性值， 事务码： CT04；</li>
<li>维护分类，将分类所需特性分配给类，事务码：CL02；</li>
<li>将分类分配给具体的对象，一般为物料号。该物料的物料类型与常规物料类型不一样的，常规物料类型有成品，半成品，原材料等，此物料类型为可配置的物料类型；</li>
<li>分配完后不会为物料指定对应的特征值，但可以指定（选择）物料的<strong>特征值</strong>能显示哪些，也就是说通过这个设置，可以完成不同的物料虽然分配是同一类，同一特性，但它允许客户选择的值可以不一样。 当然我们可以通过CU20，CU30去通过特性值查找哪一些物料有用到， 但如果查库存的话有些麻烦，这个后面会讲变式物料时提到。</li>
</ul>
<p><strong>4 相关性</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-6a11367b6229e55a7104a4482b3a99aa_720w.jpg" alt="img"></p>
<p>相关性有4种类型，前提条件、选择条件、处理程序、约束。</p>
<ul>
<li><strong>相关性的目的：</strong>将分类或者特性，或特性值，跟BOM，Routing 做关联，使其 能过用户的选择之后，通过“相关性”来影响最终的值 和BOM项目</li>
<li><strong>前提条件：</strong>指选择了某个值或者特性后才能出现。比如我选择了某个配件之后，另外的一个品牌才可以出现。再举个例了，选择了“市”之后，才能出现“省”，这样的一个前提条件。</li>
<li><strong>选择条件：</strong>必须被选择, 当符合某种条件下，必须被选择。</li>
<li><strong>处理程序：</strong>主要是写一段配置或代码。 讲变式表以及功能时上会用到。</li>
<li><strong>约束：</strong>是判断多个对象配置的组合是不是合理的。比如说我们选不同的操作系统有Windows ,Linux的，那你在选Linux的时候，在选装软件时不能选微软Office；</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-07cca9881ea28f651a71d1318339693f_720w.jpg" alt="img"></p>
<p>相关性的类型很多，它可以被运用于哪些对象是有规则的，如上图： 红色字母部分代表相关性的类型能被应用在什么对象上面。 从图上我们可以看到能被分配的对象有特征，特性值，类，配置参数文件，BOM，Routing等。</p>
<p><strong>5 启用VC系统的前置因素-Super BOM</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-9313882e48ada51610162938935d2c94_720w.jpg" alt="img"></p>
<p>首先我们需要一个Super BOM,会几乎穷举所有可能的组合，会把所有的东西放到这个里面。比如我们的CPU，CPU有这个1.2GHz，1.8 GHz，2.4 GHz的多种类型的，硬盘有1T，2T，3T等，那我们会把这些都放进去，组成一个超级BOM。 那当然这个BOM是不能被直接运用的。 维护完成后，需要维护相关性，针对每种不同的值去指定它的相关性的规则。</p>
<p>相关性方面有两个类型：本地相关性、全局相关性。 建议大家使用全局相关性，因为本地相关性只是对这个BOM生效，如果要运用到其他BOM里面去就会非常不方便或不被允许。在相关性的命名规则一定要注意，相关性的命名规则一定要有可辨识性，避免维护完后不知如何进行选择，导致后期工作量相当巨大。</p>
<p><strong>6 启用VC系统的前置因素-配置参数文件</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-c3aef99cc899917f82ca985f3d32cae9_720w.jpg" alt="img"></p>
<p>创建配置参数文件之前，要求我们的物料类型是可配置的一个类型，要求MRP3视图，或者基本视图2里面，要把可配置给标识上，当然有一点我们需要注意，就是我们的“生产类型”，因选配是按订单式生产的，不是库存式生产的。需要设置MRP的策略为25。</p>
<p>创建配置参数文件的 事务码是：CU41 ， 如果是按计划订单或生产订单无展开BOM的时候，我们只需要输入物料去保存即可。完成以上的设置之后，那我们就可以在SAP里面创建对应的销售订单，系统会提示进行特性选择。</p>
<p><strong>7 变量表</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-2d59b792444a4f577155485ed08988c6_720w.jpg" alt="img"></p>
<p>变量表是一个特征的组合，我们前面讲过约束，这个跟约束有点类似，我们会把特征值做在一个表里面，维护完之后我们会赋予他这个值，那我们用户在选择的时候，他只是能够选择这个表里面存在的内容。如果不在这个表里面，就是不符合规则。 维护表内容用CU60 ，CU61创建表结构大家看下面这个图 ， 右上角是维护好值的表。 下面红色部分是语法，然后会指定它的几个参数，一般会有几个输入和一个输出。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-853fa2d0bf9f68cdce1257aec002f04f_720w.jpg" alt="img"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-4f360f076d83333cf80c24a469a95b73_720w.jpg" alt="img"></p>
<p>函数的应用，主要目的：依据某几个特性值来算出（ABAP）另外一个值，然后回写到这个界面里面。这个函数是通过CU65来创建，创建完后会出现激活按钮进行编辑ABAP程序，程序包含输入和输出特性，使用的语法和SE37里面是一样的。这种场景应用于比较复杂的运算，通过好几个值得到第3个值。 在特征的使用上，有些特征仅能被显示，一般是被运算出来的值。</p>
<p><strong>8 计划订单&#x2F;生产订单-无BOM展开</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-e745a75b6c256aeee931aba737350cfb_720w.jpg" alt="img"></p>
<p>在“配置参数文件”中，有三种选项：</p>
<ul>
<li>计划订单或生产订单</li>
<li>销售订单集合</li>
<li>订单BOM</li>
</ul>
<p>对应的展开的类型有：不展开，单层展开，多层展开 这些选择。 相互之间的搭配关系比较复杂的，从图上可以看到，就是我们的客户来了一个单后，它会做一个值的分配，所有的值的分配都是源自销售订单， 源自第一层。成品，半成品均可配置项，也就是多层可配置的情况。在这种情况下如果我们选择的是无BOM展开，那就意味着值分配是单一层的。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-de9e5afed6c08c48477ceba8935540a2_720w.jpg" alt="img"></p>
<p>从图上可以看到，我们的配置参数是在最上层的，那我们的半成品层其实是没有维护它的配置参数文件的。但是它的值的分配依然是生效的。它会从最上层继承下来。</p>
<p>如果最上层没有指定连接器，而半成品层也是可配置的，如选择的是不展开BOM的方式，那也就是意味着你的原材料在连接器这一块是不可以被选择到的。所以针对这种情况下，我们要求我们的成品的分类一定要包含半成品分类的特性。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-c37c2d53b12a518f136c956945ff5d36_720w.jpg" alt="img"></p>
<p><strong>9 计划订单&#x2F;生产订单-BOM展开</strong></p>
<p><img src="https://pic3.zhimg.com/80/v2-a4c86bcb6ce3d638c150cfaae3705d0e_720w.jpg" alt="img"></p>
<p>如有BOM展开，在这种情况下允许你的成品和半成品它的分类没有包含关系。而你的成品和半成品都可以选配。在做订单的时候会跳出两个产品的特性进行选配，即多层选配。</p>
<p><strong>10 销售订单配置</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-51e06d7981f9073b1957bb53d11d8f6a_720w.jpg" alt="img"></p>
<p>产品会一些配件或辅件，它是可以通过选择来进行配置的。这些辅件可能是不需要通过生产的，但需要通过用户的选择来加入，那这样我们的销售订单它在开始是一个行项目，但我们在选择完成后，它会把我们所选择的配置，所相关的组件给带出来，这就形成了一个销售集合。销售集合要求我们在维护这个BOM的时候就不能只是维护生产类型的BOM，那也要要维护我们5类型的BOM，也就是销售类型BOM。这里指的BOM类型有：生产BOM，销售BOM，研发BOM，成本BOM等等，这里讲的是销售BOM类型。 同样我们需要在这个销售BOM下面维护这个组件对应的“相关性”，以及与特性的关系。</p>
<p>另外一个是订单BOM， 它会把选配的结果保存为订单BOM，我们正常维护BOM是CS01，CS02. 而订单BOM是CS61，CS62.也就是我们通过这个选配完成后，它会在系统里面去自动产生一个订单BOM。</p>
<p><strong>11 物料变式</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-96f826c632f7be691f7339851d30b3ef_720w.jpg" alt="img"></p>
<p>可配置物料的目的是为了节约我们的物料编码，减少BOM的维护的工作量。</p>
<p>但是有一个部门不喜欢这个作业方式，比如我们的仓库。因为减少了物料的编码，那么仓库的管理难度会增加，因同样一个物料号，实际对应的配置，参数是不一样的。也就是在统计库存时候，这时用物料号去统计是没有任何意义的。如果有一天领导问你，某一种颜色的机器或者某一种配置的机器在仓库里有多少台？你很难去回答这个问题。所以就出现了这个“物料变式”。它的好处就是会将我们的成品进行实例化，那我们刚才讲，我们的配置物料在分配之后分类之后我们是不会给他赋予值。而物料变式它除了分配分类以后，它还会具体将对应的值输入进去，也就是我已经明确了这个物料号它代表的是哪一种配置参数。</p>
<p>同时我也会在物料主数据里把这个物料所对应的这个可配置物料进行指定，就是做一个对应关系，那这样的好处就是我们可以在物料管理上进行严格区分，同时我们在BOM的时候也可以参照销售BOM进行生产，也就是减少了BOM的工作量，但是也没有给库存管理带来很大的问题。</p>
<p><strong>12 SAP VC学习路径</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-02beafa0236263c04bdb93fe3aa4f473_720w.jpg" alt="img"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-53a7953ce940b0ebe78437dbbf480486_720w.jpg" alt="img"></p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP工单创建自动释放</title>
    <url>/2022/06/29/SAP%E5%B7%A5%E5%8D%95%E5%88%9B%E5%BB%BA%E8%87%AA%E5%8A%A8%E9%87%8A%E6%94%BE%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>执行事务代码COR1，创建一个新的工单。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220629135213099.png" alt="image-20220629135213099"></p>
<p>输入相关数据后保存，</p>
<p>系统提示：process order 900275584 created.</p>
<p>执行事务代码COR3显示该工单</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220629135400627.png" alt="image-20220629135400627"></p>
<p>其system status显示为REL, 表明该工单被自动RELEASE了。</p>
<p>SAP是如何实现此种自动RELEASE工单的效果呢？经查，是通过production schedule profile来实现的。</p>
<p>该工单的产出物料主数据里production schedule profile(PSP)字段值为PI01.</p>
<p>去后台如下配置路径，检查该PSP的配置信息</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220629135451226.png" alt="image-20220629135451226"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220629135501016.png" alt="image-20220629135501016"></p>
<p>在Automatic Actions里，On Creation 下Release选项被勾选了，如上图。意味着该物料的工单在新建保存的时候就自动被release了。</p>
<p>或者直接用：OPKP事务码。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220629141453243.png" alt="image-20220629141453243"></p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP NOTE安装过程</title>
    <url>/2022/06/20/SAP%20NOTE%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<p><strong>1.更改note的目标系统client配置</strong></p>
<p>登录sap系统，事务代码scc4.选中client点击左上角的change图标，如下图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/hosvmz36zi.png" alt="img"></p>
<p>将changes and transports for Client-Specific Objects一项由No changes allowed更改到changes without automatic recording.</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/fgugtuc9oa.png" alt="img"></p>
<p>将Cross-Client Object Changes 一项由No changes to Repository and cross-client Customizing objs更改到Changes to Repository and cross-client Customizing allowed.</p>
<p><strong>2.更改系统选项</strong></p>
<p>  事务代码：se06，点击左上角“系统更改选项”。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/fpq67mi55q.png" alt="img"></p>
<p>将EA-APPL，EA-FINSERV，EA-GLTRADE对应的更改项由Not Modifiable更改为Restricted Modifiable.将ABAP&amp;GUI Tools 更改项由Not Modifiable 更改为Modifiable.</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/447b8vq321.jpeg" alt="img"></p>
<p><strong>3.导入note</strong></p>
<p>  事务代码：snote  点击“Download SAP Note”图标。在弹出的对话框中填写需要安装的note号。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/syyvfuuai6.png" alt="img"></p>
<p>  填完后点击Execute执行，此时系统会将该note导入到系统中，前提是这个note号存在，可导入状态。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/hr74jdkckz.png" alt="img"></p>
<p>​    此时在New中就有了该note信息，双机note号，执行就可以了。</p>
<p> <strong>4.新建传输号</strong></p>
<p>  对每一个note新建一个传输号，从配置环境并传输到需要的测试或生产环境中。</p>
<p>   其它注意事项：NOTE按照完成后，需要把SCC4和SE06的参数修改回来。</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP常见的几个接口技术区别</title>
    <url>/2022/06/20/SAP%E5%B8%B8%E8%A7%81%E7%9A%84%E5%87%A0%E4%B8%AA%E6%8E%A5%E5%8F%A3%E6%8A%80%E6%9C%AF%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<p><strong>RFC</strong>是SAP接口技术中最简单和易用的一种方式，该方式开发比较简便，特别适合于外部报表开发，但对于<a href="https://cloud.tencent.com/solution/bigdata?from=10680">大数据</a>量的查询效率相对较低。</p>
<p><strong>BAPI</strong>基于RFC技术实现，被作为BO的Interface使用，是SAP提供的稳定而强大的业务接口，其增强和版本控制都在业务对象仓库中记录。BAPI效率相对比较高，这个主要体现在有些BAPI是用direct input的方式写的。但当你写的不只是一个LUW时，而每个LUW都比较简单，在这种情况下就用RFC开发比较快。</p>
<p><strong>IDoc</strong>是一种数据交换格式，类似于XML的概念，是SAP标准的文件交换格式。IDoc基于文档，通常IDoc用于异步处理，可以处理批量数据。而RFC常用于同步处理，而且并不适用于批量数据的处理。同时在Monitor和Troubleshooting方面，IDoc功能非常强大。</p>
<p><strong>ALE</strong>主要用于SAP系统内部数据交换。EDI主要用于外部或不同client 间数据交换。它们同时都可采用 IDoc 的方式作为数据的传输格式。</p>
<p><strong>Web Services</strong>是一种松散耦合的组件，使用XML描述交换信息内容，可以保证信息的自描述性和自适应性。WS的分布与地理位置无关，这样就可将非核心业务外包给专门的服务提供商。WS基于开放标准与技术（XML &#x2F; SOAP &#x2F; UDDI等），使其特别适合于异构平台的多样性和可扩展性。</p>
<p><strong>XI</strong>适配器(Adapter)进行XML格式与业务系统的特定类型的数据格式之间的转换。依据业务系统的数据格式的不同，适配器可以分为多种类型，比如 SOAP Adapter, JDBCAdapter, File Adapter, RFC Adapter, IDoc Adapter , WS Adapter和XI Adapter等。WS Adapter和XI Adapter是基于Web Service技术实现的。</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP批次管理（分割评估）</title>
    <url>/2022/06/30/SAP%E6%89%B9%E6%AC%A1%E7%AE%A1%E7%90%86%EF%BC%88%E5%88%86%E5%89%B2%E8%AF%84%E4%BC%B0%EF%BC%89/</url>
    <content><![CDATA[<h3 id="批次分割评估："><a href="#批次分割评估：" class="headerlink" title="批次分割评估："></a><strong>批次分割评估：</strong></h3><p><strong>业务场景：</strong>企业要求各批次物料成本价格不一样。此时可以采用分割批次来实现不同成本。</p>
<p><strong>对于批次分割，或者说单卷核算，这功能并不神秘，单纯是从财务角度上去评估物料的价格，如果不启用的话，在库存里的物料的价值是相同的，启用的话当你收货时每一个批次的物料价格都是不同的。</strong></p>
<h3 id="后台配置："><a href="#后台配置：" class="headerlink" title="后台配置："></a>后台配置：</h3><p>（1）、激活分割评估</p>
<p>后台—物料管理—-评估与科目设置—分割评估—–激活分割评估</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20200421180750849.png" alt="img"></p>
<p>（2）、配置分割评估</p>
<p>后台—物料管理—-评估与科目设置—分割评估—–配置分割评估</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20200421180750848.png" alt="img"></p>
<p>进入全局性分类后，批次分割采用已有的评估类型“X自动（批）”：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20200421180750878.png" alt="img"></p>
<p>估价类别：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220630183824186.png" alt="image-20220630183824186"></p>
<p>回到首页，点击“局部定义”，将评估类型分配给需要批分割成本的工厂（分配评估类别给工厂）：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20200421180750905.png" alt="img"><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20200421180750950.png" alt="img"></p>
<p>激活分配给工厂的评估类别：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20200421180750969.png" alt="img"></p>
<h2 id="业务模拟："><a href="#业务模拟：" class="headerlink" title="业务模拟："></a><strong>业务模拟：</strong></h2><p><strong>（1）、MM01创建物料，选择分类类别为023并激活批次管理：</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20200421180750968.png" alt="img"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20200421180750994.png"></p>
<p>评估级别选择前面配置的评估类别“<strong>X</strong>自动（批）“：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/2020042118075194.png" alt="img"></p>
<p><strong>2）、产生批次（例如做MIGO、MB1C业务等）：</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/2020042118075165.png" alt="img"></p>
<p><strong>（3）、MM02进入更改物料时，就可以选择评估类型（若无批次号，则无法选择）：</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/2020042118075183.png" alt="img"></p>
<p>会计视图显示价格信息（由于使用的MB1C期初导入产生批次时未设定初始价格，故V价格为0，）</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/2020042118075197.png" alt="img"></p>
<p>同理，MIGO收货时也会产生批次及价值，从而更新成本单价。</p>
<p><strong>注意：</strong>有的企业可能并不需要这么多批次，可能使用日期&#x2F;周&#x2F;月当做批次，例如：2020012作为批次号，当日的所有物料都过账到该批。从而减少批次号。</p>
<hr>
<p>在MM02中启用批次分割的物料可以通过MM02看到。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220630184010779.png" alt="image-20220630184010779"></p>
<p>工厂选择2000，评估类型直接就是批次类型，F4直接查看该物料的所有批次，根据批次即可查找该物料，工厂和批次下的价格，如果不填评估类型（批次），既是该物料在工厂下面所有的价值总和。</p>
<p>在配置好后台以后，在物料配置页面中，只要会计1视图中的评估类别没有打X，那就是没有启用批次分割。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220630184938028.png" alt="image-20220630184938028"></p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP搭建REST接口</title>
    <url>/2022/07/18/SAP%E6%90%AD%E5%BB%BAREST%E6%8E%A5%E5%8F%A3/</url>
    <content><![CDATA[<h3 id="一、SAP配置"><a href="#一、SAP配置" class="headerlink" title="一、SAP配置"></a>一、SAP配置</h3><p>1、首先要搭建SICF服务，搭建如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220718202415.png" alt="20220718202415"></p>
<p>其次，修改登录数据，登录数据为本机的登录地址。</p>
<p>2、查看主机的开发端口：SMICM，点击“服务”，查看主机开发那些端口号，我们需要的是HTTP协议的端口号</p>
<p>3、利用SE24找到“IF_HTTP_EXTENSION~HANDLE_REQUEST”这个方法</p>
<p>4、在这个方法里开始编写代码</p>
<p>5、如果在IF_HTTP_EXTENSION中无法进入到你调用的function中时，说明你的入参有问题，在ST22里可以看到。比如：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220718203311.png" alt="20220718203311"></p>
<p>很明显就是入参问题，所以进不去。</p>
<p>还有当你用postman调用sap的时候，在if_http中要打的是外部断点。</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP新特性</title>
    <url>/2022/09/06/SAP%E6%96%B0%E7%89%B9%E6%80%A7/</url>
    <content><![CDATA[<p><strong>1、@的用法</strong><br>首先需要用@data(内表)定义需要输出的内表，这个内表必须是没有定义过的，其次，一定要注意在select语句中加逗号，最后在系统变量比如SY-LANGU前面也要加上@符号。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select kna1~kunnr,</span><br><span class="line">       kna1~name1,</span><br><span class="line">       KNA1~land1,</span><br><span class="line">       T005T~LANDX AS LANAM,</span><br><span class="line">       kna1~regio,</span><br><span class="line">       T005U~BEZEI AS PROVI,</span><br><span class="line">       kna1~ort01,</span><br><span class="line">       kna1~stras,</span><br><span class="line">       but000~BPEXT as bpcode,</span><br><span class="line">       &#x27;KH&#x27; AS BPLX</span><br><span class="line">  INTO TABLE @data(out_tab1)</span><br><span class="line">  FROM kna1</span><br><span class="line">  INNER JOIN T005T ON KNA1~LAND1 = T005T~LAND1 AND T005T~SPRAS = @SY-LANGU</span><br><span class="line">  INNER JOIN T005U ON KNA1~REGIO = T005U~BLAND AND KNA1~LAND1 = T005U~LAND1  AND T005U~SPRAS = @SY-LANGU</span><br><span class="line">  inner join but000 on kna1~kunnr = but000~partner</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>2、move-corresponding 的新语法特性</strong><br>MOVE-CORRESPONDING ITAB_A TO ITAB_B.<br>隐式操作会把B清空，然后按字段名依次复制。</p>
<p>新语法：<br>1、MOVE-CORRESPONDING ITAB_A TO ITAB_B KEEPING TARGET LINES.</p>
<p>2、ITAB_B &#x3D; CORRESPONDING #( BASE ( ITAB_B ) ITAB_A ).<br>保留原数据，在此基础上根据对应字段添加。<br>PS:如果结构相同不如直接APPEND，但是APPEND只能根据顺序来，可能不会自动的根据字段来对应。</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP常用表</title>
    <url>/2022/07/27/SAP%E5%B8%B8%E7%94%A8%E8%A1%A8/</url>
    <content><![CDATA[<p><strong>一、MM常用表</strong><br>1、MARA: 常规物料数据<br>2、MARC: 物料的工厂数据<br>3、MAKT: 物料描述<br>4、MARD: 物料的工厂&#x2F;库存地点数据<br>5、MBEW: 物料评估（财务数据），其中MBEW-WERKS指工厂<br>6、MVKE: 物料销售数据<br>7、MLGN: 每一个仓库号物料数据（仓库）<br>8、MLGT: 每一个存储类型的物料数据（仓库&#x2F;存储类型）<br>8.1、MSTA：物料主记录状态<br>9、LFA1: 供应商主数据（一般数据）<br>10、LFB1: 供应商主数据（公司代码）<br>11、LFM1: 供应商采购组织数据<br>12、EINA: 采购信息记录（一般数据）<br>13、EINE: 采购信息记录（采购组织数据）<br>14、EKKO: 采购订单抬头<br>15、EKPO: 采购订单行项目<br>16、EKET: 计划协议计划行<br>17、EKKN: 采购凭证中的帐户设置<br>18、EKBE: 采购凭证历史<br>19、MKPF: 物料凭证抬头<br>20、MSEG: 物料凭证行项目<br>21、RBKP: 凭证抬头供应商发票数据<br>22、RSEG: 凭证项目供应商发票数据<br>EKKO&#x2F;EKPO–&gt;MKPF&#x2F;MSEG–&gt;RBKP&#x2F;RSEG–&gt;BKPF-BSEG<br>23、KNA1: 客户主数据（一般数据）<br>24、KNB1: 客户主数据（公司代码）<br>25、KNVV: 客户主记录销售数据<br>26、ADRC: 地址<br>27、EBAN: 采购申请</p>
<p><strong>二、SD常用表</strong><br>1、VBAK: 销售凭证：抬头数据<br>2、VBAP: 销售凭证：项目数据<br>3、VBEP: 销售凭证：计划行数据<br>4、VBKD: 销售凭证：业务数据<br>5、VBPA: 销售凭证：合作伙伴<br>6、LIKP: SD凭证：交货抬头数据<br>7、LIPS: SD凭证：交货项目数据<br>8、VBRK: 出具发票：抬头数据<br>9、VBRP: 出具发票：项目数据<br>10、VBFA: 销售凭证流<br>11、VBUK: 销售凭证：抬头状态和管理数据<br>12、VBUP: 销售凭证 ： 项目状态<br>13、T682I: 条件：存取顺序( 产生格式 )<br>14、T681: 条件：结构<br>15、T682Z: 条件：存取顺序( 字段 )<br>16、T685: 条件:类型</p>
<p><strong>三、FICO常用表</strong><br>1、SKA1: 总帐科目主记录 (科目表)<br>2、SKB1: 总帐科目主记录 (公司代码)<br>3、SKAT: 总帐科目主记录（描述）<br>4、CSKB: 成本要素<br>5、BKPF: 会计凭证抬头<br>6、BSEG: 会计核算凭证项目数据，BSID客户未清会计核算凭证&#x2F;BSAD客户已清会计核算凭证&#x2F;BSIK供应商未清会计核算凭证&#x2F;BSAK供应商已清会计核算凭证&#x2F;BSIS总帐未清会计核算凭证&#x2F;BSAS总帐已清会计核算凭证<br>7、FAGLFLEXA: 总账实际行项目<br>8、FAGLFLEXT: 总账汇总<br>9、ANLA: 资产主记录段<br>10、ANLC: 资产值字段<br>11、CSKS: 成本中心主数据<br>12、COEP: 成本控制对象：与期间相关的各行项目<br>13、COSS: CO 对象:内部过帐成本总计<br>14、COSP: CO 对象：外部记帐的成本总计<br>15、 CKMLPRKEKO: 物料分类帐; 价格的成本组件分割 (标题)<br>16、CKMLPRKEPH: 物料分类帐: 价格的成本组件分割 (要素0</p>
<p><strong>四、PP常用表</strong><br>1、MAST：BOM链接物料<br>2、STKO：BOM表头<br>3、STAS：BOMs - 项选择<br>4、STPO：BOM项目<br>STKO~ STLAN &#x3D; STAS-STLAN AND STKO~ STLAL &#x3D; STAS-STLAL<br>STAS~ STLNR &#x3D; STPO-STLNR AND STAS~ STLKN &#x3D; STAS-STLKN<br>BOM类别包括：D-凭证结构、E-设备BOM、K-订单BOM、M-物料BOM、S-标准BOM、T-功能位置BOM、P-工作分解结构BOM<br>5、PLAF: 计划订单<br>6、RKPF: 预定&#x2F;相关需求抬头<br>7、RESB: 预定&#x2F;相关需求行项目<br>8、AUFK: 订单主数据<br>9、AFKO: 订单表头数据，PP订单<br>10、AFPO: 订单项<br>11、AFVC: 订单的工序<br>12、AFVV: 工序中数量&#x2F;日期&#x2F;值的DB结构<br>13、JEST: 订单状态，通过AUFK-OBJNR&#x3D;JEST-OBJNR关联<br>14、AFRU: 订单确认<br>15、AUFM: 针对订单的货物移动</p>
<p><strong>五、PM常用表</strong><br>1、IFLOT: 功能位置(表)<br>2、ILOA: PM 对象位置和帐户分配</p>
<p><strong>六、PS常用表</strong><br>1、PROJ: 项目定义<br>2、PRPS: WBS(工作中断结构) 元素主数据</p>
<p><strong>七、QM常用表</strong><br>1、QPAM 检验目录选择集<br>2、QPMK 主检验特征<br>3、QPMT  主检验特征文本<br>4、QPMZ  分配检验方法&#x2F;主检验特征<br>5、QMAT  材料参数检验类型<br>6、QMHU 在检验批和处理单位项目中显示QM链接<br>7、QMTB 检验方法主记录<br>8、QMTT 检验方法文本<br>9、QPAC 检验目录代码<br>10、PLKO 检验计划标题<br>11、MAPL 材料分配<br>12、PLMK 检验计划特点<br>13、PLMW  MAPL相关特征规范</p>
<p><strong>八、库存数据</strong><br>1、MBEW: 物料评估<br>2、MARD: 物料的工厂&#x2F;库存地点数据<br>3、MSLB: 供应商特殊库存（O）<br>4、MKOL: 供应商特殊库存（K）<br>5、MSKA: 销售订单库存<br>6、MCH1&#x2F; MCHB: 批次库存</p>
<p><strong>九、货物移动数据</strong><br>1、MKPF: 物料凭证抬头<br>2、MSEG: 物料凭证行项目<br>不是所有的物料移动数据都需要从这物料移动表中进行读取，生产订单相关AUFM，采购订单相关EKBE，销售相关VBFA。</p>
<p><strong>十、WM常用表</strong><br>1、LTBK: 转储请求抬头<br>2、LTBP: 转储请求项目<br>3、LTAK: WM转储单抬头<br>4、LTAP: WM转储单项目</p>
<p><strong>十一、销售价格、采购价格</strong><br>KONV: 价格数据<br>销售价格：通过条件记录号KONV-KNUMV&#x3D;VBAK-KNUMV关联<br>采购价格:：通过条件记录号KONV-KNUMV&#x3D;EKKO-KNUMV关联</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP物料分类账</title>
    <url>/2022/07/01/SAP%E7%89%A9%E6%96%99%E5%88%86%E7%B1%BB%E8%B4%A6/</url>
    <content><![CDATA[<h4 id="物料账介绍"><a href="#物料账介绍" class="headerlink" title="物料账介绍"></a><strong>物料账介绍</strong></h4><p>物料分类账（Material Ledger）是SAP财务模块的重要功能之一，用于对标准价计价的物料进行差异处理。激活ML后，系统会在“工厂+物料”层（或更细的层次）为每个物料建立子账簿，记录该物料在各个期间的数量、价值变化情况。月底运行完物料分类账之后，系统自动对差异进行处理。物料分类账满足大多数企业对差异的处理需求，一般生产型企业均会启用ML功能，极少有企业通过自开发的程序进行差异处理。</p>
<p>在SAP中半成品、产成品使都用标准价（价格控制S）计价，材料可以使用标准价（价格控制S），也可使用移动平均价（价格控制V）。对于以S价计价的物料，月中物料收发以标准价生成会计凭证，同时会在物料分类账中记录每一物料的差异归集情况，月末ML将归集的所有差异按期末库存和当期消耗的比例进行分摊。因此，对S价计价的物料，ML进行“全月加权平均”处理，这样更符合实际。</p>
<p>例如物料A的标准价为10.00，期初库存为10个，总金额为100.00。本月第一次采购10个的价格为13.00，第二次采购20个的价格为14.00，生产消耗18个，成本中心领用2个，月末库存为20个。 这样，物料A的平均成本为（ 100 + 10<em>13 + 20</em>14 ）&#x2F; 40 &#x3D; 12.75。因此，月末库存金额为255.00，计入生产成本的金额为229.50，成本中心消耗的金额为25.50。</p>
<h4 id="差异分摊原理"><a href="#差异分摊原理" class="headerlink" title="差异分摊原理"></a><strong>差异分摊原理</strong></h4><p>上例演示了对物料A进行全月加权平均处理的逻辑，但实际上SAP是月中收集差异，月底处理差异。差异处理遵循如下三大逻辑：</p>
<ol>
<li><strong>差异层层上卷</strong>：根据订单的投入产出顺序，原材料-&gt;半成品-&gt;产成品，ML将上一环节的差异逐层按相关的数量比例进行结转；</li>
<li><strong>差异随库存走</strong>：应该由期末库存承担的部分，ML将对应的差异金额还原到存货科目，将期末存货还原成实际成本；</li>
<li><strong>谁消耗，谁承担</strong>：当期消耗的存货，ML对差异进行重估，将差异调整到原始消耗中。例如：物料投入到成本中心，差异重估到成本中心；物料销售出库了，差异重估到主营业务成本。</li>
</ol>
<p>对于上例，SAP实际的处理逻辑为： 采购30个物料A时，计入材料科目的成本为300.00，同时ML记录差异10<em>3 + 20</em>4 &#x3D; 110.00；生产消耗18个时计入成本的金额为180.00，成本中心消耗2个时计入成本的金额为20.00；月底ML计算出每个物料的差异为110.00 &#x2F; （10 + 10 + 20） &#x3D; 2.75。运行ML之后，将18<em>2.75的差异调整至上级产品（<strong>差异层层上卷</strong>），将2</em>2.75的差异调整到成本中心（<strong>谁消耗，谁承担</strong>），剩余差异调整到物料A（<strong>差异随库存走</strong>）。</p>
<p>经过ML处理后，正常情况下，月末差异科目余额为0。因此，一般运行完ML之后需要检查差异科目余额是否为0，不为0需要进一步分析原因。</p>
<h4 id="WIP重估功能"><a href="#WIP重估功能" class="headerlink" title="WIP重估功能"></a>WIP重估功能</h4><p>一般情况下，企业进行SAP功能设计时会尽量避免出现在制品，这样可以简化处理逻辑。但在有的情况下，WIP是无法避免的。根据逻辑，物料成本计入WIP后，其差异也应该计入WIP。ML可以激活WIP重估功能，实现WIP也承担差异。</p>
<p>如果没有启用WIP重估功能。ML处理差异的逻辑是“完工产品承担价差，WIP承担量差”。 例如，半成品A投入产成品B，产出一个B需要一个A，当月订单投入10个A，产出1个B。运行ML月结时，1个B会带走10个A的差异，这不是很合理。所以，尽量避免出现在制品，如果避免不了需要评估是否启用WIP重估功能。</p>
<h4 id="物料计价方式"><a href="#物料计价方式" class="headerlink" title="物料计价方式"></a>物料计价方式</h4><p>启用ML之后，物料会计视图中出现“价格确定”，如下图，</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-0080e58b08ce21acdcba7954c8a485a6_720w.jpg" alt="img"></p>
<p>如果物料采用V价，则价格确定维护2；如果物料采用S，则价格确定维护3。“V+2”和 “S+3”是固定的组合，否则可能出现差异无法分摊的情况，如错误地维护为“S+2”。</p>
<p>一般情况下，建议原材料采用V价，半成品及产成品采用S价。如果企业原材料种类不多，价格波动大，需要对差异原因进行分析，建议原材料也采用S价。如果企业原材料种类繁多，使用S价计价时需要谨慎，因为采用S价的物料过多时，可能会降低ML运行的效率。</p>
<p>启用ML之后，物料标准价格在一个期间只能发布一次，因为月底处理差异时需要以标准价为参照，如果有多个标准价，该以哪一个价格为准呢？ 启用ML之后，物料标准价格发布也有限制，发布前不能有物料移动。</p>
<h4 id="物料账的不足"><a href="#物料账的不足" class="headerlink" title="物料账的不足"></a>物料账的不足</h4><p>物料分类账是SAP财务模块的重要功能，解决了企业差异分摊的困扰。在国内，许多企业选择启用该功能，以实现实际成本核算。然而，ML还是有一些不完美的地方，例如：</p>
<ol>
<li>如果没有启用WIP重估功能，完工产品承担价差，WIP承担量差；</li>
<li>发料到固定资产，ML无法将差异重估到原始的资产科目；</li>
<li>如果启用发出商品科目，货物发出但未开票，ML将差异重估到主营业务成本，需要将这部分差异还原到发出商品。</li>
</ol>
<p>针对以上问题，启用ML后，需要设计相应的方案进行处理，尽量避免手工调整。常用的方法是开发程序进行自动处理。</p>
<hr>
<h3 id="深挖物料分类账"><a href="#深挖物料分类账" class="headerlink" title="深挖物料分类账"></a>深挖物料分类账</h3><p>关于物料分类账，其实有些业内人士已经写的非常好了，大家也可以去搜集一下相关的资料，这一篇是根据我自己在项目中的一些体会和总结写的。</p>
<p>首先我们还是了解一下物料帐分类账的功能，然后呢，我们还是按照问答的方式完成这篇文章。物料分类账的功能概括起来有如下三点：</p>
<ol>
<li><p>归集差异</p>
</li>
<li><p>分摊差异</p>
</li>
<li><p>计算实际成本或者叫还原实际成本</p>
</li>
<li><p>多货币、多级评估（有时候也叫平行评估，英文是multiple valuation），严格来讲，这个功能不是物料分类账的，只是要启用物料分类账，才可以使用这个功能，所以也一起列在这里。</p>
</li>
</ol>
<p>第一点和第二点的归集差异和分摊差异都是为第三点服务的，最终目的就是实现物料（产品）级别的实际成本还原，也就是说我们要知道我们每个产品到底是多少成本。有人说，这个很重要吗？我知道自己一共赚了多少不就可以了，干嘛非得知道每个产品的实际成本呢，的确，我们很容易知道一共花了多少成本，也知道一共有多少收入，不过我们并不知道到底哪个产品赚钱，哪个产品亏钱，哪个产品最赚钱，哪个产品最亏钱，这样就不能从产品层面调整经营策略。另外就是我不知道每个产品的成本，我又怎么知道我的定价是不是合适的，以前就出现过卖的越多，亏的越多的案例啊，那就是因为产品的成本都比销售价格高了。为什么这里叫实际成本还原呢，是因为这还是一个事后才能做的事情，按照财务概念来说，是财务月结才能做的事情。那么为什么要等到月底才能知道实际成本呢？这里就存在一个问题，就是我们是无法实现真正的实时的实际成本（注意“实时”这两个字）的。这里面有很多的业务实际和系统逻辑是无法做到的，我们首先说相对容易的原材料吧，原材料主要来源于采购，可能有些还会有返工的产成品拆解出来的，或者回收再加工的。单纯讲采购的话，也存在各种情况，比如不同供应商的，也可能存在供应商免费赠送的。不过既然是采购，就会有采购价格（免费送的采购价格可以认为是零嘛），如果我们用移动平均价是不是就可以准确计算出材料的实际成本呢？只要每次采购收货的时候重新计算移动平均价就可以了呀，这样就可以计算出原材料的实时的实际成本了。不过这里有个前提条件是采购价格要准确无误，而且最终发票开出的价格要和采购价格完全一致，否则在发票入账的时候如果发票价格和采购价格不一致，而且库存又没有了，那么就会出现这块差异实际上应该计入材料成本，却又无法计入材料成本（如果计入材料成本，会出现无数量、有金额的情况，SAP的逻辑是数量如果为零，金额一定为零）的情况。另外就是其他的成本包括人工、折旧、水电费、维修费等，这些成本在月底前是没有实际的数字的（实际上有的时候月底也没有实际数字，比如人工，可能要到下个月15号才会发上个工资，那么这个时候为了满足成本核算的需要，月底就需要预估人工成本），如何在成品制造完成就知道其实际成本，这几乎是不可能的。所以SAP设计了标准成本的概念（其实就是我们国内说的计划成本），就是说一个材料在平时是用标准价进行计价，收发存都用这个标准价，发生的所有差异（包括采购环节、生产环节、修改价格等）都先归集在一个“差异池”中，到月底我再按照一定的逻辑分摊这些差异（基本的规则是谁受益、谁承担，比如这个材料被生产产品消耗了，那么这个差异就计入上层产品的差异，这在SAP中叫多层差异，如果材料被研发领用到了，差异就计入研发费用，如果买来什么都没做，那么差异就计入材料本身，重新计算材料的实际价格，SAP把这个分摊差异或结算出来的实际成本叫PUP（Periodic Unit Price），其实就是月底的移动平均价，如果上层产品又给更上一层产品消耗，那么差异就层层上卷，一直卷到最上层的产品，最上层的产品归集的差异再分配到销售成本或者留在库存商品中）。到这里呢，我们就是说明一件事，实时的实际成本是不可能的，我们只能做到事后（一般是月底）的实际成本还原，SAP物料分类账就是干这个用的。另外物料帐的后台配置并不复杂，主要就是物料帐激活以及哪些移动类型要进行评估，还有就是考虑物料帐的成本组件（包括计划和实际）传输到COPA进行分析。接下来开始问答：</p>
<ol>
<li>309移动类型（物料转物料）差异能否吸收？</li>
</ol>
<p>答：据说默认情况下309移动类型转出方物料的差异不能被转入方吸收，不过可以按如下设置，是可以被吸收的。</p>
<p>SM30修改视图V_CKMLMV01，如下图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-1989f7cf7aa1af527d8c1b544c8afb14_720w.jpg" alt="img"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-7b732a3d5e71e3a067f046469eb8f576_720w.jpg" alt="img"></p>
<ol start="2">
<li>物料分类账启用的前提条件有哪些？</li>
</ol>
<p>答：在如下的条件下启用物料分类账会比较合适，不过并非绝对条件。</p>
<ol>
<li><p>采用标准价格对物料进行管理，至少是自制的半成品、产成品采取标准价格对物料进行管理，而且是通过CK11N&#x2F;CK40N发布标准价格，原材料可以采用移动平均价，不过如果采用移动平均价的话，产生的差异物料分类账不进行分摊。</p>
</li>
<li><p>企业材料采购差异较大，价格不稳定，如果价格很稳定，差异不大，就表示标准价格和实际价格接近，物料帐的意义就不大了。</p>
</li>
<li><p>企业每月的在制品较少，或订单数量较少，这一条只是说订单量越大，执行物料帐结账的速度会慢一些，另外就是SAP早期版本不支持在制品分摊差异，后来较高的版本都支持了，所以这一条可以不算前提条件。</p>
</li>
<li><p>企业物料数量较少，BOM结构较为简单。这个意思也是物料少，BOM层次少，物料帐分摊差异就比较容易，出现问题也容易查找，如果物料很多，BOM层次多，第一是结算速度比较慢，另外就是出现问题查找比较麻烦。</p>
</li>
<li><p>物料帐使用过账<strong>中不可以直接使用反向移动类型直接进行物料移动</strong>（包括库存转移）<strong>操作</strong>，反向移动类型只应在冲销时体现，这一点往往容易被忽视而出现问题，因为如果直接使用反向移动类型操作，SAP默认的逻辑是在收货和消耗中均体现为负数，这样可能出现累计库存数量很小，但差异除以累计库存数量乘以消耗值时会方法分摊出去的差异，而消耗的负数系统默认不分摊差异，可能导致大额差异无法被分摊。</p>
</li>
</ol>
<ol start="3">
<li>物料分类账启用的情况下修改物料标准价格的前提有哪些？</li>
</ol>
<p>答：一旦启用物料分类帐，SAP对于修改价格要求是很严格的，具体如下：</p>
<ol>
<li><p>只能在当前期间修改（即不能修改上个月价格）；</p>
</li>
<li><p>该物料无任何物料移动；</p>
</li>
<li><p>该物料无发票校验，即无发票校验修改物料价值；</p>
</li>
<li><p>该物料分类账状态为“Periods opened“或“Price change completed”或“’New objects”，这个状态CKM3可以看到（或者查看表CKMLPP字段Status）</p>
</li>
</ol>
<p>满足以上条件可使用CK11N计算标准成本并使用CK24发布标准成本的方式修改价格，如果同时还满足“该物料不存在将来计划价格和当前计划价格”，可使用MR21修改价格。实际MR21修改价格很有限，只要有了评估计划价格（即执行过CK11N和CK24），是不允许MR21再修改的。</p>
<ol start="4">
<li>物料分类账启用后如何进行标准成本估算？</li>
</ol>
<p>答：启用物料分类账ML后，成本估算可采用两种方式：</p>
<ol>
<li><p>一种是沿用原来CK11N&#x2F;CK24&#x2F;CK40N方式评估，ML只用来计算实际成本和成本差异分摊</p>
</li>
<li><p>另外一种是部分产品（如原材料、贸易商品）采用原方式CK11N&#x2F;CK24&#x2F;CK40N评估，自制半成品、产成品使用ML在计算单层差异和多层差异（事务代码CKMLCP）后计算出实际成本，使用实际成本作为下期标准成本标记并发布（事务代码CKMPRPN标记，CKME发布）。这种方式使用不多，主要的原因是物料帐实际结账的时间和标准成本发布的时间要求有冲突（物料帐结账通常是月结的最后一个步骤，此时一般是下月3号到5号左右，实际的物流移动从1号就开始了，标准价格发布又需要无物料移动，因此物料帐结完时通常已经无法发布标准成本了），实际业务难以达到。</p>
</li>
</ol>
<ol start="5">
<li>修改物料价格出现C+811错误如何处理？</li>
</ol>
<p>答：这是因为在修改物料价格时，已经发生了物料移动，此时即使冲销了物料移动，SAP默认仍然会出现这个错误，标准逻辑是如果物料主数据价格确定是3（物料帐激活一般会设置为3），标准价格只能在期间状态小于30（表示“数量和值已输入”）时才可以修改（小于30的期间状态包括01“新对象”，10“期间未清”，20“价格更改已完成”），一旦发生物料移动，期间状态就会变成30，就无法更改了。SAP提供了一个程序可以修改期间状态（前提是物料移动已经全部冲销），在物料帐启用的公司，通常是把这个程序拷贝在系统中的。这个程序在note：574930中有提供。</p>
<p>对于C+811错误的详细说明及处理方法，可参考note：1492789。</p>
<ol start="6">
<li>物料分类账C+048问题如何处理？</li>
</ol>
<p>答：这个错误消息是指物料的数量、价格、库存价值、价格单位信息在物料主数据（MM层面）和物料明细账层面（ML层面）数据有不一致的地方，可使用CKMC检查不一致的信息，然后可使用CKMREP去修改不一致的数据，CKMREP涉及大的相关的表是CKMLPR(价格单位，计划价格)&#x2F;CKMLPP（库存数量）&#x2F;CKMLCR（库存价值，价格）。当然，也可以考虑使用自开发程序或者修改表的方式去修复数据（建议谨慎！）。</p>
<ol start="7">
<li>物料分类账启用后在上线的月份必须执行物料分类账结账吗？</li>
</ol>
<p>答：是的，启用物料分类账后，在导入完期初库存数据后，需要对切换的月份执行物料分类账结账（实际上最迟在下月结账前执行即可），因为SAP在执行物料帐结账时，会判断上月是否执行过结账，否则会有报错信息“上个月的物料帐还没结账”。</p>
<ol start="8">
<li>分割评估和物料分类账可以同时启用吗？</li>
</ol>
<p>答：可以同时启用。同时启用的情况下，工厂级别只能用V价，评估类型级别就变成最底层，物料分类账差异归集和分摊也根据评估类型的级别进行。</p>
<ol start="9">
<li>生产系统物料帐正式启用前的操作有哪些？</li>
</ol>
<p>答：在物料分类账配置完成后，正式启用前，需要进行如下的操作：</p>
<ol>
<li><p>CKM9检查物料帐的配置；</p>
</li>
<li><p>物料主数据导入后，CKMM批量更改物料价格确定（从2到3，根据物料类型），也可以导入物料主数据时直接导入为3，那就无需更改了；</p>
</li>
<li><p>执行CKMSTART设置评估范围为正式的。</p>
</li>
</ol>
<p>对于第9点，物料帐启用和物料主数据导入、期初库存导入、期初物料帐结账的顺序，再次记录一下个人看法：</p>
<p>首先激活物料帐分为后台和前台两步，后台的步骤是OMX1，前台的步骤是CKMSTART，按照SAP note：596558的说明，这两步是需要同时激活的，这两步期间不能发生任何创建物料和物料移动的操作。此note也说创建物料既可以在执行CKMLSTART之前，也可以在执行CKMSTART之后，不过个人认为此note主要针对是已经上线的情况激活物料帐进行的说明，如果新的系统实施，个人认为通常的步骤如下：</p>
<ol>
<li><p>传输物料帐配置；</p>
</li>
<li><p>CKMSTART设置工厂的物料帐为正式的；</p>
</li>
<li><p>导入物料主数据；</p>
</li>
<li><p>导入物料主数据价格（针对标准价格的物料，MR21或开发程序批量导入）或执行标准成本估算（通常国内项目不进行，因为标准价格和老系统价格往往不一致，产生的尾差不好处理，不过如果不执行标准成本估算，则会产生导入库存没有实际成本组件的问题，如果执行标准成本估算，则系统导入的库存可参考标准成本的组件计算实际成本组件，这个事情没有办法，只能二选一）；</p>
</li>
<li><p>导入期初库存（在正式上线月份的上月，比如5月1日上线，则库存导入日期为4月30日）；</p>
</li>
<li><p>打开下月物料期间；</p>
</li>
<li><p>执行导入库存月份的物料帐结账；</p>
</li>
<li><p>关闭上月物料期间。</p>
</li>
</ol>
<p>另外，补充CKMSTART程序的用途和作用：</p>
<ol>
<li><p>对已有物料创建物料帐的主数据（比如财务视图勾选“ML”）和转换现有库存价格和价值的货币（是物料帐设置的货币，OMX2配置）；</p>
</li>
<li><p>转换采购订单历史到第二&#x2F;第三本位币；</p>
</li>
<li><p>对现有库存创建成本分割数据。</p>
</li>
</ol>
<p>说明：对于新实施的公司来说，不存在上述1）和2）的影响，只有第3）点的影响，这一点已经说明，如果在导入库存的月份不进行标准成本估算，则无成本分割数据，成本组件只体现为一个总值。</p>
<p>-——————————————————————————————</p>
<ol start="10">
<li>财务角度来说，物料分类账的日常操作或者说检查有哪些？</li>
</ol>
<p>答：主要的日常操作如下：</p>
<ol>
<li><p>通过差异科目检查是否有异常差异产生（差异科目通常配置为表外科目，以便分摊后可以检查差异科目是否已分配完）；</p>
</li>
<li><p>CKM3对单个物料进行价格分析。</p>
</li>
</ol>
<ol start="11">
<li>物流角度来说，物料分类账的日常操作注意事项有哪些？</li>
</ol>
<p>答：建议操作时注意如下事项，避免差异过大或导致差异无法分摊。</p>
<ol>
<li><p>严格按照移动类型规定的业务进行规范操作；比如不要使用反向移动类型进行操作，否则会导致差异分摊混乱和无法分摊的情况，另外，对于特殊库存，都要先转为自有库存再消耗，直接消耗会导致差异无法分摊；</p>
</li>
<li><p>发票入账及时，发票差异不宜过大；</p>
</li>
<li><p>采购价格维护准确；</p>
</li>
<li><p>生产订单及时关闭，采购发票及时入账，否则可能因为价格限制数量的原因导致差异无法完全分摊。</p>
</li>
</ol>
<ol start="12">
<li>物料帐的月结注意事项有哪些？</li>
</ol>
<p>答：月结的主要注意事项如下：</p>
<ol>
<li><p>执行物料帐月结时，结账月份没有任何物料移动；</p>
</li>
<li><p>在执行完CO月结后，执行物料帐月结；</p>
</li>
<li><p>执行第七步“过账清算”前，通过值流监视器CKMVFM查看差异的分摊情况；如发现差异分摊异常，建议修正后再执行“过账清算”；</p>
</li>
<li><p>对于分摊到库存的差异，系统下月会自动冲回；</p>
</li>
<li><p>结账事物代码:CKMLCP；</p>
</li>
<li><p>所有的过账都在第七步“过账清算”完成；</p>
</li>
<li><p>发货过账（601）移动类型总是会被重估的，即进入销售成本的差异会被分摊到对应的销售成本科目；</p>
</li>
<li><p>发布新的标准成本应在物料帐结账（CKMLCP执行）之前，且下月未发生任何物料移动，系统时间必须在下月，下月物料账期需要打开。</p>
</li>
</ol>
<ol start="13">
<li>物料分类账结账产生的相关凭证有哪些？</li>
</ol>
<p>答：相关的会计凭证如下：</p>
<ol>
<li><p>FI层面差异分摊凭证，ML凭证类型；</p>
</li>
<li><p>消耗重估凭证，ML凭证类型；</p>
</li>
<li><p>WIP重估凭证，ML凭证类型；</p>
</li>
<li><p>当月产生ML凭证（三类凭证在一起），下月冲销ML凭证。</p>
</li>
</ol>
<ol start="14">
<li>物料分类账的常用查询报表有哪些？</li>
</ol>
<p>答：主要的查询报表如下：</p>
<ol>
<li><p>S_P99_41000062，查看工厂下物料的实际价格、标准价格、库存价值、库存数量、期间状态；</p>
</li>
<li><p>CKMB，查看所有物料分类账凭证；</p>
</li>
<li><p>CKMPCD，查看价格修改凭证；</p>
</li>
<li><p>COMLWIPDISP，显示在产品的实际成本；</p>
</li>
<li><p>CKM3&#x2F;CKM3N，物料价格分析（含成本组件）；</p>
</li>
<li><p>CKMVFM，值流监视器，查看差异估计和分摊情况。</p>
</li>
</ol>
<ol start="15">
<li>配置物料分类账时，配置点“定义材料分类账组的变化类型”中“消耗重估”为灰色，无法选择，如何处理？</li>
</ol>
<p>答：SFW5激活激活组件EA-FIN，参考note：1657787</p>
<ol start="16">
<li>出现C+704消息是什么原因？</li>
</ol>
<p>答：按照SAP note：802632的说明，有两种情况可能导致这个错误消息，其中一个是库存在某个月的数量在ML层面不满足期初库存+当期收货-当期消耗&#x3D;期末库存的逻辑导致的，这种情况是是逻辑错误，必须要修正错误。第二种情况是有重估金额（由于价格修改）在上个月存在，在结账后物料又在上个月发生了过账。针对第二种情况，SAP给出了note：1120947，根据该note可把消息号修改为警告，不过不建议。</p>
<ol start="17">
<li>常见的导致差异无法分摊的情况有哪几种？</li>
</ol>
<p>答：有如下几种情况：</p>
<ol>
<li><p>对于供应商寄售库存，如果不转为自有库存就直接通过201K&#x2F;261K移动类型进行消耗的话，其产生的差异是不会被分摊的，必须通过411K转为自有库存再通过201&#x2F;261消耗后，才可以正常分摊差异；</p>
</li>
<li><p>对于V价格标识的物料，其产生的差异，物料帐无法进行分摊；</p>
</li>
<li><p>对于特殊库存（项目库存、销售订单库存）的消耗，如果使用直接消耗的移动类型，则其产生的差异无法被分摊，需要先转为自有库存再进行消耗，类似于供应商寄售库存，比如对于Q（项目）库存，如果直接使用416 Q消耗，其差异无法分摊，需要使用411 Q转为自有库存；</p>
</li>
<li><p>SAP为了避免出现物料实际价格为负数的情况（如果负数差异大于目前负数金额，可能出现物料成本为负）<br>，系统中有一个fallback strategy，这个时候会自动把一部分差异留在未分摊差异中。此时未分摊差异会体现在“累计库存”上面的“Not Distributed”对应的行，参考note：908776。这些策略的处理方式包括：一种是是好用当期收货的金额作为累计库存行，对应消息号C+135；第二种是第一种情况下当期没有收货，系统使用期初库存为累计库存行，对应消息号C+138；第三种是前两种都没有值，则使用前一个期间的周期单位价格作为本期的，对应消息号C+136；第四种是前三种都没有，则使用前期的标准价作为本地的周期单位价格，对应消息号C+137。SAP给出差异分摊方式是MR22更改库存价值（当然更优先的方式应该是找出原来过账的凭证进行修正），使不产生负数周期单位价格，然后结账，下月再MR22更改回来。</p>
</li>
<li><p>价格限制数量原因，系统标准逻辑是当价格限制数量（CKMLCP-PBPOPO）大于累计库存数量时，只把累计数量对应比例的差异分摊出去。这个价格限制数量系统逻辑是对于采购的物料，发票校验时会更新，比如5月份收货100，下月又收货100，同时收到发票200，发票差异为10块，那么下月的10块差异就只被被分一半出去，因为200会作为下月的价格限制数量，对于生产的物料，系统以关闭生产订单月份统计的收货数量（收货数量可能在当月也可能下月）合计为价格限制数量，比如4月份生产订单下达1000，收货950，5月份对订单TECO，那么5月份的价格限制数量为950。处理方法：在值流监视器中删除价格限制数量，在单层差异确定时勾选“不经库存覆盖检查”。</p>
</li>
</ol>
<p>说明：删除价格限制数量时不需要选择物料，选择对应的评估类点击删除按钮即可。删除价格限制数量和勾选“不经库存覆盖检查”分别进行即可，不需要同时进行。参考SAP note：2207543。</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP生产订单BOM组件修改ABAP函数</title>
    <url>/2022/06/20/SAP%E7%94%9F%E4%BA%A7%E8%AE%A2%E5%8D%95BOM%E7%BB%84%E4%BB%B6%E4%BF%AE%E6%94%B9ABAP%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<p> 最近，在做某个项目的时候，业务部门有一个需求是需要通过接口去修改SAP生产订单BOM组件的信息，解决由于订单BOM不准反向通过实际发料来更新订单BOM组件数量，使其满足财务核算及MRP运算的要求。</p>
<p>​    一般SAP有2种方式可以处理：</p>
<p>​    1.使用BDC录屏的方式，但是录屏的方式因为在CO02功能里面做了大量的增强和个性化设置，只要有一个字段或界面元素没考虑周全，就会造成接口修改不成功，稳定性较差，后期的维护成本高及用户体验较差。</p>
<p>​    2.使用BAPI_ALM_ORDER_MAINTAIN函数修改生产订单BOM组件，这个函数原本是系统用来修改PM生产订单信息的，不仅可以修改PM生产订单BOM组件信息，还可以修改PM生产订单抬头信息、PM生产订单工艺路线信息等，如下图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/59ec1713804223c94d93fe54e0ec1465.png" alt="img"></p>
<p>由于SAP没有提供其它可用的ABAP函数来修改一般的生产订单信息，所以需要修改此函数源代码，跳过相应的PM订单检查，把此函数改造为通用订单修改函数，具体如下：</p>
<p>IT_METHODS是选择调用接口的对象与方法名，</p>
<p>比如：OBJECTTYPE&#x3D;COMPONENT，METHOD&#x3D;CHANGE</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/6d4750e12e4b999a044eb82a4b57f307.png" alt="img"></p>
<p>修改订单BOM组件对应的是IT_COMPONENT、IT_COMPONENT_UP两个参数表</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/e30fd86a9412aa0e7b363c840080a242.png" alt="img"></p>
<p>   然后通过生产订单号找到RESB表中对应生产订单的预留号、预留行号信息，根据实际需求输入表里面相应的参数就可以完成对订单BOM组件的修改了</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/b335df332f2147ea397bb8e8225e92bf.png" alt="img"></p>
<p>应用情况如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/e9ef6193e932aa10394e20773f4ba477.png" alt="img"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/f66e66c04c924aa625a4e8d3c4b57f4c.png" alt="img"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/40baf7e1c317f15567d71f741fe6d54a.png" alt="img"></p>
<p>即完成生产订单BOM数量的修改。</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP监控常用TCODE</title>
    <url>/2022/07/04/SAP%E7%9B%91%E6%8E%A7%E5%B8%B8%E7%94%A8TCODE/</url>
    <content><![CDATA[<p><strong>1 系统监视</strong></p>
<p><strong>1.1 进程监视</strong></p>
<p><strong>SM66&#x2F;SM50 进程查看</strong></p>
<p>管理员需全天监看系统的进程。长时间运行的后台工作，有缺陷的报表程序，若不进行控制都将消耗掉大量的系统资源。管理员用这个事务码检查他们的环境。当然，在杀掉这些进程前，需要与最终用户协商。</p>
<p><strong>1.2 服务器监视</strong></p>
<p><strong>SM51</strong></p>
<p>R&#x2F;3服务器的列表可用SM51显示，管理员用它来监视不同服务器之间的工作进程。想要显示某一服务器的进程，鼠标指针点中服务器的名称，然后选Processes。</p>
<p> <strong>RZ20 CCMS监控</strong></p>
<p>双击要查看的菜单项，检查系统收集的监控信息，遇到报警和错误信息要查清原因，找出解决办法。</p>
<p><strong>1.3 用户监视</strong></p>
<p><strong>SM04 用户监视</strong></p>
<p>管理员应该考虑全天监视用户仅他们的活动。是否有非法用户？是否有用户试图或正在用他们不该用的事务码，等等。</p>
<p><strong>1.4 性能监视</strong></p>
<p><strong>ST03 工作量分析</strong></p>
<p>世上没有经验的替代品。当需要调R&#x2F;3系统的性能的时候是很痛苦的事情。管理员应该保留尽可能多的工作量分析数据，特别是系统没用性能问题时候的数据。拥有一副系统工作正常时的清晰的系统图，将使你具有对你的系统的不可估量的感觉，这种感觉将使你能预见到将要发生的问题，并且很多时候可以避免问题的发生。</p>
<p><strong>ST02 缓存分析</strong></p>
<p>R&#x2F;3的缓存存储经常用到的数据，以使本地应用服务器的实例能取得这些数据。这样就可以减少<a href="https://cloud.tencent.com/solution/database?from=10680">数据库</a>的访问，数据库的负载，网络的流量，从而提高系统的性能。数据缓存中包括了ABAP&#x2F;4程序，屏幕，ABAP&#x2F;4字典数据和公司的数据，这些数据在系统操作过程中是不会改变的。我们应该经常的监视缓存、点击率、剩余空间、交换区。此进程可以帮助管理员作性能调整。</p>
<p><strong>SP12 TemSe管理</strong></p>
<p>管理员要检查文件系统和数据库空间的增长，尤其是批量打印大量数据时。TemSe的一致性检查(RSPO0043)需要计划每天在打印池重新整理(RSPO0041)之前执行。</p>
<p><strong>1.5 更新记录</strong></p>
<p><strong>SM13更新记录</strong></p>
<p>此事务码显示失败的更新动作。失败的更新动作在生产系统中是决不允许发生的，一旦发生，开发人员应马上修改。</p>
<p><strong>1.6 锁定对象</strong></p>
<p><strong>SM12 锁定对象</strong></p>
<p>用户总是会时不时的因为某种原因（如断线，程序出错等等）而锁定一个对象。所有被锁定的老的对象均要被分析，更正。</p>
<p><strong>1.7 出错分析</strong></p>
<p><strong>ST22出错分析</strong></p>
<p>当一个报表或事务因为严重的错误而停止工作时，ABAP&#x2F;4开发工作台就会发出一个“突然出错”（short dump）。系统在系统日志中记录错误信息，并在表SNAP中记录程序终止时的出错信息。管理员需要每天检查是否有short dump 出现，如果有则分析并试图解决问题。</p>
<p><strong>1.8 系统日志</strong></p>
<p><strong>SM21系统日日志</strong></p>
<p>R&#x2F;3服务器在系统日志中记录系统的事件和问题。所有的警告和错误信息应被分析和解决。此程序应包括将问题及其解决方案做成文档。</p>
<p><strong>1.9 数据库</strong></p>
<p><strong>DB13 定义DATABASE相关的日常后台job,如：</strong></p>
<p>数据库备份，CHECK DATABASE ,OBTIMIZER STATISTICS UPDATE等等，</p>
<p>也可查看DATABASE相关后台作业的LOG </p>
<p><strong>DB12 SAPDBA日志</strong></p>
<p>检查夜间备份是否成功。</p>
<p>检查日志目录的剩余空间。</p>
<p><strong>DB02 存储管理</strong></p>
<p>监控数据库的扩长。</p>
<p>监控表和索引的扩长及碎片的情况。</p>
<p>如有必要监控数据库的优化统计。</p>
<p><strong>ST02 监控SAP R&#x2F;3 BUFFER状况</strong></p>
<p>每天监控SAP R&#x2F;3各种 BUFFER 的命中率，比如: ROLL MEMORY ,EXTEND MEMORY,HEAP MEMORY，TABLE BUFFER,ABAP PROGRAM BUFFER 等等。</p>
<p><strong>ST04 数据库性能监控</strong></p>
<p>每天监控数据库的性能统计值以观察数据库是否处于良好的运行状态。</p>
<p>每天监控对数据库逻辑上和物理上的读，以追踪数据库负载的发展情况。如：DATA BUFFER 命中率，SHARE MEMORY 命中率等等和数据库性能密切相关的重要</p>
<p>参数值。</p>
<p><strong>ST06 监控操作系统资源状况</strong></p>
<p>每天察看ST06用以掌握系统运行过程中整个操作系统资源状况，如：</p>
<p>CPU 使用率，内存使用率，PAGE SPACE 使用率等等。</p>
<p><strong>AL02数据库警报监视</strong></p>
<p>所有的警告均需被分析，修正和记录在案。</p>
<p><strong>1.10 操作系统</strong></p>
<p><strong>OS06 操作系统监视</strong></p>
<p>所有的警告均需被分析，修正和记录在案。</p>
<p><strong>AL16 操作系统警报监视</strong></p>
<p>所有的警告均需被分析，修正和记录在案。</p>
<p><strong>1.11 网络</strong></p>
<p><strong>ST09&#x2F;ST08 网络警报监视</strong></p>
<p>所有的警告均需被分析，修正和记录在案。</p>
<p><strong>2  工作定时系统</strong></p>
<p><strong>SM37 工作日志查看</strong></p>
<p>管理员应该检查所有被取消的工作，如有必要分析并修正这些工作。问题及其解决方案需记录在案。</p>
<p>管理器应该检查所有的日志，包括输出列表</p>
<p> <strong>RZ01 图形化的工作监视</strong></p>
<p><strong>3  打印系统</strong></p>
<p><strong>SP01 打印需求查看</strong></p>
<p>失败的打印任务可以从新启动。这些打印任务的失败往往是用户端的问题（如PC上的SAPLPD程序被关闭了）。由于R&#x2F;3 系统仅跟踪打印任务到目标队列中，输出控制器中的已经完成的状态并不能表明实际打印成功，因此那些比较重要和大量的打印任务在被从TemSe中删除前必须先确认是否完成。</p>
<p><strong>4  系统变更检查</strong></p>
<p><strong>4.1 DB03 数据库参数修改记录</strong></p>
<p>监控所有R&#x2F;3系统数据库参数的修改。管理员要经常检查参数是否由经授权的的用户修改。</p>
<p><strong>4.2 TU02 R&#x2F;3系统参数修改记录</strong></p>
<p>R&#x2F;3系统监控所有R&#x2F;3系统参数的修改。即使不是每天检查，系统管理员人要确认参数的调整是在艘全的情况下调整地。</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP知识点速查</title>
    <url>/2022/05/21/SAP%E7%9F%A5%E8%AF%86%E7%82%B9%E9%80%9F%E6%9F%A5/</url>
    <content><![CDATA[<p><strong>21、变量的范围</strong></p>
<p>abap程序变量的定义，全局变量、局部变量<br>如果在报表中，定义为全局变量，那么在所有的form中都能取到内表值，如果在form中定义的变量，那么别的form会拿不到这个内表值，虽然局部变量会更加安全和严谨，但是不方便。<br>按需使用。</p>
<p><strong>1、DELETE用法</strong></p>
<p>DELETE内表的话必须要在loop循环中或者加条件index，然后才能直接删除；如果loop循环是一个内表，循环内删除另外一个内表会直接dump。</p>
<p><strong>2、查询内表条数：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DATA:n type I</span><br><span class="line"> n = lines( it_tab ).</span><br></pre></td></tr></table></figure>

<p><strong>3、concatenate 与 &amp;&amp;</strong></p>
<p>有如将整型（I）与一个字符串（String）进行连接，此时不能直接使用CONCATENATE进行连接，因为CONCATENATE 操作的是字符类型，所以需要将整型转换为字符型后才能使用CONCATENATE 进行连接，但这里需要注意的，当正整型变量转换为字符类型时，符号位会转换为空格，这时使用CONCATENATE 接连得到的字符串可能会多出一个空格；当将整型变量与字符串进行连接时，最好使用 &amp;&amp; 操作符，除了直接能连接外，还不会出现多余空格的问题：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DATA: i TYPE i VALUE &#x27;10&#x27;.</span><br><span class="line">DATA: str TYPE string VALUE &#x27;string&#x27;.</span><br><span class="line">DATA: tmp TYPE string.</span><br><span class="line">str = i &amp;&amp; str.</span><br><span class="line">WRITE: / str.</span><br><span class="line">tmp = i.</span><br><span class="line">CONCATENATE tmp str INTO str.</span><br><span class="line">WRITE: / str.</span><br></pre></td></tr></table></figure>

<p><strong>4、select single * 的用法：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT SINGLE *</span><br><span class="line">    FROM ztmm_010</span><br><span class="line">    WHERE fph = it_upload-fph</span><br><span class="line">    AND   ebeln = it_upload-ebeln</span><br><span class="line">    AND   ebelp = it_upload-ebelp</span><br><span class="line">    AND   del NE &#x27;X&#x27;.</span><br><span class="line">    IF sy-subrc EQ 0.</span><br><span class="line">    PERFORM inmsg(zpubform) TABLES return USING &#x27;ZXMD_MSG&#x27; &#x27;E&#x27; &#x27;034&#x27;</span><br><span class="line">    it_upload-fph it_upload-ebeln</span><br><span class="line">    it_upload-ebelp ztmm_010-kpmxno.</span><br><span class="line">    ENDIF.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>如果select single * 执行成功，如果系统找到一个完全符合指定条件的行，SY-SUBRC返回0，否则返回4。</p>
<p><strong>5、消息号</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MESSAGE s000(oo) WITH &#x27;工厂必填&#x27; DISPLAY LIKE &#x27;E&#x27;.</span><br></pre></td></tr></table></figure>

<p><strong>6、记账码</strong></p>
<table>
<thead>
<tr>
<th>记账码</th>
<th>说明</th>
<th>记账码</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>客户借方</td>
<td>11</td>
<td>客户贷方</td>
</tr>
<tr>
<td>09</td>
<td>客户特别借方</td>
<td>19</td>
<td>客户特别贷方</td>
</tr>
<tr>
<td>21</td>
<td>供应商借方</td>
<td>31</td>
<td>供应商贷方</td>
</tr>
<tr>
<td>29</td>
<td>供应商特别借方</td>
<td>39</td>
<td>供应商特别贷方</td>
</tr>
<tr>
<td>40</td>
<td>一般总账借方</td>
<td>50</td>
<td>一般总账贷方</td>
</tr>
<tr>
<td>70</td>
<td>固定资产借方</td>
<td>75</td>
<td>固定资产贷方</td>
</tr>
</tbody></table>
<p><strong>7、主表与子表关系</strong></p>
<p>  销售凭证：VBAK&#x2F;VBAP</p>
<p>   采购凭证：ekko&#x2F;ekpo</p>
<p>   物料凭证：mkpf&#x2F;mseg</p>
<p>   会计凭证：bkpf&#x2F;bseg</p>
<p>其中会计凭证bseg之间的表关系：参考 《FICO的BSEG与各表之间的关系》记录。</p>
<p><strong>8、查看表修改记录：</strong></p>
<p>执行TCODE    se38</p>
<p>RKSE16N_CD_DISPLAY</p>
<p><strong>9、提高循环效率</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LOOP AT TAB1.</span><br><span class="line">	READ TABLE TAB2 WITH KEY 学号 = TAB1-学号 BINARY SEARCH TRANSPORTING NO FILEDS.</span><br><span class="line">	LOOP AT TAB2 FROM SY-TABXI.</span><br><span class="line">		IF TAB2-学号 &lt;&gt; TAB1-学号。</span><br><span class="line">			EXIT.</span><br><span class="line">		ENDIF.</span><br><span class="line">		&quot;其他处理</span><br><span class="line">	ENDLOOP.</span><br><span class="line">ENDLOOP.</span><br></pre></td></tr></table></figure>

<p>原因分析：内层循环表已经排序，首先根据内层循环表用二分法查找到指定学号的索引，然后从索引处开始循环，循环到学号与外层学号不一致时，退出内层循环，减少内层循环次数。</p>
<p><strong>10、ALV_SHOW部分代码，标准的</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FORM alvshow.</span><br><span class="line">  PERFORM init_fieldcat(zpubform) TABLES fieldcat USING:</span><br><span class="line"></span><br><span class="line">           &#x27;WERKS&#x27; &#x27;工厂&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; ,</span><br><span class="line">           &#x27;ZYF&#x27; &#x27;月份&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; ,</span><br><span class="line">           &#x27;CHANDI&#x27; &#x27;产地&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; ,</span><br><span class="line">           &#x27;HOUDUS&#x27; &#x27;厚度&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; ,</span><br><span class="line">           &#x27;WIDTHS&#x27; &#x27;宽度&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; ,</span><br><span class="line">           &#x27;CAIZHI&#x27; &#x27;材质&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; ,</span><br><span class="line">           &#x27;RZKC&#x27; &#x27;热轧库存&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; ,</span><br><span class="line">           &#x27;SXKC&#x27; &#x27;酸洗库存&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; ,</span><br><span class="line">           &#x27;RSKC&#x27; &#x27;热酸库存&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; ,</span><br><span class="line">           &#x27;ZHTL&#x27; &#x27;本月合同量&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; ,</span><br><span class="line">           &#x27;ZYDHL&#x27; &#x27;本月已到货量&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; ,</span><br><span class="line">           &#x27;ZWDHL&#x27; &#x27;本月未到货量&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27;,</span><br><span class="line">           &#x27;ZHTL1&#x27; &#x27;上月合同量&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; ,</span><br><span class="line">           &#x27;ZYDHL1&#x27; &#x27;上月已到货量&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; ,</span><br><span class="line">           &#x27;ZWDHL1&#x27; &#x27;上月未到货量&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27;,</span><br><span class="line">           &#x27;ZZWDHL&#x27; &#x27;未到货量合计&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27; &#x27;&#x27;</span><br><span class="line">    .</span><br><span class="line"></span><br><span class="line">  PERFORM alvfm(zpubform) TABLES it_output fieldcat USING &#x27;X&#x27; &#x27;&#x27;.</span><br><span class="line">ENDFORM.</span><br><span class="line"></span><br><span class="line">*调用自定义GUI状态</span><br><span class="line">FORM set_status USING rt_extab TYPE slis_t_extab.</span><br><span class="line">  DATA lt_exfcode TYPE TABLE OF sy-ucomm.</span><br><span class="line">  SET PF-STATUS &#x27;STANDARD_FULLSCREEN&#x27; EXCLUDING lt_exfcode.</span><br><span class="line">ENDFORM. &quot;set_status</span><br></pre></td></tr></table></figure>

<p><strong>11、根据不同状态显示不同按钮</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">根据不同状态显示不同的按钮</span><br><span class="line">*调用自定义GUI状态</span><br><span class="line">FORM set_status USING rt_extab TYPE slis_t_extab.</span><br><span class="line">  DATA lt_exfcode TYPE TABLE OF sy-ucomm.</span><br><span class="line">  IF p_r3 = &#x27;X&#x27;.</span><br><span class="line">    APPEND &#x27;BUT01&#x27; TO lt_exfcode.</span><br><span class="line">  ELSEIF p_r1 = &#x27;X&#x27; OR p_r2 = &#x27;X&#x27;.</span><br><span class="line">    APPEND &#x27;BUT02&#x27; TO lt_exfcode.</span><br><span class="line">  ENDIF.</span><br><span class="line">  SET PF-STATUS &#x27;STANDARD_FULLSCREEN&#x27; EXCLUDING lt_exfcode.</span><br><span class="line">ENDFORM. &quot;set_status</span><br></pre></td></tr></table></figure>

<p><strong>12、日期时间通用结构</strong></p>
<p>ZSPUBS_0001</p>
<p><strong>13、代码拆包</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;这里要注意向上取整的话，需要定义分子为menge类型，不能定义为i，不然在出现0.XXX的情况下就会为0.</span><br><span class="line">&quot;拆包，这个函数最多接受32767 行，把lt_periods 拆成每2w一个包</span><br><span class="line">  DATA:xh_index TYPE i.</span><br><span class="line">  DATA:g_lines TYPE mseg-menge.</span><br><span class="line">  DESCRIBE TABLE lt_periods LINES g_lines .</span><br><span class="line">  &quot;向上取整</span><br><span class="line">  xh_index = ceil( g_lines / 20000 ).</span><br><span class="line"></span><br><span class="line">  DO xh_index TIMES.</span><br><span class="line"></span><br><span class="line">    CLEAR lt_periods_m.</span><br><span class="line">    LOOP AT lt_periods INTO ls_periods.</span><br><span class="line">      IF ( sy-index * 20000 ) &gt;= sy-tabix AND sy-tabix &gt; ( sy-index - 1 ) * 20000  .</span><br><span class="line">        APPEND ls_periods TO lt_periods_m.</span><br><span class="line">      ELSE.</span><br><span class="line">        CONTINUE.</span><br><span class="line">      ENDIF.</span><br><span class="line">    ENDLOOP.</span><br><span class="line"></span><br><span class="line">    CLEAR lt_period_ml_data_m.</span><br><span class="line">    CALL METHOD cl_fml_join_ckmlpp_cr_buffer=&gt;get_most_recent_ml_pd_mass</span><br><span class="line">      EXPORTING</span><br><span class="line">        iv_untper         = f_untper</span><br><span class="line">        iv_bwkey          = p_werks</span><br><span class="line">        it_kalnr          = lt_periods_m</span><br><span class="line">        iv_poper          = p_month</span><br><span class="line">        iv_bdatj          = p_lfgja</span><br><span class="line">      IMPORTING</span><br><span class="line">        et_ml_period_data = lt_period_ml_data_m.</span><br><span class="line"></span><br><span class="line">    &quot;MOVE-CORRESPONDING lt_period_ml_data_m TO lt_period_ml_data.</span><br><span class="line">    APPEND LINES OF lt_period_ml_data_m TO lt_period_ml_data.</span><br><span class="line">  ENDDO.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>14、union用法：union合并重复行，union all 不合并重复行</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;收款金额</span><br><span class="line">   SELECT</span><br><span class="line">    kunnr,</span><br><span class="line">    xref1,</span><br><span class="line">    shkzg,</span><br><span class="line">    dmbtr</span><br><span class="line">  FROM bsid</span><br><span class="line">  WHERE</span><br><span class="line">    budat &gt; &#x27;20211231&#x27;</span><br><span class="line">  AND budat &lt;= @p_budat</span><br><span class="line">  AND blart &lt;&gt; &#x27;AB&#x27;</span><br><span class="line">  AND blart &lt;&gt; &#x27;RV&#x27;</span><br><span class="line"></span><br><span class="line">  union all</span><br><span class="line">  </span><br><span class="line">  select kunnr,</span><br><span class="line">     xref1,</span><br><span class="line">     shkzg,</span><br><span class="line">     dmbtr</span><br><span class="line">  from bsad</span><br><span class="line">  where budat &gt; &#x27;20211231&#x27;</span><br><span class="line">  and budat &lt;= @p_budat</span><br><span class="line">  and blart &lt;&gt; &#x27;ab&#x27;</span><br><span class="line">  and blart &lt;&gt; &#x27;rv&#x27;</span><br><span class="line"></span><br><span class="line">  INTO CORRESPONDING FIELDS OF TABLE @it_sk.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>15、批次相关</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1）根据特性查询相关批次</span><br><span class="line">CALL FUNCTION &#x27;ZFMS_16_GETPCTX&#x27;</span><br><span class="line">        EXPORTING</span><br><span class="line">          atnam   = &#x27;Z83&#x27;</span><br><span class="line">          werks   = it_ct_out-werks</span><br><span class="line">        TABLES</span><br><span class="line">          inmatnr = inmatnr</span><br><span class="line">          inlgort = inlgort</span><br><span class="line">          r_tab   = r_tab</span><br><span class="line">          outtab  = outtab.</span><br><span class="line">2）收货的时候会写入相关批次</span><br><span class="line"> CALL FUNCTION &#x27;ZFMS_01_MIGOPOST&#x27;</span><br><span class="line">        EXPORTING</span><br><span class="line">          budat = it_ct_out-budat</span><br><span class="line">          code  = &#x27;01&#x27;</span><br><span class="line">          bwart = &#x27;101&#x27;</span><br><span class="line">          bktxt = &#x27;ZMM010-油漆标准收货&#x27;</span><br><span class="line">        IMPORTING</span><br><span class="line">          rtype = p_type</span><br><span class="line">          rtmsg = p_msg</span><br><span class="line">          mblnr = mblnr</span><br><span class="line">          mjahr = mjahr</span><br><span class="line">        TABLES</span><br><span class="line">          item  = it_migo.</span><br><span class="line">3）新增批次编号（传入物料组）</span><br><span class="line">CALL FUNCTION &#x27;ZFM_GETBATCHNO&#x27;</span><br><span class="line">      EXPORTING</span><br><span class="line">        MATKL = MATKL</span><br><span class="line">      CHANGING</span><br><span class="line">        CHARG = NBATCH.</span><br><span class="line"></span><br><span class="line">4）更新批次特性</span><br><span class="line">it_char-no = &#x27;Z86&#x27;.</span><br><span class="line">        it_char-value = it_ct_out-zchangj.</span><br><span class="line">        APPEND it_char.</span><br><span class="line"></span><br><span class="line">        CLEAR:rtype,rtmsg.</span><br><span class="line">        CALL FUNCTION &#x27;ZMMS_UPDATE_OBJCL&#x27;</span><br><span class="line">          EXPORTING</span><br><span class="line">            matnr = it_ct_out-matnr</span><br><span class="line">            charg = new_charg</span><br><span class="line">            werks = it_ct_out-werks</span><br><span class="line">          IMPORTING</span><br><span class="line">            rtype = rtype</span><br><span class="line">            rtmsg = rtmsg</span><br><span class="line">          TABLES</span><br><span class="line">            char  = it_char.</span><br><span class="line"></span><br><span class="line">        IF sy-subrc &lt;&gt; &#x27;0&#x27;.</span><br><span class="line">          PERFORM bapi_rollback.</span><br><span class="line">          rtmsg = &#x27;物料批次创建失败:&#x27; &amp;&amp; rtmsg.</span><br><span class="line">        ELSE.</span><br><span class="line">          PERFORM bapi_commit.</span><br><span class="line">          it_ct_out-memo = &#x27;完成批次特性维护&#x27;.</span><br><span class="line">          MODIFY it_ct_out .</span><br><span class="line">        ENDIF.</span><br><span class="line">5）根据卷号找批次</span><br><span class="line"> intab-zjh = zztjh.</span><br><span class="line">      APPEND intab.</span><br><span class="line">      CALL FUNCTION &#x27;ZFM_GETBATCH_BYJH&#x27;</span><br><span class="line">        EXPORTING</span><br><span class="line">          nozero = &#x27;&#x27;</span><br><span class="line">        TABLES</span><br><span class="line">          intab  = intab</span><br><span class="line">          outtab = outtab. </span><br><span class="line">6）取批次特性</span><br><span class="line"> CALL FUNCTION &#x27;ZFMS_05_GETPCTX&#x27;</span><br><span class="line">        EXPORTING</span><br><span class="line">          ATNAM  = ATNAMSTR</span><br><span class="line">        TABLES</span><br><span class="line">          INTAB  = IT_MCHA</span><br><span class="line">          OUTTAB = OUTTAB.</span><br><span class="line">7）取批次特性1</span><br><span class="line">DATA:IT_VAL   TYPE TABLE OF API_VALI WITH HEADER LINE,</span><br><span class="line">     IT_CHAR1 TYPE TABLE OF API_CHAR WITH HEADER LINE,</span><br><span class="line">     IT_ATT   TYPE TABLE OF API_CH_ATT WITH HEADER LINE.</span><br><span class="line">LOOP AT it_mchb .</span><br><span class="line">    PERFORM getpctx(zpubform) TABLES it_val it_char1 it_att USING it_mchb-matnr it_mchb-werks it_mchb-charg.</span><br><span class="line">    READ TABLE it_val WITH KEY atnam = &#x27;Z15&#x27;.</span><br><span class="line">    IF sy-subrc EQ 0.</span><br><span class="line">      it_mchb-zht = it_val-atwrt. &quot;批次特性值</span><br><span class="line">    ENDIF.</span><br><span class="line">    modify it_mchb.</span><br><span class="line">    clear it_mchb.</span><br><span class="line">  ENDLOOP.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>16、BOM的表间关联</strong></p>
<p>STKO和STPO表间关联:</p>
<p>不可以，这是SAP比较奇怪的地方，虽然表STKO是抬头，STPO是行项目，但是STPO没有可选BOM，和STKO没办法直接关联，要STKO先和STAS关联，关联字段为STLAN何和STLAL，然后STAS和是STPO通过STLNR和STLKN关联。</p>
<p><strong>17、binary search注意点</strong></p>
<p>如果查询的2个条件都是相同值时，使用binary search可能失效，查出来的数据会有多条。即：sy-subrc &#x3D; 8。</p>
<p><strong>18、SAP表增强</strong></p>
<p>需要在增强中修改，还需要在OMSR中进行配置，参照之前的配置就行，配置完了进行传输。</p>
<p><strong>19、 关闭会话</strong></p>
<p>SM04进入查看所有会话实例，双击对应的实例，点击删除会话即可踢掉人。</p>
<p><strong>20、 财务相关TCODE</strong></p>
<p>FAGLL03H:总账科目行项目浏览（总账视图）<br>ZRFS002:财务报表<br>ZFI006:科目余额（三联帐）<br>ZFI023:票据管理平台<br>ZFI024:付款管理平台<br>ZFI025:收款管理平台<br>ZFI030:管理凭证平台</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP系统变量与移动类型</title>
    <url>/2022/05/20/SAP%E7%B3%BB%E7%BB%9F%E5%8F%98%E9%87%8F%E4%B8%8E%E7%A7%BB%E5%8A%A8%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<h2 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h2><p>SY-SUBRC: 系统执行某指令后,表示执行成功与否的变量,0表示成功</p>
<p>SY-DBLNT: 被处理过的记录的笔数</p>
<p>SY-UNAME: 当前使用者登入SAP的USERNAME</p>
<p>SY-DATUM: 当前系统日期</p>
<p>SY-UZEIT: 当前系统时间</p>
<p>SY-TCODE: 当前执行程序的Transaction code</p>
<p>SY-REPID: 当前程序名称</p>
<p>SY-INDEX : 当前LOOP循环过的次数</p>
<p>SY-TABIX: 当前处理的是internal table 的第几笔</p>
<p>SY-TMAXL: Internal table的总笔数</p>
<p>SY-SROWS: 屏幕总行数</p>
<p>SY-SCOLS: 屏幕总列数</p>
<p>SY-MANDT: 當前系統編號(CLIENT NUMBER)</p>
<p>SY-VLINE: 画竖线</p>
<p>SY-ULINE: 画横线</p>
<p>SY-PAGNO: 当前页号</p>
<p>SY-LINSZ: 当前报表宽度</p>
<p>SY-LINCT: 当前报表长度</p>
<p>SPACE: 空字符串</p>
<p>SY-LSIND: 列表索引页</p>
<p>SY-LISTI: 上一个列表的索引</p>
<p>SY-LILLI: 绝对列表中选定行的行号</p>
<p>SY-CUROW: 屏幕上的行</p>
<p>SY-CUCOL: 光标列</p>
<p>SY-CPAGE: 列表的当前显示页</p>
<p>SY-STARO:真实行号</p>
<p>SY-LISEL: 选择行的内容，长度为255</p>
<p>SY-LINNO: 当前行</p>
<p>SY-SUBRC：语句执行后的返回值，0表示成功</p>
<p>SY-DATUM：当前服务器日期</p>
<p>SY-UZEIT：当前服务器时间</p>
<p>SY-ULINE：255长度的水平线</p>
<p>SY-VLINE：垂直线</p>
<p>SY-INDEX：循环说执行的次数</p>
<p>SY-TABIX：内表循环的次数</p>
<p>SY-DYNNR：当前Screen号</p>
<p>SY-MANDT：当前登录的Client号</p>
<p>SY-STEPL：返回当前操作的屏幕行号（Table Control）</p>
<p>SY-LOOPC：当前表格控件在屏幕中的总行数（Table Control）</p>
<p>SY-UCOMM：PAI所出发的功能代码</p>
<p>SY-DYNNR：当前屏幕号</p>
<p>SY-MSGID：Message Class</p>
<p>SY-MSGNR：Message Number</p>
<p>SY-MSGTY：Message Type</p>
<p>SY-MSGV1~4：Message Variant</p>
<p>SY-LINCT：REPROT语句中设定的LINE-COUNT</p>
<p>SY-LINSZ：REPROT语句中设定的LINE-SIZE</p>
<p>SY-SROWS：当前窗口的列表行数</p>
<p>SY-SCOLS：当前窗口的列表栏目数</p>
<p>SY-PAGNO：当前页的页码</p>
<p>SY-LINNO：当前选定行的行号</p>
<p>SY-COLNO：当前选定列的列号</p>
<p>SY-LSIND：当前列表索引，第一级列表为1</p>
<p>SY-LILLI：选择某行时光标行位置</p>
<p>SY-CUROW：选择某行时光标列位置 </p>
<p>SY-ABCDE 常量，A-Z字母表</p>
<p>SY-BATCH 后台的程序运行</p>
<p>SY-COLNO：当前选定列的列号</p>
<p>SY-CPAGE 列表的当前显示页</p>
<p>SY-CUCOL 屏幕，PAI 的水平光标位置</p>
<p>SY-CUROW：选择某行时光标列位置</p>
<p>sy-datar:在PAI中，如果屏幕上至少有一个输入字段的值被用户或其他数据传输所更改，则为“X”，否则为初始值。</p>
<p>sy-datlo:用户的当前日期</p>
<p>SY-DATUM 服务器日期</p>
<p>SY-DYNNR 当前屏幕的编号</p>
<p>SY-INDEX 循环的次数(DO While)</p>
<p>SY-LANGU 当前登录语言</p>
<p>SY-LILLI：选择某行时光标行位置</p>
<p>SY-LINCT 当前报表长度 (REPROT语句中设定的LINE-COUNT)</p>
<p>SY-LINNO 当前选定行的行号</p>
<p>SY-LINSZ 当前报表宽度(REPROT语句中设定的LINE-SIZE)</p>
<p>SY-LISEL 选择行的内容,长度为255</p>
<p>SY-LISTI 上一个列表的索引</p>
<p>SY-LOOPC：当前表格控件在屏幕中的总行数（Table Control）</p>
<p>SY-LSIND：当前列表索引，第一级列表为1</p>
<p>SY-MSGID 消息, 消息类</p>
<p>SY-MSGTY 消息，消息类型</p>
<p>SY-MSGNO 消息, 消息编号</p>
<p>SY-MSGV1 消息,消息变量1</p>
<p>SY-MSGV2 消息,消息变量2</p>
<p>SY-MSGV3 消息,消息变量3</p>
<p>SY-MSGV4 消息,消息变量4</p>
<p>SY-PAGNO 当前页号</p>
<p>SY-SCOLS：当前窗口的列表栏目数</p>
<p>SY-SLSET 选择屏幕的变式名称</p>
<p>SY-SROWS：当前窗口的列表行数</p>
<p>SY-STARO 真实行号</p>
<p>SY-STEPL：返回当前操作的屏幕行号（Table Control）</p>
<p>SY-SUBRC 执行状态</p>
<p>SY-TABIX 当前处理的内表的Index</p>
<p>SY-TCODE 当前的事务代码</p>
<p>SY-UCOMM：PAI所出发的功能代码</p>
<p>SY-ULINE 水平线</p>
<p>SY-UNAME 用户名</p>
<p>SY-UZEIT 服务器时间</p>
<p>SY-VLINE 垂直线</p>
<p>附加几个系统常用函数</p>
<p>SHIFT STRING：左移字符串。长度减1。</p>
<p>CONCATENATE：连接字符串。</p>
<p> SPLIT：拆分字符串。</p>
<p>SEARCH：查询字符串。</p>
<p>REPLACE：替换字符串。</p>
<p>CONDENSE：删除多余的空格。</p>
<p>TRANSLATE：转换字符格式，如将’ABC’转换为’ABC’</p>
<p>CONVERT TEXT：创建一个可排序的字符串。</p>
<p>OVERLAY：用一个字符串覆盖另一个字符串。</p>
<p>STRLEN：字符串长度。</p>
<p>ABS：取绝对值。</p>
<p>COS、SIN、TAN：取三角函数值。</p>
<p>ACOS、ASIN、ATAN：反三角函数。</p>
<p>COSH、SINH、TANH：双曲函数。</p>
<p>EXP：E的幂函数。</p>
<p>LOG：底数为E的对数。</p>
<p>LOG10：底数为10的对数。</p>
<p>SQRT：平方根。</p>
<p>SIGN：返回参数符号。</p>
<p>TRUNC：返回参数的整数部分。</p>
<p>FRAC：输入参数的小数部分。</p>
<p>CEIL：返回不小于参数的最小整数。</p>
<p>FLOOR：返回不大于参数的最小整数。</p>
<h2 id="移动类型"><a href="#移动类型" class="headerlink" title="移动类型"></a>移动类型</h2><ul>
<li>01 MB01 按采购订单的货物移动</li>
<li>02 MB31 按生产订单的货物移动</li>
<li>03 MB1A 货物提取（工单退料）</li>
<li>04 MB1B 转移过帐</li>
<li>05 MB1C 其他收货</li>
<li>06 MB11 货物移动</li>
<li>07 MB04 “物料供应”消耗的事后调整</li>
</ul>
<table>
<thead>
<tr>
<th><strong>移动类型</strong></th>
<th><strong>移动类型文本</strong></th>
<th><strong>含义</strong></th>
<th><strong>事务码</strong></th>
</tr>
</thead>
<tbody><tr>
<td>101</td>
<td>GR 收货</td>
<td>直接收货</td>
<td>MIGO&#x2F;CO11N</td>
</tr>
<tr>
<td>102</td>
<td>用于PO冲销的收货</td>
<td>冲销直接收货</td>
<td>MIGO&#x2F;CO11N</td>
</tr>
<tr>
<td>103</td>
<td>进入冻结库存的收货</td>
<td>收入质检仓</td>
<td>MIGO</td>
</tr>
<tr>
<td>104</td>
<td>到冻结冲销的收货</td>
<td>冲销收入质检仓（待检退货等）</td>
<td>MIGO</td>
</tr>
<tr>
<td>105</td>
<td>来自冻结库存的收货</td>
<td>从质检仓收货入库</td>
<td>MIGO</td>
</tr>
<tr>
<td>106</td>
<td>来自冻结的收货冲销</td>
<td>冲销入库异常及向供应商退货</td>
<td>MIGO</td>
</tr>
<tr>
<td>121</td>
<td>收货后续调整</td>
<td></td>
<td></td>
</tr>
<tr>
<td>122</td>
<td>RE 向供应商退货</td>
<td>向供应商退货（101、105）</td>
<td>MIGO</td>
</tr>
<tr>
<td>123</td>
<td>RE退货供应商冲销</td>
<td>冲销向供应商退货（122）</td>
<td>MIGO</td>
</tr>
<tr>
<td>124</td>
<td>收货退货冻结库存</td>
<td>冻结库存退货（103）</td>
<td>MIGO</td>
</tr>
<tr>
<td>125</td>
<td>收货退货冻结库存冲销</td>
<td>冲销冻结库存退货（124）</td>
<td>MIGO</td>
</tr>
<tr>
<td>131</td>
<td>收货</td>
<td></td>
<td></td>
</tr>
<tr>
<td>132</td>
<td>收货</td>
<td></td>
<td></td>
</tr>
<tr>
<td>141</td>
<td>收货后续调整</td>
<td></td>
<td></td>
</tr>
<tr>
<td>142</td>
<td>收货后续调整</td>
<td></td>
<td></td>
</tr>
<tr>
<td>161</td>
<td>收货退货</td>
<td>创建退货采购订单向供应商退货</td>
<td></td>
</tr>
<tr>
<td>162</td>
<td>收货退货冲销</td>
<td>冲销创建退货采购订单向供应商退货</td>
<td></td>
</tr>
<tr>
<td>201</td>
<td>有关成本中心的发货</td>
<td>向成本中心发料</td>
<td>MB1A</td>
</tr>
<tr>
<td>202</td>
<td>有关成本中心的收货</td>
<td>成本中心退料或冲销成本中心发料</td>
<td>MB1A</td>
</tr>
<tr>
<td>221</td>
<td>有关项目的发货</td>
<td>向项目发货</td>
<td></td>
</tr>
<tr>
<td>222</td>
<td>有关项目的收货</td>
<td>项目退货或冲销项目发货</td>
<td></td>
</tr>
<tr>
<td>231</td>
<td>有关销售订单的发货</td>
<td>销售订单的发货</td>
<td></td>
</tr>
<tr>
<td>232</td>
<td>有关销售订单的收货</td>
<td>销售订单的退货或重销销售订单的发货</td>
<td></td>
</tr>
<tr>
<td>241</td>
<td>有关资产的发货</td>
<td>向资产的发货</td>
<td></td>
</tr>
<tr>
<td>242</td>
<td>有关资产的收货</td>
<td>向资产的发货</td>
<td></td>
</tr>
<tr>
<td>251</td>
<td>有关销售的发货</td>
<td>有关销售的发货</td>
<td>MB1A</td>
</tr>
<tr>
<td>252</td>
<td>有关销售的收货</td>
<td>有关销售的收货</td>
<td>MB1A</td>
</tr>
<tr>
<td>261</td>
<td>有关订单的发货</td>
<td>工单领料</td>
<td>MIGO&#x2F;MB1A</td>
</tr>
<tr>
<td>262</td>
<td>有关订单的收货</td>
<td>工单退料（或冲销工单领料）</td>
<td>MB1A</td>
</tr>
<tr>
<td>281</td>
<td>有关网络的发货</td>
<td>有关网络的发货</td>
<td></td>
</tr>
<tr>
<td>282</td>
<td>有关网络的收货</td>
<td>有关网络的收货</td>
<td></td>
</tr>
<tr>
<td>291</td>
<td>发货的全部帐户分配</td>
<td>向所有对象发货（可选择发货到对象的类型）</td>
<td></td>
</tr>
<tr>
<td>292</td>
<td>收货的全部帐户分配</td>
<td>向所有对象收货（可选择发货到对象的类型）</td>
<td></td>
</tr>
<tr>
<td>301</td>
<td>TF工厂间的转移</td>
<td>工厂间的转移（one step）</td>
<td></td>
</tr>
<tr>
<td>302</td>
<td>TR工厂间的转储</td>
<td></td>
<td></td>
</tr>
<tr>
<td>303</td>
<td>TF出库到工厂</td>
<td></td>
<td></td>
</tr>
<tr>
<td>304</td>
<td>TR出库到工厂</td>
<td></td>
<td></td>
</tr>
<tr>
<td>305</td>
<td>TF厂内库存转储计划</td>
<td></td>
<td></td>
</tr>
<tr>
<td>306</td>
<td>TR厂内库存交易计划</td>
<td></td>
<td></td>
</tr>
<tr>
<td>309</td>
<td>TF转储采购物料到物料</td>
<td>TF转储采购物料到物料</td>
<td>MB1B</td>
</tr>
<tr>
<td>310</td>
<td>TR转储采购物料到物料</td>
<td>TR转储采购物料到物料</td>
<td>MB1B</td>
</tr>
<tr>
<td>311</td>
<td>TF厂内移储</td>
<td>TF厂内移储</td>
<td>MB1B</td>
</tr>
<tr>
<td>312</td>
<td>TR 厂内转储</td>
<td>TR 厂内转储</td>
<td>MB1B</td>
</tr>
<tr>
<td>313</td>
<td>TF出库到库存地</td>
<td>从出库库存到库存地</td>
<td></td>
</tr>
<tr>
<td>314</td>
<td>TR出库到库存地</td>
<td>冲销出库库存到库存地</td>
<td></td>
</tr>
<tr>
<td>315</td>
<td>TF库存地库存转储计划</td>
<td></td>
<td></td>
</tr>
<tr>
<td>316</td>
<td>TR库存地库存转储计划</td>
<td></td>
<td></td>
</tr>
<tr>
<td>317</td>
<td>创建结构化物料</td>
<td></td>
<td></td>
</tr>
<tr>
<td>318</td>
<td>RE创建结构化物料</td>
<td></td>
<td></td>
</tr>
<tr>
<td>319</td>
<td>拆分结构化物料</td>
<td></td>
<td></td>
</tr>
<tr>
<td>320</td>
<td>RE拆分结构化物料</td>
<td></td>
<td></td>
</tr>
<tr>
<td>321</td>
<td>TF质量到非限制</td>
<td>质检库存到非限制库存</td>
<td></td>
</tr>
<tr>
<td>322</td>
<td>TR 质量到非限制</td>
<td>冲销质检库存到非限制库存</td>
<td></td>
</tr>
<tr>
<td>323</td>
<td>TF厂内质量</td>
<td></td>
<td></td>
</tr>
<tr>
<td>324</td>
<td>TR厂内质量</td>
<td></td>
<td></td>
</tr>
<tr>
<td>325</td>
<td>TF厂内冻结</td>
<td></td>
<td></td>
</tr>
<tr>
<td>326</td>
<td>TR厂内冻结</td>
<td></td>
<td></td>
</tr>
<tr>
<td>331</td>
<td>GI 到采样QI</td>
<td></td>
<td></td>
</tr>
<tr>
<td>332</td>
<td>RE 到采样QI</td>
<td></td>
<td></td>
</tr>
<tr>
<td>333</td>
<td>GI 到采样非限制</td>
<td></td>
<td></td>
</tr>
<tr>
<td>334</td>
<td>RE 到采样非限制</td>
<td></td>
<td></td>
</tr>
<tr>
<td>335</td>
<td>GI 到采样冻结</td>
<td></td>
<td></td>
</tr>
<tr>
<td>336</td>
<td>RE 到采样冻结</td>
<td></td>
<td></td>
</tr>
<tr>
<td>340</td>
<td>批次重估</td>
<td></td>
<td></td>
</tr>
<tr>
<td>341</td>
<td>TF 非限制到限制</td>
<td>从非限制库存移动到限制库存</td>
<td>MB1B</td>
</tr>
<tr>
<td>342</td>
<td>TF 限制到非限制</td>
<td>从限制库存移动到非限制库存</td>
<td>MB1B</td>
</tr>
<tr>
<td>343</td>
<td>TF冻结到非限制</td>
<td>冻结库存到非限制库存</td>
<td></td>
</tr>
<tr>
<td>344</td>
<td>TR 冻结到非限制</td>
<td>冲销冻结库存到非限制库存</td>
<td></td>
</tr>
<tr>
<td>349</td>
<td>TF 冻结到QI</td>
<td>冻结库存到质检库存</td>
<td></td>
</tr>
<tr>
<td>350</td>
<td>TR冻结到QI</td>
<td>冲销冻结库存到质检库存</td>
<td></td>
</tr>
<tr>
<td>351</td>
<td>TF在途库存</td>
<td></td>
<td></td>
</tr>
<tr>
<td>352</td>
<td>TR 在途库存</td>
<td></td>
<td></td>
</tr>
<tr>
<td>411</td>
<td>TF库存地到库存地</td>
<td>寄售转自有（K）、MTO到MTS</td>
<td>MB1B</td>
</tr>
<tr>
<td>412</td>
<td>TR库存地到库存地</td>
<td>寄售转自有（K）、MTS到MTO</td>
<td>MB1B</td>
</tr>
<tr>
<td>413</td>
<td>TF库存地到销售订单</td>
<td>销售订单库存之间转储</td>
<td></td>
</tr>
<tr>
<td>414</td>
<td>TR库存地到销售订单</td>
<td>销售订单库存之间转储</td>
<td></td>
</tr>
<tr>
<td>415</td>
<td>TF 库存地到项目</td>
<td></td>
<td></td>
</tr>
<tr>
<td>416</td>
<td>TR 库存地到项目</td>
<td></td>
<td></td>
</tr>
<tr>
<td>441</td>
<td>TP 非限制到 tiedEmp</td>
<td></td>
<td></td>
</tr>
<tr>
<td>442</td>
<td>TP tiedEmp.到非限制</td>
<td></td>
<td></td>
</tr>
<tr>
<td>451</td>
<td>GI退货</td>
<td>Returns  from customer without Shipping</td>
<td>MB1C</td>
</tr>
<tr>
<td>452</td>
<td>RE 退货(冲销)</td>
<td>冲销451</td>
<td></td>
</tr>
<tr>
<td>453</td>
<td>总储备退回发出处</td>
<td>总储备退回发出处</td>
<td>MB1B</td>
</tr>
<tr>
<td>454</td>
<td>总储备到退货</td>
<td>总储备到退货</td>
<td>MB1B</td>
</tr>
<tr>
<td>455</td>
<td>TF库存转储退货</td>
<td></td>
<td></td>
</tr>
<tr>
<td>456</td>
<td>TR库存转储退货</td>
<td></td>
<td></td>
</tr>
<tr>
<td>457</td>
<td>TP 退货到总储备 QI</td>
<td>客户退货的转回（质检库存）</td>
<td></td>
</tr>
<tr>
<td>458</td>
<td>TP 总储备QI到退货</td>
<td>客户退货的转回（质检库存）冲销</td>
<td></td>
</tr>
<tr>
<td>459</td>
<td>TP退货到总储备冻结</td>
<td>客户退货的转回（冻结库存）</td>
<td></td>
</tr>
<tr>
<td>460</td>
<td>TP 总储备冻结到退货</td>
<td>客户退货的转回（冻结库存）冲销</td>
<td></td>
</tr>
<tr>
<td>501</td>
<td>无PO的收货</td>
<td>无采购订单的收货</td>
<td></td>
</tr>
<tr>
<td>502</td>
<td>RE无PO的收货</td>
<td>无采购订单的退货</td>
<td></td>
</tr>
<tr>
<td>503</td>
<td>收货到QI</td>
<td></td>
<td></td>
</tr>
<tr>
<td>504</td>
<td>RE收货到数量</td>
<td></td>
<td></td>
</tr>
<tr>
<td>505</td>
<td>收据到收货</td>
<td></td>
<td></td>
</tr>
<tr>
<td>506</td>
<td>RE收货到冻结</td>
<td></td>
<td></td>
</tr>
<tr>
<td>511</td>
<td>免费交货</td>
<td></td>
<td></td>
</tr>
<tr>
<td>512</td>
<td>无费用的RE交货</td>
<td></td>
<td></td>
</tr>
<tr>
<td>521</td>
<td>无订单的收货</td>
<td>无订单的收货</td>
<td></td>
</tr>
<tr>
<td>522</td>
<td>RE无生产订单的收货</td>
<td>无订单的收货的冲减</td>
<td></td>
</tr>
<tr>
<td>523</td>
<td>无生产订单的QI收货</td>
<td>质检库存无订单的收货</td>
<td></td>
</tr>
<tr>
<td>524</td>
<td>RE无生产订单的质量</td>
<td>质检库存无订单的收货冲销</td>
<td></td>
</tr>
<tr>
<td>525</td>
<td>无生产订单的冻结收货</td>
<td>冻结库存无订单的收货</td>
<td></td>
</tr>
<tr>
<td>526</td>
<td>RE无生产订单冻结</td>
<td>冻结库存无订单的收货冲销</td>
<td></td>
</tr>
<tr>
<td>531</td>
<td>副产品收货</td>
<td></td>
<td></td>
</tr>
<tr>
<td>532</td>
<td>RE副产品</td>
<td></td>
<td></td>
</tr>
<tr>
<td>541</td>
<td>对转包库存的GI仓库</td>
<td>对转包库存的GI仓库</td>
<td>MB1B</td>
</tr>
<tr>
<td>542</td>
<td>RE转包库存到仓库</td>
<td>RE转包库存到仓库</td>
<td>MB1B</td>
</tr>
<tr>
<td>543</td>
<td>GI发货销售订单存货</td>
<td>GI发货销售订单存货</td>
<td>MIGO</td>
</tr>
<tr>
<td>544</td>
<td>GI收货销售订单存货</td>
<td>GI收货销售订单存货</td>
<td>MIGO</td>
</tr>
<tr>
<td>545</td>
<td>副产品SC收货</td>
<td></td>
<td></td>
</tr>
<tr>
<td>546</td>
<td>GI 发货 SC 副产品</td>
<td></td>
<td></td>
</tr>
<tr>
<td>551</td>
<td>GI报废</td>
<td>GI报废（仓库物料报废）</td>
<td>MB1B</td>
</tr>
<tr>
<td>552</td>
<td>RE报废</td>
<td>RE报废（仓库物料报废）</td>
<td>MB1B</td>
</tr>
<tr>
<td>553</td>
<td>GI报废QI</td>
<td>质检库存报废</td>
<td></td>
</tr>
<tr>
<td>554</td>
<td>RE报废QI</td>
<td>质检库存报废冲销</td>
<td></td>
</tr>
<tr>
<td>555</td>
<td>GI报废冻结</td>
<td>冻结库存报废</td>
<td></td>
</tr>
<tr>
<td>556</td>
<td>RE报废冻结</td>
<td>冻结库存报废冲销</td>
<td></td>
</tr>
<tr>
<td>557</td>
<td>GI调整转运</td>
<td></td>
<td></td>
</tr>
<tr>
<td>558</td>
<td>GI调整转运</td>
<td></td>
<td></td>
</tr>
<tr>
<td>561</td>
<td>库存余额的初始条目</td>
<td>库存余额的初始条目</td>
<td></td>
</tr>
<tr>
<td>562</td>
<td>RE初始条目库存余额</td>
<td>RE初始条目库存余额（初始库存冲销）</td>
<td></td>
</tr>
<tr>
<td>563</td>
<td>初始条目库存余额:QI</td>
<td>质检限制性初始库存</td>
<td></td>
</tr>
<tr>
<td>564</td>
<td>RE库存余额输入:QI</td>
<td>质检初始库存冲销</td>
<td></td>
</tr>
<tr>
<td>565</td>
<td>库存余额输入:冻结</td>
<td>冻结初始库存</td>
<td></td>
</tr>
<tr>
<td>566</td>
<td>RE库存余额输入:冻结</td>
<td>冻结初始库存冲销</td>
<td></td>
</tr>
<tr>
<td>571</td>
<td>收货装配</td>
<td></td>
<td></td>
</tr>
<tr>
<td>572</td>
<td>RE 收货装配</td>
<td></td>
<td></td>
</tr>
<tr>
<td>573</td>
<td>收货 QI 装配</td>
<td></td>
<td></td>
</tr>
<tr>
<td>574</td>
<td>RE 收货 QI 装配</td>
<td></td>
<td></td>
</tr>
<tr>
<td>575</td>
<td>收货冻结装配</td>
<td></td>
<td></td>
</tr>
<tr>
<td>576</td>
<td>RE 收货冻结装配</td>
<td></td>
<td></td>
</tr>
<tr>
<td>581</td>
<td>收货副产品网络</td>
<td></td>
<td></td>
</tr>
<tr>
<td>582</td>
<td>RE 副产品  网络</td>
<td></td>
<td></td>
</tr>
<tr>
<td>601</td>
<td>GD发货: 交货(内销)</td>
<td>GD发货: 交货(内销)</td>
<td></td>
</tr>
<tr>
<td>602</td>
<td>RE交货冲销(内销)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>603</td>
<td>TF出库到工厂</td>
<td></td>
<td></td>
</tr>
<tr>
<td>604</td>
<td>TR出库到工厂</td>
<td></td>
<td></td>
</tr>
<tr>
<td>605</td>
<td>TF厂内库存转储计划</td>
<td></td>
<td></td>
</tr>
<tr>
<td>606</td>
<td>TR厂内库存交易计划</td>
<td></td>
<td></td>
</tr>
<tr>
<td>621</td>
<td>GI返回式包装:借贷</td>
<td></td>
<td></td>
</tr>
<tr>
<td>622</td>
<td>GI返回式包装:退货</td>
<td></td>
<td></td>
</tr>
<tr>
<td>623</td>
<td>GI发货:客户退货包装</td>
<td></td>
<td></td>
</tr>
<tr>
<td>624</td>
<td>GI收货:客户退货包装</td>
<td></td>
<td></td>
</tr>
<tr>
<td>631</td>
<td>GI寄售: 借贷</td>
<td>寄售订单发货到办事处</td>
<td></td>
</tr>
<tr>
<td>632</td>
<td>GI寄售: 退货</td>
<td>寄售订单发货到办事处</td>
<td></td>
</tr>
<tr>
<td>633</td>
<td>GI发货: 客户寄售</td>
<td>寄售结算发货订单由办事处发货到客户处</td>
<td></td>
</tr>
<tr>
<td>634</td>
<td>GI收货: 客户寄售</td>
<td>冲销633</td>
<td></td>
</tr>
<tr>
<td>635</td>
<td>TF托售出租</td>
<td></td>
<td></td>
</tr>
<tr>
<td>636</td>
<td>TR寄售退货交货</td>
<td></td>
<td></td>
</tr>
<tr>
<td>641</td>
<td>TF在途库存</td>
<td></td>
<td></td>
</tr>
<tr>
<td>642</td>
<td>TR 在途库存</td>
<td></td>
<td></td>
</tr>
<tr>
<td>643</td>
<td>TF 至跨公司间</td>
<td></td>
<td></td>
</tr>
<tr>
<td>644</td>
<td>TR 至跨公司间</td>
<td></td>
<td></td>
</tr>
<tr>
<td>645</td>
<td>TF 跨公司</td>
<td></td>
<td></td>
</tr>
<tr>
<td>646</td>
<td>TR 跨公司</td>
<td></td>
<td></td>
</tr>
<tr>
<td>647</td>
<td>TF在途库存</td>
<td></td>
<td></td>
</tr>
<tr>
<td>648</td>
<td>TR 在途库存</td>
<td></td>
<td></td>
</tr>
<tr>
<td>651</td>
<td>GD退货 退回</td>
<td>客户退货退回（限制性使用库存的转回）</td>
<td></td>
</tr>
<tr>
<td>652</td>
<td>GD退货 退货冲销</td>
<td>冲销发货过账（标准及免费换货客户退货退回发货仓）</td>
<td></td>
</tr>
<tr>
<td>653</td>
<td>GD 退货  非限制</td>
<td>客户退货退回（非限制性使用库存的转回）</td>
<td></td>
</tr>
<tr>
<td>654</td>
<td>GD 退货 非限制 冲销</td>
<td>冲销客户退货退回（非限制性使用库存的转回）</td>
<td></td>
</tr>
<tr>
<td>655</td>
<td>GD 退货 QI</td>
<td>客户退货退回（质检状态使用库存的转回）</td>
<td></td>
</tr>
<tr>
<td>656</td>
<td>GD 退货 QI 冲销</td>
<td>冲销客户退货退回（质检状态使用库存的转回）</td>
<td></td>
</tr>
<tr>
<td>657</td>
<td>GD 退货冻结</td>
<td>客户退货退回（冻结使用库存的转回）</td>
<td></td>
</tr>
<tr>
<td>658</td>
<td>GD 退货冻结冲销</td>
<td>冲销客户退货退回（冻结使用库存的转回）</td>
<td></td>
</tr>
<tr>
<td>661</td>
<td>GI向供应商退货</td>
<td></td>
<td></td>
</tr>
<tr>
<td>662</td>
<td>RE退货到供应商冲销</td>
<td></td>
<td></td>
</tr>
<tr>
<td>671</td>
<td>TR 在途库存</td>
<td></td>
<td></td>
</tr>
<tr>
<td>672</td>
<td>TF在途库存</td>
<td></td>
<td></td>
</tr>
<tr>
<td>673</td>
<td>TF 至跨公司间</td>
<td></td>
<td></td>
</tr>
<tr>
<td>674</td>
<td>TR 至跨公司间</td>
<td></td>
<td></td>
</tr>
<tr>
<td>675</td>
<td>TR 跨公司</td>
<td></td>
<td></td>
</tr>
<tr>
<td>676</td>
<td>TF 跨公司</td>
<td></td>
<td></td>
</tr>
<tr>
<td>677</td>
<td>TR 在途库存</td>
<td></td>
<td></td>
</tr>
<tr>
<td>678</td>
<td>TF在途库存</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6A1</td>
<td>TF  GI1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6A2</td>
<td>TR  GI1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6A3</td>
<td>TF CC  GI1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6A4</td>
<td>TR CC  GI1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6A5</td>
<td>TF CC  GI1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6A6</td>
<td>TR CC  GI1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6A7</td>
<td>TF  GI1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6A8</td>
<td>TR  GI1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6B1</td>
<td>TF  GI2</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6B2</td>
<td>TR  GI2</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6B3</td>
<td>TF CC  GI2</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6B4</td>
<td>TR CC  GI2</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6B5</td>
<td>TF CC  GI2</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6B6</td>
<td>TR CC  GI2</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6B7</td>
<td>TF  GI2</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6B8</td>
<td>TR  GI2</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6K5</td>
<td>TF GI2 托售</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6K6</td>
<td>TR GI2 托售</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6W5</td>
<td>TF GI1 托售</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6W6</td>
<td>TR GI1 托售</td>
<td></td>
<td></td>
</tr>
<tr>
<td>701</td>
<td>GR实际盘点: 仓库</td>
<td>盘盈</td>
<td></td>
</tr>
<tr>
<td>702</td>
<td>GI实际盘点: 仓库</td>
<td>盘亏</td>
<td></td>
</tr>
<tr>
<td>703</td>
<td>GR实际盘点: QI</td>
<td>质检物料盘盈</td>
<td></td>
</tr>
<tr>
<td>704</td>
<td>GI实际盘点: QI</td>
<td>质检物料盘亏</td>
<td></td>
</tr>
<tr>
<td>707</td>
<td>GR实际盘点: 已冻结</td>
<td>冻结物料盘盈</td>
<td></td>
</tr>
<tr>
<td>708</td>
<td>GI实际盘点: 冻结</td>
<td>冻结物料盘亏</td>
<td></td>
</tr>
<tr>
<td>711</td>
<td>GI存货差异: 仓库</td>
<td></td>
<td></td>
</tr>
<tr>
<td>712</td>
<td>GR存货差异: 仓库</td>
<td></td>
<td></td>
</tr>
<tr>
<td>713</td>
<td>GI存货差异:QI</td>
<td></td>
<td></td>
</tr>
<tr>
<td>714</td>
<td>GR存货差异: 质检</td>
<td></td>
<td></td>
</tr>
<tr>
<td>715</td>
<td>GI存货差异: 退货</td>
<td></td>
<td></td>
</tr>
<tr>
<td>716</td>
<td>GR存货差异: 退货</td>
<td></td>
<td></td>
</tr>
<tr>
<td>717</td>
<td>GI存货差异: 冻结</td>
<td></td>
<td></td>
</tr>
<tr>
<td>718</td>
<td>GR存货差异: 冻结</td>
<td></td>
<td></td>
</tr>
<tr>
<td>721</td>
<td>SlsVal.rec.n.afftMgs</td>
<td></td>
<td></td>
</tr>
<tr>
<td>722</td>
<td>SlsVal.iss.n.afftMgs</td>
<td></td>
<td></td>
</tr>
<tr>
<td>731</td>
<td>SlsVal.rec.  afftgMgs</td>
<td></td>
<td></td>
</tr>
<tr>
<td>732</td>
<td>SlsVal.iss.  afftgMgs</td>
<td></td>
<td></td>
</tr>
<tr>
<td>841</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>842</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>843</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>844</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>901</td>
<td>GD发货: 交货(外销)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>902</td>
<td>RE交货冲销(外销)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Z03</td>
<td>有关内部订单的发货</td>
<td>有关内部订单的发货</td>
<td>MB1A</td>
</tr>
<tr>
<td>Z04</td>
<td>有关内部订订单的收货</td>
<td>有关内部订订单的收货</td>
<td>MB1A</td>
</tr>
<tr>
<td>Z09</td>
<td>TF转储采购物料到物料</td>
<td>TF转储采购物料到物料</td>
<td>MB1B</td>
</tr>
<tr>
<td>Z10</td>
<td>TR转储采购物料到物料</td>
<td>TR转储采购物料到物料</td>
<td>MB1B</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP月结步骤</title>
    <url>/2022/06/23/SAP%E7%BB%93%E8%B4%A6%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<p>1，VF04 查看当月所有交货都已经开好发票，并与实际打印发票要一致，VFX3则是销售发票的会计过账检查。当月的发票应该全部开出并且过账才对（即两个Tcode的当月清单均为空才是正确的）。特别注意样品交货。</p>
<p>​      这样可保证当月收入与成本匹配。</p>
<p>2，COOIS  查看生产订单状态，收货数与确认数应一致，另外，如果采用了物料分类账，为了避免在产品对差异分摊的影响，请把所有订单都做DLV或者TECO技术完成处理。这个要求，对保证生产成本的正确至关重要（为保险起见，请全部用DLV，如果生产订单中有联产品，则联产品也应打上交货已经完成的勾）。</p>
<p>3，S_ALR_87013611  查看成本中心报表,在后续成本要素分配分摊过程中,做完每一步都要在这里刷新报表查看结果是不是正确。注意成本中心（组）及费用要素（组）的选择，生产成本中心不应该出现非制造费用科目有金额。管理费用要素组也不应该出现生产成本中心，一定要先做这个检查。发现不匹配，应做纠错分录处理。</p>
<p>在进行下面的步骤之前，最好是先发出系统通知，请所有用户登出系统，以避免与结账操作互相冲突，对结账过程产生不利影响。</p>
<p>4, KSV5&#x2F;KSU5  分配与分摊.   KSV5分配在初级成本要素之间,KSU5分摊则是在初级与次级之间进行费用的重分配,最终目标是把生产费用合理地分摊到生产成本中心去.如果是各车间共同费用分摊到各生产车间，最好是采用KSV5，这样可以费用的原始科目分摊转移（注：这个对后面的差异计算及作业价格重估有影响）。如果是采用KSU5，则要用到次级（43类型）成本要素进行结转，这样查看报表时看不清楚费用科目的来龙去脉。KSU5如果不用次级成本要素，则必须用到成本结构（TC：KSES维护）。还要注意循环的属性：重复和累计的选择，以及接受方以什么为基数分配接收。KSU5应该也可以实现KSV5的功能。如果要在生产成本中心之间再进行分摊转移，则应该采用KSU5。</p>
<p>   我们选择使用KSV5。并且在ksv5之前，先用ksvb进行计划分配。</p>
<p>5，KSS1  差异计算 （如果KSV5&#x2F;KSU5错误应用，差异计算也会错）</p>
<p>6，KSS2  作业成本分割（固定与变动）（注意同上）</p>
<p>7，KSII   作业价格重算 （得到实际作业价格）(结果受到上面三步的直接影响)。注意这里可以选择期间，意味着可以得到几个月的累计实际作业价格。这是进行成本计划时重要的参考数据。如果某个生产成本中心有作业发生，但是确没有成本金额产生，或者有金额产生但是没有作业发生，两种情况都会带来问题。没有作业发生等于是一个分式的分母为0，会发生无法相除的致命错误！如果没有金额，则分子为0，虽然现在不致命，但是到后面，会告诉你某个作业类型的实际价格无法确定，仍是致命错误！</p>
<p>8，CO8A  联产品成本预结算（预分配），当存在联产品时必做。保险起见，一般都做一下这一步。</p>
<p>9，KKAO  在产品成本计算  （在产品成本从生产成本状态转入在产品科目，形成存货，当使用物料分类账时，在产品并不分摊差异，这一点要特别注意，也是因为这一点，请避免产生在产品，这是神人SAP屠夫最有用的建议之一）。</p>
<p>10，KKS1  生产订单成本差异计算，比较耗时，请耐心等待。结果出来后，会发现很多条错误类型的消息。这里需要经验判断，哪一些错误是不需要理睬的：例如某个订单没有dlv或者teco的状态，某个订单是clsd状态，或者别的已经知道原因并且处理过的错误信息。这一步要慎重对待。如果发现新的错误信息，则一定要先处理完错误才能继续。这时候请尊重顾问，向顾问虚心求教！切记。</p>
<p>11，CO88  生产订单结算（这里，如果在结算版本中配置的在产品转出的会计科目同时生成了初级成本要素就会出错, 必须删除这个科目的成本要素）。如果前面都顺利，则生产订单的结算一般不会出现问题。这一步完成之后，生产订单就都处理完毕了。但是差异并没有实际结转，要继续以下重头戏：物料分类账的结账</p>
<p>12，CKLMCP 以下物料分类账的结账内容较多，并且交错影响：</p>
<p>物料账月末处理： a.选择        CKMLCP    物料账月末处理：b.确定顺序    CKMLCP 物料账月末处理：c.单级处理确定   CKMLCP  检查单级处理确定中的错误（如果处理中发现错误，并进行了修改，请重新从“物料账月末处理：a选择        CKMLCP”重新开始操作） 物料账月末处理：d.多级处理确定   CKMLCP  检查多级处理确定中的错误（如果处理中发现错误，并进行了修改，请重新从“物料账月末处理：a选择        CKMLCP”重新开始操作）</p>
<p>物料账月末处理： e.消耗的重新评估  CKMLCP</p>
<p>上面这几步完成后，要先打开新的期间才能继续： 打开新的物料期间   MMPV（打开期间前，必须已处理完所有的单级及多级的错误） </p>
<p>打开新的会计期间 OB52  （打开这两个期间后，新的物料标准价格才能下达）</p>
<p>然后继续：</p>
<p>物料账月末处理： f.记账清算      CKMLCP （测试运行） （此步骤必须先测试运行）  检查物料账月末处理是否正确，OK后才能       物料账月末处理：f.记账清算     CKMLCP  （正式运行）   查询物料账相关报表，检查数据是否正确。其实只要查看F.01报表中的存货与生产成本，所有差异都结转为0，生产成本也结转为0，就表示正确无误了。但一般会存在几分钱的零头差异，这是正常的结果。生产成本的零头差异，一般在成本中心报表中可以看到。而存货差异的零头差异，则一般可用ckmvfm查看明细(未分摊的差异)。因均为零头，而且在系统运算过程中无法避免，所以一般都是用总账调整分录直接在FI中调整即可。 13，月末成本处理及物料账结算完成。打开锁定用户。通知大家可以继续正常使用系统了。</p>
<p>最后在CKMLCP中的标志价格那一步，作用是在物料主档的会计1视图中以移动平均价更新未来价格。这一步没有必要做。</p>
<p>至此，成本结算就差不多了。 再返回去看成本中心报表，所有生产成本中心应该结平（转走了），但一般情况下会出现几分钱的余额，这属正常现象。如果余额较大，应分析原因，以避免下一期再出现较大余额。但本期可以直接在FI中用调整分录调整一下就可以了。</p>
<p>另外要看F.01 报表中在产品与生产成本科目的余额.   生产成本科目的余额按道理应为0才对,因为在产品结算后,生产成本的余额就全部转到在产品科目了. </p>
<p> 此时所有物料，在系统中的成本已经转换成了实际成本。月末库存成本也为实际成本。实际成本：移动加权平均成本。系统中是使用周期成本来表述。</p>
<p>以上为最重要的月末结账操作。从上面的描述可知，月末结账的内容很多，而且因为在结账过程中要冻结系统，一般人员不能使用，所以要求在半天，最多一天的时间内完成。过程中每一步都很重要，不允许出现错误，否则遗害整个系统。如果过程中出现错误，必须要有经验的人员进行处理，必须是处理完错误之后才能继续。因此需要资深的，对系统有全局把握的人员负责。当公司人员无法解决问题时，还必须得到外部顾问的帮助。（让人尴尬的是，SAP公司的技术支持人员，不会帮用户解决使用上碰到的非系统错误性质的问题）</p>
<p>以下还有三个重要的结账操作：</p>
<p>14，FAGL_FC_VAL  外币评估。  这一步要在所有外币业务处理完，特别是外销的收入。做完收入还要核对，例如跟报税的资料核对。一般配置两个变式，一个是要在下月初冲回，如果应收应付科目，一个则是不冲回，如货币资金科目。请按变式操作，不要随便动变式的任何配置。</p>
<p>15，F.19  GI&#x2F;IR收货与收发票的对比，即在途存货与暂估应付账款的记账。 请按变式操作，不要随便动变式的任何配置。一般为暂估应付账款，即已经收货但没有收到发票的状态。这时的负债的是一个临时的，暂估的金额，因为最终是以发票金额确认负债的。</p>
<p>16，FAGLF101 应收应付科目余额的重分类。请按变式操作，不要随便动变式的任何配置。应收科目的余额正常应该在借方，但如果出现在贷方呢？就应该重分类为负债。相反，应付科目的余额正常应该在贷方，但如果出现在借方呢？就应该重分类为资产。</p>
<p>以上完成之后，SAP的系统月结就完成了。</p>
<p>此时还可以做一些非生产制造成本费用的，非外币业务的，非应收应付的总账分录。如果没有，请及时关闭已经结账月份的期间。</p>
<p>最终关闭旧期间： OB52  </p>
<p>只有关闭了旧期间，这个期间的会计报表才是固定不变的。</p>
<p>数据已经定型，接下来，各位分析师们，就开始各种数据分析了。</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP统驭科目理解</title>
    <url>/2022/06/08/SAP%E7%BB%9F%E9%A9%AD%E7%A7%91%E7%9B%AE%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<h3 id="1、定义"><a href="#1、定义" class="headerlink" title="1、定义"></a>1、定义</h3><p>首先统驭科目就是特别总账科目，只是用在SAP应收、应付业务中，起了个名称为特别总账，主要用于解决与一个客户、供应商发生不同业务，需要记账再不同的会计科目上。</p>
<p>可以说：统驭科目是一座桥，链接着总账和明细账，它是一个需要和明细账核对的总账科目，与明细账平行，但是不能单独记账。常常用于客户（D）、供应商（K）、资产类科目（A）记账。</p>
<p>再次理解：统驭科目（reconciliation account）指的就是将明细科目归集起来的意思，统驭科目类型分三类：供应商类别（K）、客户类别（D）、固定资产类别（A），主要针对应收账款、应付账款、固定资产等模块过入的金额，他们的交易时不通过总账模块进行的，但再各自模块完成的同时，会将相应的金额过入总账。</p>
<p>举例：公司向供应商（中百超市）采购3千元的商品，正常的财务记账方式如下：</p>
<p><strong>借：办公费用3千元          贷：应付账款3千元</strong></p>
<p>但采购人员不会像财务人员那样记账。通常将业务理解为支付中百超市3千元用于采购办公用品一批。</p>
<p>在实际的SAP系统中，采购收货后产生物料凭证（并关联产生会计凭证），系统就会自动在财务这边生成一笔凭证（财务并没有手工记账），之所以自动生成，时因为科目“应收账款”设为了供应商“中百超市”的统驭科目。当然，实际运作中由于收货和发票并不同步，所以会有中间科目过渡。但在理解时可以将中间记账科目简化，假设时同步完成。直接产生借费用，贷应付。费用科目可以在采购订单中手工指定。而应付科目就是通过供应商统驭科目的方式实现的。<strong>设为统驭科目的会计科目就不能在手工记账了，只能通过其他的模块（如：AR（应收账款）&#x2F;AP（应付账款）&#x2F;SD&#x2F;MM）自动记账</strong>。</p>
<p>设置一个统驭科目的步骤：</p>
<p>1、新建一个科目FSS0（如：应收账款或应付账款）并指定它的“统驭科目类型”为“客户&#x2F;供应商&#x2F;资产”</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220608143011488.png" alt="image-20220608143011488"></p>
<p>2、在创建客户活供应商主数据时，在其“统驭科目”（公司代码标签下）选择刚才新建的那个会计科目，这样，以后对这个客户或供应商进行记账的话，从AR&#x2F;AP&#x2F;SD&#x2F;MM那边记“***供应商”的同时，也会自动在GL中记一笔，并记在“应收账款活应付账款”上。</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SAP脚本录制与回放功能</title>
    <url>/2022/06/20/SAP%E8%84%9A%E6%9C%AC%E5%BD%95%E5%88%B6%E4%B8%8E%E5%9B%9E%E6%94%BE/</url>
    <content><![CDATA[<p>SAP系统的脚本录制功能，支持VB Script，可以将屏幕操作记录下来，转换成VB Script代码，VB Script代码编辑修改后可用在office软件中的vba中，可以批量进行数据处理。</p>
<p>​    一、开启SAP脚本录制功能</p>
<p>​    事务代码：RZ11</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/81ii58rk00.png" alt="img"></p>
<p> 输入参数名称：sapgui&#x2F;user_scripting，回车</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/5euwlxi0c3.png" alt="img"></p>
<p> 进入“参数详细信息”界面后，点击“更改值”</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/b587w8m0co.png" alt="img"></p>
<p> 找到“新价值”录入框，录入“TRUE”，然后保存，即可激活SAP脚本录制功能。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/nc5tugndbh.png" alt="img"></p>
<p> 在SAP首页，点击“更多”–“SAP GUI 设置和操作”–“脚本录制和回放”为可选状态，且能调出录制控件，即表示激活成功。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/yq9t9g3s7l.jpeg" alt="img"></p>
<p>​    二、SAP脚本录制功能测试</p>
<p>​    我们以修改物料主数据的“MRP2视图”中的“计划交货时间”为例，如下：</p>
<p>​    1.打开录制，点下图红色按钮</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/6us71ox25v.png" alt="img"></p>
<p> 2.输入事务代码“&#x2F;nMM02”</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/fbdanrighk.png" alt="img"></p>
<p>​        输入物料编码、选择工厂代码，进入到MRP2视图，找到计划交货时间，并进行修改后保存。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/fbb5yjslk.png" alt="img"></p>
<p>​    3.录制结束，停止录制</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/3oghu3jdt7.png" alt="img"></p>
<p>   \4. 找到存放脚本的文件夹，如果未修改，脚本默认名称为Script1.vbs</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/5ww447pc4p.png" alt="img"></p>
<p>​    5.使用记事本格式或装vb打开录制脚本</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/2hsr965c76.png" alt="img"></p>
<p>​    获取脚本引擎的方法，如下：</p>
<p>​        Set SapGuiAuto  &#x3D; GetObject(“SAPGUI”)</p>
<p>​        Set application &#x3D; SapGuiAuto.GetScriptingEngine</p>
<p>​    只需要复制上图红色框部分内容到EXCEL的VBA代码中。</p>
<p>​    6.在EXCEL中整理需要维护的物料编码、计划交货日期</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/m34rh2fj49.png" alt="img"></p>
<p>​    7.在EXCEL“开发工具”–“VBA代码”里将脚本复制到vba编辑器， 添加FOR循环，达到批量修改的目的，把物料编码修改为表格的第1列，把计划交货时间修改为表格的第2列</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/uvb4tu6qp.png" alt="img"></p>
<p>实际vba代码，修改mm02计划交货日期，使用前提：sap已登录。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Sub SAPTEST()</span><br><span class="line">    Dim i%</span><br><span class="line">    Set SapGuiAuto = GetObject(&quot;SAPGUI&quot;)</span><br><span class="line">    Set sapApplication = SapGuiAuto.GetScriptingEngine</span><br><span class="line">    Set Connection = sapApplication.Children(0)</span><br><span class="line">    Set session = Connection.Children(0)</span><br><span class="line">    </span><br><span class="line">For i = 2 To 4</span><br><span class="line">With session.findById(&quot;wnd[0]&quot;).maximize</span><br><span class="line">session.findById(&quot;wnd[0]/tbar[0]/okcd&quot;).Text = &quot;/NMM02&quot;</span><br><span class="line">session.findById(&quot;wnd[0]&quot;).sendVKey 0</span><br><span class="line">session.findById(&quot;wnd[0]/usr/ctxtRMMG1-MATNR&quot;).Text = Cells(i, 1)</span><br><span class="line">session.findById(&quot;wnd[0]&quot;).sendVKey 0</span><br><span class="line">session.findById(&quot;wnd[1]&quot;).sendVKey 0</span><br><span class="line">session.findById(&quot;wnd[0]/usr/tabsTABSPR1/tabpSP14&quot;).Select</span><br><span class="line">session.findById(&quot;wnd[1]/usr/ctxtRMMG1-WERKS&quot;).Text = &quot;2000&quot;</span><br><span class="line">session.findById(&quot;wnd[1]/usr/ctxtRMMG1-WERKS&quot;).caretPosition = 4</span><br><span class="line">session.findById(&quot;wnd[1]&quot;).sendVKey 0</span><br><span class="line">session.findById(&quot;wnd[0]/usr/tabsTABSPR1/tabpSP14/ssubTABFRA1:SAPLMGMM:2000/subSUB3:SAPLMGD1:2485/txtMARC-PLIFZ&quot;).Text = Cells(i, 2)</span><br><span class="line">session.findById(&quot;wnd[0]/usr/tabsTABSPR1/tabpSP14/ssubTABFRA1:SAPLMGMM:2000/subSUB3:SAPLMGD1:2485/txtMARC-PLIFZ&quot;).SetFocus</span><br><span class="line">session.findById(&quot;wnd[0]/usr/tabsTABSPR1/tabpSP14/ssubTABFRA1:SAPLMGMM:2000/subSUB3:SAPLMGD1:2485/txtMARC-PLIFZ&quot;).caretPosition = 1</span><br><span class="line">session.findById(&quot;wnd[0]&quot;).sendVKey 0</span><br><span class="line">session.findById(&quot;wnd[1]/usr/btnSPOP-OPTION1&quot;).press</span><br><span class="line">session.findById(&quot;wnd[0]/tbar[0]/btn[15]&quot;).press</span><br><span class="line"></span><br><span class="line">End With</span><br><span class="line">Next i</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure>

<p>  <img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220621075119024.png" alt="image-20220621075119024"></p>
<p>  8.最后，点执行按钮，即可进行SAP的批量数据更新处理</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/npk4e41hrh.png" alt="img"></p>
<ol start="9">
<li>需要注意的地方是，如果物料编码本身手工操作修改有问题，那么用vba批导也可能会619错误，这个要注意下。</li>
</ol>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>SE21创建_复制包均报错</title>
    <url>/2022/05/20/SE21%E5%88%9B%E5%BB%BA-%E5%A4%8D%E5%88%B6%E5%8C%85%E5%9D%87%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<h3 id="1-1-1-报错"><a href="#1-1-1-报错" class="headerlink" title="1.1.1 *报错*"></a><strong>1.1.1</strong> <em><strong>*报错*</strong></em></h3><p>SE21</p>
<p>创建 ZGST_CO_PCA</p>
<p>继续</p>
<p>Software component HOME is not modifiable</p>
<p>&amp;软件组件HOME不可修改</p>
<p>&amp;复制Z001，也会出现同样的报错。</p>
<h3 id="1-1-2-I-incident"><a href="#1-1-2-I-incident" class="headerlink" title="1.1.2 *I**incident*"></a><strong>1.1.2</strong> <em><strong>*I*</strong></em><em><strong>*incident*</strong></em></h3><h4 id="1-1-2-1-Error-when-creating-development-package"><a href="#1-1-2-1-Error-when-creating-development-package" class="headerlink" title="1.1.2.1 *Error when creating development package*"></a><strong>1.1.2.1</strong> <em><strong>*Error when creating development package*</strong></em></h4><p>When I tried to create a new development package with transaction code ‘SE21’, the following error occured: Software component HOME is not modifiable (Message no. TR463). The parameters were the same as those I set on another server last year. (And I tried it again on that sever, it still works now). Then I tried to copy a development package that existed in the sever, the same error occured. The following is the parameters:</p>
<p>Application Component: Empty</p>
<p>Software Component: HOME</p>
<p>Transport Layer: ZDS4</p>
<p>Superpackage: Empty</p>
<p>Package Type: Development Package</p>
<p>Package encapsulated: Not checked</p>
<h4 id="1-1-2-2-Note"><a href="#1-1-2-2-Note" class="headerlink" title="1.1.2.2 *Note*"></a><strong>1.1.2.2</strong> <em><strong>*Note*</strong></em></h4><p><em><strong>*2404403 - You get an error “System setting does not allow you to change &amp; &amp; &amp;.” when you try to edit an object*</strong></em></p>
<p><em><strong>*Symptom*</strong></em></p>
<p>When you try to edit some object in your system or you do some other actions which are to change some objects, you get the following error:</p>
<p>System setting does not allow you to change &amp; &amp; &amp;.(<Program ID> <Object Type>  <Object Name>).</p>
<p>Message no. TR006</p>
<p><em><strong>*Diagnosis*</strong></em></p>
<p>The object <Program ID> <Object Type>  <Object Name> is assigned to the software component <Component Name> through its package.</p>
<p>This software component is not modifiable in this SAP System.</p>
<p><em><strong>*System Response*</strong></em></p>
<p>The function terminates.</p>
<p>Procedure for System Administration</p>
<p>Check whether you can modify software component <Component Name></p>
<p>You can set the modifiability of software components in the Transport Organizer Tools under Administration -&gt;Set System Change Option. </p>
<p><em><strong>*Environment*</strong></em></p>
<p>ABAP System, Release independent</p>
<p><em><strong>*Resolution*</strong></em></p>
<p>Firstly, please specify the package name of the object through the object attributes or table TADIR.</p>
<p>Then you can go to SE80 to get the the software component of the assigned package.</p>
<p>Now you must make the following settings to be able to do the needful change in the system.</p>
<p>SE06-&gt;System change options </p>
<p>The following settings must be made.</p>
<p>Global settings: “modifiable”</p>
<p>You must also set the software component of the assigned package to “modifiable” or “Restrict Modifiable” , for example:</p>
<p>Ü The software component LOCAL (“Local Developments (No Automatic Transport)”) must be “Modifiable” for the package $TMP.</p>
<p>Ü The software component HOME (“Developments Without Delivery to Customers”) must be “Modifiable” for a package with the software component HOME.</p>
<p>Ü All other software components must be set to “Modifiable” or “Restrict Modifibility” correspondingly.</p>
<p><em><strong>*Namespace&#x2F;name range*</strong></em></p>
<p>Ü The namespace “General SAP Name range” and “Customer name range” must be set to “modifiable”.</p>
<p>Ü All other namespaces&#x2F;name ranges can be set to “Not Modifiable”.</p>
<p>For example, when you edit the object “ZLOGON_SCREEN_INFO” in SE61, you may got error TR006 or TR045.To resolve the error, you need to change the settings below:</p>
<p>Ü SE06-&gt;System Change Options-&gt;Global Settings:Modifiable</p>
<p>Ü Software Component-&gt;Local or Home-&gt;Modifiable</p>
<p>Ü Namespace&#x2F;Name Range-&gt;Customer Name Range: Modifiable </p>
<p>Keywords</p>
<p>TR045, TR 045, TR 006, system settings</p>
<h3 id="1-1-3-解决过程"><a href="#1-1-3-解决过程" class="headerlink" title="1.1.3 *解决过程*"></a><strong>1.1.3</strong> <em><strong>*解决过程*</strong></em></h3><p>SE06</p>
<p>系统更改选项</p>
<p>点击</p>
<p>客户开发-&gt;HOME-&gt;修改为可修改</p>
<p>这里的状态不对，如下修改：</p>
<p>保存</p>
<p>SE21创建包即可</p>
<h3 id="1-1-4-问题小结"><a href="#1-1-4-问题小结" class="headerlink" title="1.1.4 *问题小结*"></a><strong>1.1.4</strong> <em><strong>*问题小结*</strong></em></h3><p>上图是一个正常的D110系统的SE06的设置，可见是SAP的BASIS漏了非常重要的工作。</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>简介</title>
    <url>/2023/06/23/hello-world/</url>
    <content><![CDATA[<p>厂里的打工仔，打灰、上螺丝家常便饭。</p>
<p>主要就是SAP、致远OA、帆软、项目管理的一些问题点的记录。</p>
]]></content>
  </entry>
  <entry>
    <title>会计凭证理解</title>
    <url>/2022/06/17/%E4%BC%9A%E8%AE%A1%E5%87%AD%E8%AF%81%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="1、会计凭证分类"><a href="#1、会计凭证分类" class="headerlink" title="1、会计凭证分类"></a>1、会计凭证分类</h2><p>会计凭证主要按照其用途和填制程序分类，可以分为原始凭证和记账凭证两类。</p>
<p>区别：</p>
<p>（一）原始凭证：俗称单据，实在静静业务发生或完成时取得或填制的，用以记录、证明经济业务已经发生或完成的书面证据，时进行会计核算的原始依据。</p>
<p>原始凭证一般实在经济业务发生时直接取得或填制的，记载着大量的经济信息，又是证明经济业务发生的初始文件，具有较强的法律效力，所以它时一种很重要的凭证。</p>
<p>原始凭证按照其来源不同，可分为外来原始凭证和自制原始凭证。</p>
<p>（二）记账凭证：俗称传票，时会计人员根据审核后的原始凭证的经济内容确定会计分录而编制的一种凭证，时直接登账的依据。原始凭证来自各个不同的方面，表明经济业务的具体内容，因而其种类繁多，格式不易，不能清楚地表明其归类的会计科目和记账方向，不经过必要的归纳和整理，难以达到记账的要求。</p>
<p>记账凭证按照其反应的经济业务的内容不同，可以分为<strong>收款凭证、付款凭证和转账凭证</strong>。</p>
<ol>
<li>收款凭证</li>
</ol>
<p>收款凭证时用以记录现金、银行存款收入业务的记账凭证。</p>
<p>具体可以分为<strong>现金收款凭证</strong>、银行存款收款凭证。实际工作中，一般时由出纳人员根据有关人员审批批准后的收款收据编制而成的。</p>
<ol start="2">
<li>付款凭证</li>
</ol>
<p>付款凭证时用以记录现金、银行存款支付业务的记账凭证，具体可以分为<strong>现金付款凭证、银行存款付款凭证</strong>，实际工作中，它是由出纳人员根据有关人员审核批准的付款单据编制而成。</p>
<ol start="3">
<li>转账凭证</li>
</ol>
<p>转账凭证时用以记录不涉及现金、银行存在首付的其他经济业务，即转账业务，它是根据有关转账业务的原始凭证编制而成的。</p>
<h2 id="2、会计记账凭证对应科目"><a href="#2、会计记账凭证对应科目" class="headerlink" title="2、会计记账凭证对应科目"></a>2、会计记账凭证对应科目</h2><p>会计科目时按照经济业务的内容和经济管理的要求，对会计要素的具体内容进行分类核算的科目，称为会计科目。</p>
<h4 id="会计记账凭证对应科目"><a href="#会计记账凭证对应科目" class="headerlink" title="会计记账凭证对应科目"></a>会计记账凭证对应科目</h4><p>记账凭证的基本功时根据借贷记账法的记账规则，编制会计分录。</p>
<p>编制会计分录时，必须填写会计科目，要符合如下要求：</p>
<p>1、字迹必须清晰、工整。</p>
<p>2、一级科目、二级科目或明细科目填写齐全，对应关系清楚，金额正确无误</p>
<p>3、书写时，文字不要占满格，一般占格高度1&#x2F;2，上面留空格，便于更正差错。</p>
<p>4、必须使用统一会计制度规定的会计科目，不得自创，以保证核算口径一致。</p>
<h4 id="会计记账凭证科目的详细"><a href="#会计记账凭证科目的详细" class="headerlink" title="会计记账凭证科目的详细"></a>会计记账凭证科目的详细</h4><p>会计科目只不过时一个企业经营资料的统计分类而已，所以如果懂得会计科目的性质及结构系统，每一个管理员不但能看懂财务报表，还能设计会计科目，使会计资料成为很好的管理信息。</p>
<p>会计科目时会计人员做记录的基础，在结构上共分五大类：即（1）资产（2）负债（3）资本（4）收益（5）费用（成本）</p>
<p>一、资产：指企业所拥有的一切有价资源，其中又可分为流动资产、固定资产、其它资产等三小类。流动资产指现金及企业希望变成现金的资产。例如银行存款、应收账款、存货等。固定资产是指企业不希望出售，而是长期使用的资产，如土地、房屋、机器等。其它资产指无形资产、未分摊费用、保证金等。</p>
<p>二、负债：指企业的债务，其中又可分为流动负债、长期负债和其他负债。流动负债是指一年以下负债，长期负债是指一年以上的负债，而其他负债是指斐财务行目标的所发生的负债，如存入保证金、代收款及各项损失准备等。</p>
<p>三、资本：又名股东权益，是企业中属于股东的部分，所以等于资产与负债之差。资本可分股本及盈余两类，股本是股东所投资的部分，盈余是企业所赚的部分。</p>
<p>四、收益：是指企业的出售产品或提供服务所发生的收入，可分营业收入及营业外收入两小类，营业收入是企业预定营业范围内的收入，而营业外收入是指预定营业范围外的收入，如非金融业的利息收入等。</p>
<p>五、费用：是指因收益而发生的支出，其中又分四小类：直接成本、销售费用、管理费用、营业外费用。</p>
<p>直接成本：是该项支出可直接归属于某项营业收入者，如销货成本、材料成本等。</p>
<p>销售费用：是指为达成营业的目的而发生的支出，但无法直接归属于某项营业收入者。</p>
<p>管理费用：是指维持企业运作所必须支付的费用，如管理人员薪酬、租金支出等。</p>
<p>营业外费用：是指财务费用及投资损失等非属达成营业收入而必要的支出。</p>
<h4 id="会计分录的一些理解"><a href="#会计分录的一些理解" class="headerlink" title="会计分录的一些理解"></a>会计分录的一些理解</h4><p>会计恒等式，资产 &#x3D; 负债 + 所有者权益。</p>
<p>经过一年的经营（不考虑分红），资产 &#x3D; 负债 + 所有者权益 + 利润。</p>
<p>利润 &#x3D; 收入 - 成本 - 费用。可以推导出：</p>
<p>资产 &#x3D; 负债 + 所有者权益 + 收入 - 成本 - 费用</p>
<p>整理得：</p>
<p>资产 + 成本 + 费用 &#x3D; 负债 + 所有者权益 + 收入</p>
<p>该等式左边科目，借方额 &#x3D; 增加，贷方额 &#x3D; 减少；（借增贷减）</p>
<p>该等式右边科目，借方额 &#x3D; 减少，贷方额 &#x3D; 增加；（借减贷增）</p>
<p>拿到具体业务，先分析影响的相关会计科目，这些科目是分别属于等式的左侧还是右侧，然后考虑该科目的余额（或发生额）会增加还是减少，然后按照公式去判断这个科目增加时，时使用借还是贷。</p>
<hr>
<ol>
<li>举例：老板出差去美国，买机票2张，银行转账支付。</li>
</ol>
<p>影响科目：管理费用（费用，等式左边，借增贷减），银行存款（资产，等式左边，借增贷减）。</p>
<p>影响方式：管理费用增加 &#x3D;&#x3D;&gt; 借方，银行存款减少 &#x3D;&#x3D;&gt; 贷方。</p>
<p>会计分录：借：管理费用；贷：银行存款</p>
<ol start="2">
<li>再举例：老板在美国出差期间，取得美国VC的股权投资额，银行转账入账。</li>
</ol>
<p>影响科目：银行存款（资产，等式左边，借增贷减），实收资本（所有者权益，等式右边，借减贷增）</p>
<p>影响方式：银行存款增加 &#x3D;&#x3D;&gt; 借方，实收资本增加 &#x3D;&#x3D;&gt; 贷方。</p>
<p>会计分录：借：银行存款；贷：实收资本</p>
<ol start="3">
<li>再再举例：电费先是归集到制造费用，然后再分摊到每一个机台的生产成本中。</li>
</ol>
<p>会计分录：<br>电费录入：制造费用-电费（费用，等式左边，借增贷减）；供应商-预付账款（资产，等式左边，借增贷减）</p>
<p>制造费用-电费增加 &#x3D;&#x3D;&gt; 借方，供应商-预付账款减少 &#x3D;&#x3D;&gt; 贷方</p>
<p>会计分录：借：电费增加，贷：预付账款</p>
<p>付款过账：供应商-预付账款（资产，等式左边，借增贷减）；银行存款（资产，等式左边，借增贷减）</p>
<p>供应商-预付账款增加 &#x3D;&#x3D;&gt; 借方，银行存款减少 &#x3D;&#x3D;&gt; 贷方</p>
<p>会计分录：借：预付账款，贷：银行存款。</p>
]]></content>
      <categories>
        <category>财务</category>
      </categories>
      <tags>
        <tag>财务</tag>
      </tags>
  </entry>
  <entry>
    <title>会计科目知识</title>
    <url>/2022/07/05/%E4%BC%9A%E8%AE%A1%E7%A7%91%E7%9B%AE%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<p>会计科目是记账的根本，主要分为一级、二级、三级或者更明细的层级，大家会发现SAP中会计科目都是末级科目，没法像国产软件那样分别查看一级、二级科目的余额，事实上，不管是一级、二级、还是三级科目，在财务记账时，都是对明细科目记账的，这和SAP是一致的。</p>
<p>科目余额表，亦称”总账余额汇总表“，它是按照总账科目余额编制的。</p>
<p><strong>1，科目余额表的标准格式如下：</strong></p>
<p>表格格式</p>
<table>
<thead>
<tr>
<th>科目名称</th>
<th>期初余额</th>
<th>本期发生</th>
<th>期末余额</th>
<th></th>
<th></th>
<th align="right"></th>
</tr>
</thead>
<tbody><tr>
<td>借方</td>
<td>贷方</td>
<td>借方</td>
<td>贷方</td>
<td>借方</td>
<td>贷方</td>
<td align="right"></td>
</tr>
<tr>
<td>现金</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td align="right"></td>
</tr>
<tr>
<td>银行存款</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td align="right"></td>
</tr>
<tr>
<td>应收帐款</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td align="right"></td>
</tr>
<tr>
<td>…</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td align="right"></td>
</tr>
<tr>
<td>合计</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td align="right"></td>
</tr>
</tbody></table>
<p><strong>2，科目余额表的具体编制方法：</strong></p>
<p>1、所有已制单的单据（凭证）的余额，原理为期初余额+（或-）本期发生额（包括借方发生额和贷方发生额）&#x3D;期末余额；</p>
<p>2、只是在选项时有无包括已记帐凭证，就是范围，一般应选择包括未记帐的凭证。</p>
<p>3，做科目余额表的目的主要是为了方便做<a href="https://baike.baidu.com/item/%E8%B4%A2%E5%8A%A1%E6%8A%A5%E8%A1%A8">财务报表</a>。</p>
<p>科目余额表就是各个科目的余额，一般包括上期余额,<a href="https://baike.baidu.com/item/%E6%9C%AC%E6%9C%9F%E5%8F%91%E7%94%9F%E9%A2%9D/2118923">本期发生额</a>,期末余额.0。</p>
<p>通俗点说就是根据汇总的凭证而形成的每个科目的余额，而这些科目分属于资产、负债和<a href="https://baike.baidu.com/item/%E6%89%80%E6%9C%89%E8%80%85%E6%9D%83%E7%9B%8A">所有者权益</a>，所形成的等式就是资产&#x3D;负债+所有者权益。</p>
<p>作用就是用于查询公司的会计科目的发生额、余额等会计信息。</p>
<p>你按上面所示列表即可编制科目余额表，期初余额直接在总账上抄，本期发生额是根据凭证进行汇总得出，资产类期末余额&#x3D;期初余额借方余额+本期借方发生额-本期贷方发生额&#x3D;正数，余额在借方，负数则余额在贷方。负债类期末余额&#x3D;期初余额贷方余额+本期贷方发生额-本期借方发生额&#x3D;正数，余额在贷方，负数则余额在借方。</p>
<p>科目余额表是为了做报表用的，所有凭证全部结转处理结束后才可以编制。</p>
<hr>
<p><strong>六个会计科目那个是借减贷增？那个是借增贷减?</strong></p>
<ol>
<li><p>首先6个会计科目：资产类科目、负债类科目、共同类科目、所有者权益类科目、成本类科目、损益类科目。</p>
</li>
<li><p>具体会计科目按其归属的会计要素分类：</p>
</li>
</ol>
<p><strong>资产类科目：</strong>按资产的流动性分为反映<a href="https://www.dongao.com/wdzt/zjzcgl_liudongzichan/">流动资产</a>的科目和反映非流动资产的科目。比如银行存款、库存现金</p>
<p><strong>负债类科目：</strong>按负债的偿还期限分为反映流动负债的科目和反映长期负债的科目。比如短期借款、应付票据、应付账款、预收账款、应缴税费等。</p>
<p><strong>共同类科目：</strong>共同类科目的特点是需要从其期末余额所在方向界定其性质。</p>
<p><strong>所有者权益类科目：</strong>按权益的形成和性质可分为反映资本的科目和反映留存收益的科目。比如：实收资本、资本公积、本年利润、利润分配等。</p>
<p><strong>成本类科目：</strong>包括“生产成本”，“劳务成本”，“制造费用”等科目。比如：生产成本、制造费用、劳务成本、研发支出等。</p>
<p><strong>损益类科目：</strong>分为收入性科目和费用支出性科目。收入性科目包括“主营业务收入”，“其他业务收入”，“投资收益”，“营业外收入”等科目。费用支出性科目包括“主营业务成本”，“其他业务成本”，“税金及附加”，“其他业务支出”，“销售费用”，“管理费用”，“财务费用”，“<a href="https://www.dongao.com/wdzt/zjzcgl_suodeshui/">所得税</a>费用”等科目。</p>
<p>那么回答最初提出的问题：</p>
<p><strong>资产类科目、成本类科目、损益类费用支出性科目是借增贷减。负债类科目、所有者权益类科目、损益类收入性科目是借减贷增。</strong></p>
]]></content>
      <categories>
        <category>财务</category>
      </categories>
      <tags>
        <tag>财务</tag>
      </tags>
  </entry>
  <entry>
    <title>你真的了解ELT和ETL吗</title>
    <url>/2022/07/08/%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BA%86%E8%A7%A3ELT%E5%92%8CETL%E5%90%97/</url>
    <content><![CDATA[<p>ETL 和 ELT 有很多共同点，从本质上讲，每种集成方法都可以将数据从源端抽取到数据仓库中，<strong>两者的区别在于数据在哪里进行转换</strong>。 接下来，我们一起详细地分析一下 ETL 和 ELT各自的优缺点，看看在你们现在的业务中用哪种方式处理数据比较合适。</p>
<h2 id="01-ETL"><a href="#01-ETL" class="headerlink" title="01 ETL"></a><strong>01 ETL</strong></h2><p><strong><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/0ff508bcb0fc59847ca432a23449311a.jpg" alt="img"></strong></p>
<p><strong>ETL - 抽取、转换、加载</strong></p>
<p>从不同的数据源抽取信息，将其转换为根据业务定义的格式，然后将其加载到其他数据库或数据仓库中。另一种 ETL 集成方法是反向 ETL，它将结构化数据从数据仓库中加载到业务数据库中，如我们常用数据仓库加工好的报表，推送到报表系统的数据库中。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/4b2ad6e50c2b1f00b89011ce3b773ec3.jpg" alt="img"></p>
<p><strong>ELT - 抽取、加载、转换</strong></p>
<p>同样的从一个或多个数据源中抽取数据，然后将其加载到目标数据仓库中，此时不需要进行数据格式的转换。在 ELT 过程中，数据的转换发生在目标数据仓库中。ELT 对远程资源的要求较少，只需要它们的原始数据即可。</p>
<h2 id="03-ELT的演变"><a href="#03-ELT的演变" class="headerlink" title="03 ELT的演变"></a><strong>03 ELT的演变</strong></h2><p>ELT 已经存在了一段时间，但 Hadoop 等大数据技术出现后，更加活跃了。像以前转换 PB 级原始数据这样的大型任务无法处理，现在可以被分成小作业，进行处理，然后再加载到目标数据库中。同时，处理能力也提高了，尤其是以私有云集群的方式，把处理、加工数据可以在一个数据仓库中完成了。</p>
<h2 id="04-ELT的工作原理"><a href="#04-ELT的工作原理" class="headerlink" title="04 ELT的工作原理"></a><strong>04 ELT的工作原理</strong></h2><p>与 ETL 不同，ELT是从多个数据源收集信息，将其加载到数据仓库（或者数据湖）中，然后将其转换为可操作的商业智能的过程。</p>
<p><strong>抽取</strong>——在ELT和ETL两种数据管理方法中的原理相似。一般我们会采用增量抽取，对于一些维表数据量比较小的也会采用全量抽取。</p>
<p><strong>加载</strong>——这是 ELT 和 ETL 开始不同的地方了。ELT 不是在抽取大量原始数据的过程中将其转换，而是将所有数据都加在到湖仓中，然后统一进行转换，这样做加快了抽取的效率，但也意味着数据变得有用之前还有很多工作要做。</p>
<p><strong>转换</strong>——数据湖或数据仓库对数据进行规范化，将部分或全部数据保留在湖仓中，并可用于定制报告。存储海量数据的开销更高，但也是为了后续能够更加快速的进行数据挖掘和报表展现，也就是我们常说的用空间换时间。</p>
<h2 id="05-什么时候我们选择ELT"><a href="#05-什么时候我们选择ELT" class="headerlink" title="05 什么时候我们选择ELT"></a><strong>05 什么时候我们选择ELT</strong></h2><p>这取决于公司现有的网络和技术架构、预算以及它已经利用云和大数据技术的程度。如果是有下面三个需求场景时，那么ELT就是正确的选择~</p>
<p><strong>1. 当抽取速度是第一选择时</strong></p>
<p>因为 ELT 不必等待数据在抽取过程中进行转换后再加载，那么抽取过程要快得多。</p>
<p><strong>2. 当需要随时访问原始数据时</strong></p>
<p>有很多场景，我们需要保留所有历史数据，分析师可以根据时间、销售模式、季节性趋势或任何对业务变得重要的新兴指标进行挖掘。由于数据在加载之前未进行转换，因此您可以访问所有原始数据。比如，数据仓库一般都有一个原始数据层，很多数据科学家更喜欢访问原始数据，而业务用户更喜欢使用分析后的应用层或者模型层数据。</p>
<p><strong>3. 当需要随时可扩展数据湖仓时</strong></p>
<p>当您使用 Hadoop 或云数据仓库等数据处理引擎时，ELT 可以利用本机处理能力实现更高的可扩展性。</p>
<h2 id="06-数据湖是不是很好的ELT落脚点"><a href="#06-数据湖是不是很好的ELT落脚点" class="headerlink" title="06 数据湖是不是很好的ELT落脚点"></a><strong>06 数据湖是不是很好的ELT落脚点</strong></h2><p>首先，<strong>我们思考一下数仓为什么会出现？</strong>其实是数据量的飞速增长，以至于当时的数据存储计算引擎，不能很好的满足分析需求；于是数仓概念和经典的理论出现了，很好的解决了当时的问题，用“规范+存储”来解决了当时的问题。</p>
<p>那么现在大数据时代，随着技术的不断发展，很多新技术出现了，大批量的存储和计算不再是那么难了，那么我们放弃数仓那一套是否可行呢？从一哥现在处理的业务看，如果你的业务系统相对较单一，没有几十个业务系统每天往数仓里灌数据，那么数据湖可以满足你的需求，并且对于“数据驱动”更“敏捷”。如果一线的业务系统较复杂，那么现在使用数据湖也会一不小心会变成“<strong>数据沼泽</strong>”。</p>
<p>数据湖治理策略没有明确前，还不要急着就上数据湖，并不是适用于每个公司的业务场景的！</p>
<h2 id="07-结语"><a href="#07-结语" class="headerlink" title="07 结语"></a><strong>07 结语</strong></h2><p>ELT和ETL都有各自的应用场景，可以说现在大数据环境下，很多已经是ELT架构了，<strong>所以这也是我近几年一直不看好很多厂商在推“拖拉拽”的ETL工具或者平台，未来肯定是需要一种通用语言来实现所有的ELT过程</strong>。</p>
<p>同样，<strong>数据湖是趋势，但现在依然不成熟</strong>，不要看网上很多一线大厂的技术文章中提到了很多数据湖的概念和技术应用，但是请结合自己公司的业务场景，暂时先谨慎选择！</p>
]]></content>
      <categories>
        <category>数据</category>
      </categories>
      <tags>
        <tag>数据</tag>
      </tags>
  </entry>
  <entry>
    <title>入库产量逻辑梳理</title>
    <url>/2022/11/20/%E5%85%A5%E5%BA%93%E4%BA%A7%E9%87%8F%E9%80%BB%E8%BE%91%E6%A2%B3%E7%90%86/</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>这个需求实际是为了梳理公司的产量逻辑，目前的产量存在主要以下几个问题：</p>
<ol>
<li>各个部门对产量的定义不一致，导致对产量的叫法不一致，可能会有生产产量、运营产量、绩效产量等等。</li>
<li>2个系统之间的对产量的定义不一致，导致产量的出数不一致，同时也导致了手工表的存在，主要在于第一个是跨月问题，ECP定义的产量是冷硬的结束时间，而ECP往SAP推送的是质检完成的入库时间。所以导致2个数据不一致。就是因为这个数据不一致导致了过去10个月财务按照SAP系统结账，但是按照保管给的手工账进行分析。这是一个非常严重的问题。</li>
<li>SAP与ECP定位模糊，导致产量的数据应该从SAP出还是从ECP出大家都搞不清楚，从而导致BI取数不知道从那个系统取出。</li>
</ol>
<p>因此，在10月份，11月份，分别拉齐了生产、财务管理层梳理产量的定义。<br>会议确定：<br>产量分为入库产量、生产产量、绩效产量3部分，其中入库产量的定义是进入产成品库的数量。由于目前是SAP中管理库存，所以入库产量是从SAP系统中取出，并且入库的产量按照每月的实际入库产量为主，如果发生跨月消耗的话，记录负值在本月，过往月份的产量不动。</p>
<h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><p>在目前的入库产量里区分为酸洗产量和冷硬产量，酸洗的特殊情况不算多，基本就分为正常酸洗和酸洗反洗，而且量非常的少；但是冷硬的情况比较多一些，根据生产过程分为入库、入库冲销、物料转换、重轧、重卷、分卷等多种情况，并各种不同情况可以进行混杂，先入库、再冲销、再入库，继续物料转换，物料转换完成后重卷、分卷。类似这种情况非常多。</p>
<p>那么怎么计算入库产量？<br>刚开始的时候第一个想法就是去ZMM006里取所有的入库的数据，根据物料、卷号、批次号来找出各种情况，比如冲销的、309的、重卷的、多次重卷或重轧的。而且针对重卷这种多种情况还和杨总设计了一种算法逻辑，就是根据父卷去找子卷，一直找到最后一个子卷，然后一级级的往上减，这样的话就能实现在每个月里的产量都是一致的。<br>这个逻辑出来了，但是通过和保管数据核对，发现ZMM006报表里面本身的计算逻辑就有纰漏，本身就没有包含所有的逻辑，所以我们从ZMM006里取到的值根本不对，源数据就不对了，所以再做多少加工都白搭。</p>
<p>ZMM006不行，只能从底表查，底表的话基于物料的移动就是MSEG，因为MB51的查询底表就是MSEG，MSEG里有移动类型、批次、物料、工厂、库存地，所以我们就可以依据这个表查询出基于101收货，261投料、309物料转换、102冲销的移动类型。并且针对261、102的计算为负值。这样的好处是：首先我们查询的是产成品库</p>
<ol>
<li>正常的生产：就是只有一个101，产成品入库</li>
<li>重卷、改轧的生产：首先101入库，然后261领料，这样就会有2条，然后产出的产品又会新增一条101入库。以此类推。</li>
<li>正常生产后冲销的：101入口后直接一个102冲销，这样合计下来就是正确的入库量。</li>
<li>309转换的，直接新增一条309转换的量。<br>因为MSEG只有物料、批次和移动类型，所以计算入库产量的时候异常的简单，只需要根据过账日期明确出不同的移动类型，然后加减就能得到每个卷的真实入库产量。</li>
</ol>
<h2 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h2><p>接到需求后，尤其是之前实施都没有思考的需求，千万不要思维定势，而是要抓住问题的根本，这样的才能少走弯路，起码在ZMM006上至少浪费了4天的时间。</p>
]]></content>
      <categories>
        <category>业务学习</category>
      </categories>
      <tags>
        <tag>业务学习</tag>
      </tags>
  </entry>
  <entry>
    <title>如何搭建一套完整的数据指标体系概述</title>
    <url>/2022/07/08/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%80%E5%A5%97%E5%AE%8C%E6%95%B4%E7%9A%84%E6%95%B0%E6%8D%AE%E6%8C%87%E6%A0%87%E4%BD%93%E7%B3%BB%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<p>所谓的数据指标就是对所观察事物的一种量化统计。大到企业的收入利润，小到每个一线销售人员每天的客户拜访量、成单量等。</p>
<p>而体系，就是用一套逻辑把-大堆东西连接起来。比如，人的生命体系包括大脑、心脏、血液、各种器官等等，每一个组成部分都在这个体系中有自己独特的功能，都是这个体系不可或缺的一部分。</p>
<p><strong>而企业的指标体系，就是能够将大到企业的总收入、利润，小到每个销售员的成交量等单个指标用</strong><br><strong>一套逻辑连接起来(见下图)。</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-1d9967d4d14ab29a65774c9f86e9f99b_720w.jpg" alt="img"></p>
<p>在这套逻辑里，你能从局部看到整体，能从整体划分到局部。<br>例如你头疼(整体)， 医生能够按照人的生命体系一-检查, 直到发现你上呼吸道不正常，发生了感染(局部) ;也能从你手扎破了(局部) ，如果不及时处理伤口，可能由于感染丢失了性命(整体)。<br>企业也一样,通过企业的指标体系,也能看到企业利润没有达成，是哪个部门(个人)出现了问题，也可从一个销售员的业绩推断出公司的整体情况。</p>
<p><strong>由此可以看出，指标体系最重要的是”指标”和“逻辑”。</strong></p>
<hr>
<h2 id="解决问题：指标体系到底如何搭建？"><a href="#解决问题：指标体系到底如何搭建？" class="headerlink" title="解决问题：指标体系到底如何搭建？"></a><strong>解决问题：指标体系到底如何搭建？</strong></h2><p>那么，如果我们想要搭建一完整指标体系,就得有一大堆衡量企业健康状况的指标，还得有一整套逻辑将企业的各个指标有机连接起来。</p>
<p>“指标”和“逻辑”虽然是指标体系的两个组成部分,但是构造”指标”和“逻辑”的过程却是同一个过程，那就是“自上而下，从大到小”，层层拆解，步步细分(业绩目标的设定过程可能相反)。</p>
<p><strong>1、首先，每个企业都有自己每年的整体目标，这个目标-般是营收、利润、或销量。</strong><br>这个大指标的问题在于，它无法把责任落在某-个具体的人或部门(CEO不算， 因为整个指标体系就是为了他达成大指标使用的管理工具，他又不能一个人把公司所有活干了)，所以就需要把这个大指标进行拆解，直到拆解到责任可以落实到每一个部门(个人)头上。</p>
<p><strong>2、其次，就是如何拆解企业目标，这一步至关重要。一般来说， 指标体系是按照本企业的业务流程进行拆解。</strong><br>那什么是业务流程呢?它指的就是你要将从消费者(或者客户)那里收到钱所经历的所有的步骤进行拆解(也有人说按照消费者消费路径来拆解的,个人认为主要是业务流程，因为一般公司的部门是按照业务流程设置的)。</p>
<p>例如一家汽车制造公司,要想从客户手里收到购车款，大体来说需要经历造车一-&gt;营销一-&gt; 物<br>流一一&gt;销售的环节。那如何将企业一年的收入在这些环节进行分解，这时可以就需要“将业务流<br>程抽象为数学公式”，因为指标本质上还是数据，所以指标的拆解当然离不开数学。<br>以上汽车销售的业务流程用数学公式表达出来如下:<br>汽车的销售收入&#x3D;Max{出厂车辆数，营销产生的销售线索数X销镌转化率x门店数量} X单车利润</p>
<p>因此，要达成营业利润那么子指标就是销售车辆数，而销售车辆数的子指标就是出厂车辆数、销售线索数、销售转化率。<br>这是大指标的一级拆解，一级拆解，一 般建议子指标可以找到一 一个具体负责的部门。因为说一千道一万，企业是由各部门门组成的，不论是传统企业是互联网公司，当然集团除外，我们这里主要说的是某一板块业务。</p>
<p>这样拆解的好处就是，虽然这个部门无法完全控制整个公司大指标，但是总可以控制部门的子指标。</p>
<p>例如，营销部可能无法对整个公司的销售收入负责，毕竟如果你车造的很烂，或者销售人员不努力，即使我把产品吹天，消费者实际到店一试驾，还是不会买不是吗。但是，有多少人看广告,有多人看了广告愿意试驾(销售线索)你总不能甩锅吧。</p>
<p><strong>3、就是将每个业务流程的目标再次在本流程的子流程层面进行二_级拆解 (见下图)。</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-4b127ae5ce8465d94c26f2ca2347ad43_720w.jpg" alt="img"></p>
<p>例如，营销部负责销售线索数，但是你可能在很多媒介上做广告,例如电视、门户网站、移动端APP等等，那么每一个媒介上有多少销售线索数，你总得有一个统计指标吧，或者每一个媒介都有一个具体的人员在负责，那么将“销售线索数”这个子指标再细分，就是“XX媒介产生的销售线索数”。</p>
<p>这样，我们就可以看出这个媒介在整年的表现，如果责任到人的话，可以直接去看负责这个媒介投放的人员的业绩表现，进而通过这个子指标看其对整个营业收入(公司大指标)的影响。</p>
<p>其实这方面没有很好的方法，网上很多人都在鼓吹”OSM模型” ，O就是Objective, S是Strategy, M是Measurement,其实它更多指的是一个概念框架， 而且是高度抽象、大道至简的那种，而在真实的应用上能够参考的意义是有限的(就像SWOT分析一样)。</p>
<p>因此，最好的方法，就是你对这个业务流程相当了解，这也是现实中为什么HR部门门]无法设置好的指标体系了，因为他们对业务流程的了解一般少之又少。所以，指标的拆解(指标体系的搭建)，其实是非常内行的一件事情。</p>
<p><strong>4、是将一些职能部门的指标以及业务部门的保障性指标加入进去。</strong></p>
<p>如果按照上述方法拆解KPI,那么基本上只有销售部、营销部、生产部等主要业务部门]的指标，但是问题是整个公司的运行不是只有业务部门，还有很多职能部门，这些职能部]的工作也很重要，因为他们是保障整个公司的健康运行，也就是以上业务部[ ]的指标能够达成的基础环境(参见波特价值链)。</p>
<p>举个例子，如果财务部门不好好工作，导致出现-个财务漏洞，那整个公司好几年的营收估计都搭进去了，又何谈一年的目标实现呢?</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-77018d8dc36a8e6a39769e8a8d88b178_720w.jpg" alt="img"></p>
<h4 id="那职能部门的指标如何拆解呢？"><a href="#那职能部门的指标如何拆解呢？" class="headerlink" title="那职能部门的指标如何拆解呢？"></a><strong>那职能部门的指标如何拆解呢？</strong></h4><p>首先，你必须得了解它们的主要工作内容、工作目标、工作流程。例如财务部门，主要指标可能是财务报告的及时性和准确性，以及预算管理的好与坏，这些都是可以量化的。</p>
<p>还有数据分析部门可能主要是一个支撑部门， 那目标就是、及时准确地支撑业务部门数据需求、报表开发、给管理层的深度分析报告等，这些服务可以由各业务部门来打分，这样你就可以设置数据分析部门的指标诸如“数据提供满意度”、“数据分析报告满意度” 等。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-430f3c891aba195a2ed05bc595d76b18_720w.jpg" alt="img"></p>
<p>此外，业务部门]也有保障性指标。例如生产部的指标肯定不光是生产合格的产品数量，你还得在一定时间、按照一定成本、按照一定良品率把合格的产品生产出来，那这个部门(业务)的指标就不光是生产合格的产品数量，还有以上提到的保障性指标。通过之前搭建的业务指标体系(总指标–&gt; 细分一&gt;细分….)加上诸如风险管理、财务、人事等职能(支撑)部门的保障性指标以及业务部门门的业务保障性指标，覆盖整个公司的指标体系就搭建起来了。</p>
<p>这个体系整体像一颗巨大的树，但是在内在结构_上又是枝与枝相关联，例如各部]的预算控制好了，整个财务的预算才能控制好;或者说数据部门门要提供好用的报表，也得开发部门]开发出好用的报表套件才行。毕竟，各部门相互连接，整个公司才是一个”有机的”整体(下图)。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-34c4801c1c494014b0eebc756786024a_720w.jpg" alt="img"></p>
]]></content>
      <categories>
        <category>数据</category>
      </categories>
      <tags>
        <tag>数据</tag>
      </tags>
  </entry>
  <entry>
    <title>如何定义需求的优先级</title>
    <url>/2022/07/08/%E5%A6%82%E4%BD%95%E5%AE%9A%E4%B9%89%E9%9C%80%E6%B1%82%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7/</url>
    <content><![CDATA[<p>如何定义需求的优先级&#x3D;考验你决策取舍的能力</p>
<p>楼里有些回答写的过于花哨了，看完似乎懂了很多，但其实参考性太差，可行性不高</p>
<p>最后还是开会时候拍脑袋定优先级</p>
<p>我总结了一些朴素但实用的需求优先级排序思路：</p>
<p><strong>遇到多个需求时，先认真问自己三个问题</strong></p>
<ul>
<li><strong>1、这个需求紧不紧急？</strong></li>
</ul>
<p>牢记！造成严重的流程卡点的需求最紧急，如果无法确定是否严重，可以根据卡点辐射的用户量去佐证到底紧不紧急。</p>
<ul>
<li><strong>2、这个需求对你核心指标的贡献程度如何？</strong></li>
</ul>
<p>这个其实考验到你拆分、估算的能力。比如我们近期的<a href="https://www.zhihu.com/search?q=%E5%8C%97%E6%9E%81%E6%98%9F&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2521571347%7D">北极星</a>指标是提升从A环节→B环节的转化率，那么在其它投入都近乎相等的情况下，需求1预计能提升5%，而需求2预计能提升7%，结果当然不言而喻。</p>
<ul>
<li><strong>3、这个需求涉及的工作量大不大？</strong></li>
</ul>
<p>还是上面那个例子，如果需求1预计能提升5%，需求2预计能提升7%，但需求2的工作量是需求1的3-4倍，并且需要投入双倍的人力，导致本期其它的需求也会被需求2的影响，面临资源不足的情况，那么这种情况下，考虑到ROI必然是先做需求1。</p>
<p>如果你的需求是有调研问卷数据支撑的话，还可以引入一个产品需求分析的经典模型<strong>「KANO分析模型」</strong>，进行系统的需求梳理，对需求进行分析和提炼，分为<a href="https://www.zhihu.com/search?q=%E5%85%B4%E5%A5%8B%E6%80%A7&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2521571347%7D">兴奋性</a>、期望型、无差异、必备型。不展开说了，可以看看我之前的文章，写的很详细了。</p>
<p><img src="https://pic2.zhimg.com/v2-cdc39aa326057d2f4cad31769b720ea1_720w.jpg?source=3af55fa1" alt="img"></p>
<p>KANO 模型是东京理工大学教授狩野纪昭发明的对用户需求分类和优先排序的有用工具，以分析用户需求对用户满意的影响为基础，体现了产品性能和用户满意之间的非线性关系。</p>
<h3 id="1、了解需求属性分类"><a href="#1、了解需求属性分类" class="headerlink" title="1、了解需求属性分类"></a>1、了解需求属性分类</h3><p>通过对需求的满意度、具备度二维分析，KANO将需求划分为必备型、期望型、魅力型、无差异型、反向型五类，分别以英文字母M、O、A、I、R表示。</p>
<ul>
<li>必备型需求(M)：需求满足时，用户不会感到满意。需求不满足时，用户会很不满意。</li>
<li>期望型需求(O)：需求满足时，用户会感到很满意。需求不满足时，用户会很不满意。</li>
<li>魅力型需求(A)：该需求超过用户对产品本来的期望，使得用户的满意度急剧上升。即使表现得不完善，用户的满意度也不受影响。</li>
<li>无差异型需求(I)：需求被满足或未被满足，都不会对用户的满意度造成影响。</li>
<li>反向型需求(R)：该需求与用户的满意度呈反向相关，满足该要求，反而会使用户的满意度下降。</li>
</ul>
<h3 id="2、better-worse系数"><a href="#2、better-worse系数" class="headerlink" title="2、better-worse系数"></a>2、better-worse系数</h3><p>Better系数&#x3D;（期望数+魅力数）&#x2F;（期望数+魅力数+必备数+无差异数）</p>
<p>Worse系数&#x3D; -1*（期望数+必备数）&#x2F;（期望数+魅力数+必备数+无差异数）</p>
<p>Better系数越接近1，表示该具备度越高该需求对用户满意度提升的影响效果越大。Worse系数越接近-1，表示具备度越低该需求对用户满意度造成的负面影响越大。</p>
]]></content>
      <categories>
        <category>数据</category>
      </categories>
      <tags>
        <tag>数据</tag>
      </tags>
  </entry>
  <entry>
    <title>怎么才有数据分析思路</title>
    <url>/2022/07/08/%E6%80%8E%E4%B9%88%E6%89%8D%E6%9C%89%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%80%9D%E8%B7%AF/</url>
    <content><![CDATA[<p>直接拿例子来说，大家去餐厅吃饭时，如果你仔细观察的话，餐厅大致可以分为以下两类付费模式：<br>1）使用大众点评优惠吸引用户结账<br>2）直接使用微信或支付宝结账</p>
<p>这两类结账方式，表面看是商家的促销行为不同。但是，从长远来看，第一类餐厅更容易胜出。</p>
<p>这是为什么呢？</p>
<p>因为第一类餐厅的结账模式是建立在互联网产品基础设施（大众点评或者百度糯米）之上，通过与互联网产品结合，可以积累用户的消费信息，例如消费评论。这就好比线下商店老板比不过淘宝卖家一样，因为淘宝卖家有自己客户的详细购物信息，更了解自己的客户。</p>
<p>更有远见的餐厅老板，会雇佣聪明的数据分析师，来整合挖掘餐厅线下软件（订餐管理软件）和 线上用户信息（如大众点评的评论），从而<strong>为制定餐厅未来的运营决策提供依据。</strong><br>然而，很多传统的公司并没有意识去积累用户的消费数据，更别说对数据进行分析来指导公司运营了。说到底，其根本原因是公司的负责人没有数据分析思维。</p>
<p><strong>那么，什么是数据分析思维呢？</strong><br>数据分析思维是通过各种方法收集用户的数据，了解用户需求，然后改进你的个人决策，不断迭代。</p>
<p><strong>如何建立数据分析思维呢？</strong><br>对于数据分析师来说，刚开始肯定是能做一些有趣的分析，但是长期做数据分析工作，想法总会枯竭，寻找分析思路就变得异常痛苦。可以这么说，<strong>分析思路直接奠定了数据分析结论的准确性和实用性。</strong>因此，懂得如何寻找数据分析思路是每个数据分析师必须具备的能力。</p>
<p>面对一个业务场景，我们如何能够寻找到正确的数据分析思路呢？在我看来，所谓正确的分析思路，本质上就是站在一定高度的业务思维逻辑，因此数据分析思路更多考量的还是一名数据分析师对业务的理解和眼界。今天给大家分享一些可以提升自己分析思路的5个方法，希望能给你们带来帮助。</p>
<p>由浅至深分成4项：<strong>角色扮演、业务指标、现成模型、维度分析</strong><br>**<br>01 角色扮演**</p>
<p>这个方法就是尝试把自己“扮演”成公司不同的角色，站在他人的视角上来寻找有哪些需要进行数据分析的点。用这种方式能够找到的数据分析思路往往是对方最需要的，自然也就具有更高的价值。</p>
<p>比如，你可以把自己扮演成公司的销售、投资人、运营、财务、客户、供应商等，站在这些视角寻找有哪些有帮助的分析思路。<br>之前在一家公司，把自己放在销售的角色上，发现公司对于潜在客户的收集和分析非常缺失，这样就影响了整个公司的销售效果。于是从这个角度出发，专门去相关网站爬取数据，通过地域、规模、员工人数等方面去分析，找出最有可能购买我们服务的潜在客户。最后这个分析结果得到销售团队的极度认可，提升了公司销售业绩。<br>用这种方法做角色扮演的时候大家<strong>一定要尽量贴近角色的日常生活，只有这样才能发现最有价值的分析思路。</strong></p>
<p><strong>02 业务指标</strong></p>
<p>这个是非常常见的分析方法。比如公司这个月的销售指标下降了，那么你就着手去分析指标下降的原因；同样，如果指标上升了，也去分析原因。一个公司的指标往往比较标准，比如利润率，销售额，客户增长等等。所以这样的方法比较通用，也比较简单。<br>在分析指标时有一点一定要注意，<strong>就是除了分析出原因外，还有就是要给出解决方案。</strong>比如分析发现客户数近期有下降，那么除了给出原因外，还要给出增加客户数的方法以及这些方法背后的数据模型推理，形成一个完整的故事。</p>
<p><strong>03 运用一些现成的模型</strong></p>
<p>大家想好方向之后会遇到一个问题，那就是到底应该从几个维度用什么样子的模型来做分析呢？这个时候就体现一名数据分析师的基本功了。其实数据模型中包含了很多对于基础数据分析的思路，这些思路虽然比较单一，但哪个出彩的思路不是由单一的组合而成呢？<br>除了熟悉模型外，熟练的掌握数据分析的工具也能很大的帮助数据分析的验证。数据分析思路是需要打磨的，特别是刚刚产出的分析思路更<strong>需要通过数据去验证和调整。</strong>这个时候一个方便快速的数据分析工具会起到很重要的作用。下面就给大家分享一个具体的数据分析思维方法。</p>
<p><strong>04 维度分析法</strong></p>
<p>我们先了解一下维度分析法：维度是描述对象的参数，在具体分析中，我们可以把它认为是分析事物的角度。销量是一种角度、活跃率是一种角度，时间也是一种角度，所以它们都能算维度。<br>当我们有了维度后，就能够通过不同的维度组合，形成数据模型。数据模型不是一个高深的概念，它就是一个数据立方体。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/192214bhxvtxvg8vbheuxq.png" alt="img"></p>
<p>上图就是三个维度组成的数据模型／数据立方体。分别是产品类型、时间、地区。我们既能获得电子产品在上海地区的2010二季度的销量，也能知道书籍在江苏地区的2010一季度销量。<br>数据模型将复杂的数据以结构化的形式有序的组织起来。我们之前谈到的指标，都可以作为维度使用。下面是范例：<br>将用户类型、活跃度、时间三个维度组合，观察不同用户群体在产品上的使用情况，是否A群体使用的时长更明显？<br>将商品类型、订单金额、地区三个维度组合，观察不同地区的不同商品是否存在销量差异？<br>数据模型可以从不同的角度和层面来观察数据，这样提高了分析的灵活性，满足不同的分析需求、这个过程叫做OLAP（联机分析处理）。当然它涉及到更复杂的数据建模和数据仓库等，我们不用详细知道。‍</p>
<p>数据模型还有几种常见的技巧、叫做钻取、上卷、切片。</p>
<ul>
<li>选取就是将维度继续细分。比如浙江省细分成杭州市、温州市、宁波市等，2010年一季度变成1月、2月、3月。</li>
<li>上卷则是钻取的相反概念，将维度聚合，比如浙江、上海、江苏聚合成浙江沪维度。</li>
<li>切片是选中特定的维度，比如只选上海维度、或者只选2010年一季度维度。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/192228s6r6dirxwswqox6b.png" alt="img"></p>
<p>上图的树状结构代表钻取（source和time的细分），然后通过对Route的air切片获得具体数据。<br>聪明的你可能已经想到，我们常用的数据透视表就是一种维度分析，将需要分析的维度放到行列组合进行求和、计数、平均值等计算。放一张曾经用到的案例图片：用城市维度和工作年限维度，计算平均工资。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/192246a44289c49c85xu9v.png" alt="img"></p>
<p>除了Excel、BI、R、Python都能用维度分析法。BI是相对最简便的。谈到维度法，想要强调的是分析的核心思维之一：对比，不同维度的对比，这大概是对新人快速提高的最佳捷径之一。<br>总结一下：<strong>我们通过业务建立和筛选出指标，将指标作为维度，利用维度进行分析。</strong><br>这里我想强调，数据分析并不是一个结果，只是过程。还记得“如果你不能衡量它，那么你就不能有效增长它”这句话吗？<strong>数据分析的最终目的就是增长业务。</strong>如果数据分析需要绩效指标，一定不会是分析的对错，而是最终数据提升的结果。<br>数据分析是需要反馈的，当我分析出某项要素左右业务结果，那么就去验证它。告诉运营和产品人员，看看改进后的数据怎么样，一切以结果为准。如果结果并没有改善，那么就应该反思分析过程了。</p>
<p>作者：miao君<br>链接：<a href="https://www.zhihu.com/question/284174976/answer/835282007">https://www.zhihu.com/question/284174976/answer/835282007</a><br>来源：知乎</p>
]]></content>
      <categories>
        <category>数据</category>
      </categories>
      <tags>
        <tag>数据</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建指标体系</title>
    <url>/2022/07/08/%E6%90%AD%E5%BB%BA%E6%8C%87%E6%A0%87%E4%BD%93%E7%B3%BB/</url>
    <content><![CDATA[<h2 id="1-背景"><a href="#1-背景" class="headerlink" title="1. 背景"></a>1. 背景</h2><p>问题：是否存在某个单一财务指标可以全面地衡量公司的盈利状况？</p>
<p>答案：不存在单一的指标可以全面的衡量公司的盈利状况，企业的经营管理是复杂的，需要使用多维度的财务指标，这样才能对复杂的经营状况做出判断。</p>
<ul>
<li>在帆软市场，有两家超市，A 超市和 B 超市，我们该如何衡量这两家超市的经营状况与盈利能力呢</li>
<li>小张说：第一个涌入脑海的指标大概就是「收入」吧，我们先看看哪家超市「收入」多</li>
<li>小王说：不对不对，应该看「利润」，哪家利润多，哪家的盈利能力才强</li>
<li>小蔡说：我们要看利润占收入的比例，也就是「利润率」</li>
<li>小李说：我们可以看看两家超市的「投资回报率」，也就是每投入100元，每家超市可以赚多少钱</li>
</ul>
<p>其实每个人的单一指标，都无法全面的衡量超市的经营状况与盈利能力，我们需要在这一系列指标中找到线索来进行综合判断。</p>
<table>
<thead>
<tr>
<th align="left">项目</th>
<th align="center">A 超市</th>
<th align="center">B 超市</th>
</tr>
</thead>
<tbody><tr>
<td align="left">收入</td>
<td align="center">1000万元</td>
<td align="center">10000万元</td>
</tr>
<tr>
<td align="left">成本</td>
<td align="center">800万元</td>
<td align="center">7000万元</td>
</tr>
<tr>
<td align="left">利润</td>
<td align="center">200万元</td>
<td align="center">3000万元</td>
</tr>
<tr>
<td align="left">利润率</td>
<td align="center">20%</td>
<td align="center">30%</td>
</tr>
<tr>
<td align="left">总投资额</td>
<td align="center">1000万元</td>
<td align="center">20000万元</td>
</tr>
<tr>
<td align="left">投资回报率</td>
<td align="center">20%</td>
<td align="center">15%</td>
</tr>
</tbody></table>
<h4 id="指标体系不完整"><a href="#指标体系不完整" class="headerlink" title="指标体系不完整"></a>指标体系不完整</h4><ul>
<li>各部门根据自身业务需求，都有一部分的量化指标，但是不够全面，也缺乏方法论指导，对与企业整体数据分析应用能力提升的指导作用有限</li>
<li>缺乏整体考量而设置的指标体系，以及错误的指标分析方法，会产生错误的分析结果，进而影响运营层面、产品改进方面的决策</li>
</ul>
<h2 id="2-指标体系化"><a href="#2-指标体系化" class="headerlink" title="2. 指标体系化"></a>2. 指标体系化</h2><h3 id="2-1-单一指标-VS-指标体系化"><a href="#2-1-单一指标-VS-指标体系化" class="headerlink" title="2.1 单一指标 VS 指标体系化"></a>2.1 单一指标 VS 指标体系化</h3><ul>
<li>非体系化的指标通常是单点分析，出现什么问题，分析什么，然后改进，如果改进了仍然有问题，那就再接着换一个点分析</li>
<li>而体系化的指标通常能够结合问题所在的背景、串联各个指标、通过各种维度进行分析，从而使优化方案更加有针对性</li>
</ul>
<h3 id="2-2-指标字典和指标体系的区别"><a href="#2-2-指标字典和指标体系的区别" class="headerlink" title="2.2 指标字典和指标体系的区别"></a>2.2 指标字典和指标体系的区别</h3><ul>
<li><a href="https://help.fanruan.com/dvg/doc-view-60.html">指标字典</a>，其实纯粹是指标和维度的集合，指标与指标之间是没有太多逻辑关系的，最多只是将不同业务模块的指标集中在一起。</li>
<li>但指标体系，指标之间是有逻辑关系的，是有机的整体。</li>
</ul>
<h3 id="2-3-一个好的指标体系"><a href="#2-3-一个好的指标体系" class="headerlink" title="2.3 一个好的指标体系"></a>2.3 一个好的指标体系</h3><ul>
<li>能准确快速的下结论，能定义业务运作好坏的结论；</li>
<li>能满足多数场景的归因，即使出现异动，也能快速定位原因</li>
</ul>
<p>在数据分析中，一个好的指标体系可以帮助你更快、更精准地找到答案。</p>
<h2 id="3-指标体系建设通用方法"><a href="#3-指标体系建设通用方法" class="headerlink" title="3. 指标体系建设通用方法"></a>3. 指标体系建设通用方法</h2><h3 id="3-1-指标体系建设的通用原则"><a href="#3-1-指标体系建设的通用原则" class="headerlink" title="3.1 指标体系建设的通用原则"></a>3.1 指标体系建设的通用原则</h3><ul>
<li>用户第一：从用户中来到用户中去，指标体系核心是围绕能够反映实际业务情况的目的去的，因此，指标不是越多越好，也不需要「虚荣指标」，「虚荣指标」是需要在建设过程中注意避免的</li>
<li>典型性原则：尽量选择比较典型、比较具备代表性的指标，这些指标能够反映业务的真实情况，其中最重要的指标叫做「北极星指标」</li>
<li>系统性原则：指标体系是需要强调系统性的，需要做一个有机的系统整体，常见的就是找到核心的原子指标，然后延伸，最终形成类似二叉树一样的树状结构指标体系，做到每个指标有根可循</li>
<li>动态性原则：数据指标体系是随着业务发展变化、随着数据分析需求变化的，因此需要不断的去做指标体系的维护与迭代更新</li>
</ul>
<h3 id="3-2-指标体系建立的通用方法"><a href="#3-2-指标体系建立的通用方法" class="headerlink" title="3.2 指标体系建立的通用方法"></a>3.2 指标体系建立的通用方法</h3><h4 id="3-2-1-定义北极星指标的6个标准"><a href="#3-2-1-定义北极星指标的6个标准" class="headerlink" title="3.2.1 定义北极星指标的6个标准"></a>3.2.1 定义北极星指标的6个标准</h4><p><strong>北极星指标就像北极星一样，高高闪耀在空中，指引着全公司所有人员向着同一个方向迈进</strong></p>
<ul>
<li>标准1：你的产品的核心价值是什么？这个指标可以让你知道你的用户体验到了这种价值吗？</li>
<li>标准2：北极星指标要具备典型性，能够看出长期一段时间的变化情况与表现情况的好坏</li>
<li>标准3：如果这个指标变好了，是不是能说明整个公司是在向好的方向发展？</li>
<li>标准4：这个指标是不是很容易被整个团队理解和交流呢？</li>
<li>标准5：这个指标是一个先导指标，还是一个滞后指标？</li>
<li>标准6：这个指标是不是一个可操作的指标？</li>
</ul>
<h4 id="3-2-2-贯穿业务全流程"><a href="#3-2-2-贯穿业务全流程" class="headerlink" title="3.2.2 贯穿业务全流程"></a>3.2.2 贯穿业务全流程</h4><p>电商行业常见的 AARRR 模型包含获取、激活、留存、变现、扩散五个步骤，也是电商行业产品和商业模式的业务全流程，作为一个很好理解的案例来阐述，任何一个企业的指标体系都是需要能够对企业内部的业务做一个闭环串联的理念，否则指标体系很难做成为一个体系，也是业务域或者数据域的一种划分方法。</p>
<h4 id="3-2-3-贯穿分析全流程"><a href="#3-2-3-贯穿分析全流程" class="headerlink" title="3.2.3 贯穿分析全流程"></a>3.2.3 贯穿分析全流程</h4><p>作分析的过程往往有三步：问题背景是什么、要分析什么才能解决这个问题、怎么分析</p>
<ol>
<li>映射到数据指标体系中则上升为要考虑指标体系的目标是什么、指标体系的用户的业务目标是什么</li>
<li>再考虑要实现这些目标会有哪些表现、哪些信号能够支撑他们的目标关注</li>
<li>最后再找出相关的指标来支撑数据指标体系的构建</li>
</ol>
<h3 id="3-3-指标体系建立的通用步骤"><a href="#3-3-指标体系建立的通用步骤" class="headerlink" title="3.3 指标体系建立的通用步骤"></a>3.3 指标体系建立的通用步骤</h3><ol>
<li><p>确立公司业务的核心指标：</p>
</li>
<li><ol>
<li>找到能够去体现公司业务完成情况、进展情况的指标，也就是常说的北极星指标</li>
</ol>
</li>
<li><p>确立用户行为的关键指标：</p>
</li>
<li><ol>
<li>常说的过程性关键指标</li>
</ol>
</li>
<li><p>进行业务需求的多维拆解：</p>
</li>
<li><ol>
<li>将指标按照业务域、数据域进行拆分或者延伸</li>
</ol>
</li>
<li><p>按照优先级进行系统性整合与建设：</p>
</li>
<li><ol>
<li>经过前面三步的分，在最后需要进行整合，将指标系统性的整合与构建，去除重复指标、虚荣指标、无意义指标。当指标数量过多时可以按照优先级分类，先做一部分再做一部分，不断迭代完善</li>
</ol>
</li>
</ol>
<h2 id="4-如何拆解数据指标"><a href="#4-如何拆解数据指标" class="headerlink" title="4. 如何拆解数据指标"></a>4. 如何拆解数据指标</h2><p>数据指标拆解方法</p>
<h2 id="5-案例"><a href="#5-案例" class="headerlink" title="5. 案例"></a>5. 案例</h2><p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/1625552578pqw3.png" alt="img"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/1625552608L6MN.png" alt="img"></p>
]]></content>
      <categories>
        <category>数据指标</category>
      </categories>
      <tags>
        <tag>数据指标</tag>
      </tags>
  </entry>
  <entry>
    <title>数据仓库命名规范</title>
    <url>/2022/07/29/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<h3 id="一、数仓分层规范"><a href="#一、数仓分层规范" class="headerlink" title="一、数仓分层规范"></a>一、数仓分层规范</h3><p>数据仓库整体公分三层，分别为ODS、DWD、DWS。</p>
<p>另外增加 维度层DIM，填报层 IN。</p>
<h3 id="二、表命名规范"><a href="#二、表命名规范" class="headerlink" title="二、表命名规范"></a>二、表命名规范</h3><p>按照数据分层进行表命名规则制定。创建表时，需要给表增加中文注释。各层表名定义规则如下：</p>
<p>1、ODS层：ods_公司系统_模块_业务含义，</p>
<p>例：ods_xxxsap_sd_saleorder；</p>
<p>2、DWD层：dwd_业务域_业务含义，</p>
<p>例：dwd_wms_outboundstatistics；</p>
<p>3、DWS层：dws_业务域_汇总维度_业务含义，</p>
<p>例：dws_sale_cust_ordersum；</p>
<p>4、DIM层：dim_公司系统_业务含义，</p>
<p>例：dim_xxxsap_customer；</p>
<p>5、IN层：in_公司_业务含义，</p>
<p>例：in_xxx_futures 。</p>
<h3 id="三、字段命名规范"><a href="#三、字段命名规范" class="headerlink" title="三、字段命名规范"></a>三、字段命名规范</h3><p>根据收集到的业务部门词根说明、NC命名规则（顾问提供），进行表字段的命名，在建表时，需要给字段增加中文注释。为方便后期维护，在开发过程中，逐渐完善 英文和中文的对应关系、简写和全拼的对应关系。</p>
<h3 id="四、调度规则"><a href="#四、调度规则" class="headerlink" title="四、调度规则"></a>四、调度规则</h3><p>1、调度周期：任务调度根据具体业务需求确定，分为按天调度，分钟级调度；</p>
<p>2、调度顺序：调度顺序在kettle的作业中进行配置。</p>
<h3 id="五、ETL目录分层规则"><a href="#五、ETL目录分层规则" class="headerlink" title="五、ETL目录分层规则"></a>五、ETL目录分层规则</h3><p>ETL转换文件存储分4层放置，具体为：数仓层、公司系统层、模块、转换文件（文件名同表名）。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220729171252.png" alt="20220729171252"></p>
<h3 id="六、数据抽取规则"><a href="#六、数据抽取规则" class="headerlink" title="六、数据抽取规则"></a>六、数据抽取规则</h3><p>根据实际业务需求，确定每个业务的抽取规则，包括全量抽取、增量抽取等，并根据实际开发配置形成ETL说明书文档。</p>
<h3 id="七、共有字段说明"><a href="#七、共有字段说明" class="headerlink" title="七、共有字段说明"></a>七、共有字段说明</h3><p>数据表在创建时默认带入相关基础字段，保证数据唯一性、可追溯性，例如：</p>
<p>1、唯一标识ID：默认使用UUID （填报表必带）；</p>
<p>2、公司代码：使用SAP中公司代码；</p>
<p>3、删除标识：标识逻辑删除 （填报表必带）；</p>
<p>4、更新人；</p>
<p>5、更新日期：yyyy-mm-dd；</p>
<p>6、更新时间：hh-mm-ss。</p>
]]></content>
      <categories>
        <category>数据</category>
      </categories>
      <tags>
        <tag>数据</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析思维9段线</title>
    <url>/2022/12/29/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%80%9D%E7%BB%B49%E6%AE%B5%E7%BA%BF/</url>
    <content><![CDATA[<p>正文开始11<br>我做了 10 多年的数据分析，期间有很多同学问我，数据分析主要有哪些思维？学习的路线是怎么样的？<br>为了提供一个简单的方向指引，让数据分析思维的学习过程更加有趣，我做了一幅数据分析思维九段路线图，你可以把学习的过程当作一种游戏，享受段位升级的乐趣。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221229211251.png" alt="20221229211251"><br>在段位升级的过程中，如果你理解起来感觉比较吃力，那么应该沉下心来，认真地先把基础打好，积累更多的数据分析经验。</p>
<ol>
<li>初段：目标思维<br>做数据分析，首先要一定明确目标，以终为始。<br>只有明确目标，才不会迷失方向，就像导航软件，如果没有设置目的地，那么它是没法告诉你路线图的。<br>目标思维主要体现在以下 3 个方面：<br>（1）正确地定义问题<br>比如说，小明听了煎饼大妈月入 3 万的故事，心里就想：为什么煎饼大妈月入 3 万？<br>这个问题的定义，应该是关注「月入 3 万」，而不是「煎饼大妈」。<br>也就是说，小明想的应该是「如何实现月入 3 万」，而不是「如何变成煎饼大妈」。<br>（2）合理地分解问题<br>比如说，煎饼大妈如何实现月收入 3 万？<br>这是一个比较大的问题，可以进行细分，因为收入等于订单数乘以客单价，所以把这个问题细分为两个小问题：<br>a. 如何实现一个月卖 5000 个煎饼？<br>b. 如何实现平均每个煎饼卖 6 块钱？<br>（3）抓住关键的问题<br>在不同的发展阶段，关键问题是不一样的。<br>比如说，对煎饼大妈来讲，刚开始做的时候，关键问题是：如何选择人流量大的好地段？<br>当选好地段之后，关键问题就变成：如何提高路人来购买的概率？如何提高客单价？如何提高重复购买率？<br>总之，数据分析的目标，就好比枪上的瞄准器，如果没有瞄准器，枪照样可以打，但是有了瞄准器，枪才可以打的更准。</li>
<li>二段：对比思维<br>有人说：<br>没有对比，就没有伤害。<br>在数据分析中，没有对比，就没有结论。<br>比如说，小明某次期末考试的成绩不好，英语只得了 30 分，小明的妈妈对他说：“你上次考试英语考了 70 分，这次怎么就考得这么差？你看你的同班同学，这次都考 80 分以上。”<br>常见的对比思维有以下 5 种：<br>（1）跟目标对比<br>（2）跟上个月比<br>（3）跟去年同比<br>（4）分渠道对比<br>（5）跟同类对比<br>数据分析的过程，就是在明确目标之后，通过对比等思维，找到问题的原因，得出分析的结论，提出可行的建议，从而起到帮助决策和指导行动的作用。</li>
<li>三段：细分思维<br>有人说：<br>不自由，毋宁死。<br>在数据分析中，细分是数据分析的灵魂，无细分，毋宁死。<br>比如说，小明某次考试的总成绩不好，细分一看，发现其他科目的成绩都不错，只有英语成绩特别差，只得了 30 分，从而拉低了整体的成绩。<br>常见的细分方法有以下 5 种：<br>（1）按时间细分<br>（2）按空间细分<br>（3）按过程细分<br>（4）按公式细分<br>（5）按模型细分<br>在运用细分思维解决问题的过程中，要做到有的放矢，围绕数据分析的目标，找到合适的方法，不要像无头苍蝇一样到处乱撞。<br>当发现数据异常时，尝试从不同的维度进行细分，这样既能锻炼你的数据分析思维，又能加深你对业务的理解。</li>
<li>四段：溯源思维<br>做数据分析的时候，要多问几个为什么，追根溯源，在数据源寻找可能隐藏的逻辑关系和解决方案。<br>比如说，小明把自己每天的行动数据，都用 Excel 详细记录下来，其中包括每一时段的情绪数据。小明做复盘总结的时候，发现有一天情绪数据特别低，然后连续问了几个为什么：<br>（1）为什么这一天情绪数据特别低？<br>因为那一天小明上当受骗了。<br>（2）为什么会上当受骗？<br>因为骗子用生命安全来吓小明。<br>（3）为什么骗子能吓到小明？<br>因为小明担心自己的生命安全。<br>（4）为什么小明会担心生命安全？<br>因为求生是人类的本能反应。<br>（5）为什么人会有求生的本能？<br>因为人的大脑分为：年代久远的本能脑、相对古老的情绪脑和非常年轻的理智脑。<br>理智脑对大脑的控制能力很弱，大部分决策往往源于本能和情绪，而非理智。<br>到这一步，小明找到了自己上当受骗的根本原因，在于自己当时没有控制好自己的大脑，所以失去理智。<br>针对这个问题，小明运用「控制两分法」，并在脑海中反复进行演练，然后在实践中进行校正，实现与情绪的和平共处，从而更加理智地面对纷繁复杂的世界。<br>如果你经常运用溯源思维，就能提升数据的敏感度，并加深对业务的理解。</li>
<li>五段：相关思维<br>相关思维，就是寻找变量之间相互关联的程度。<br>比如说，有一家超市的数据分析师发现，跟尿布一起购买最多的商品竟然是啤酒，啤酒和尿布有什么关联呢？<br>采访小明的爸爸，他说自己下班后，给小明的妹妹买尿布的同时，也会购买自己喜欢喝的啤酒。<br>如果一个变量改变的时候，另一个变量也朝着相同的方向发生变化，那么我们就说这两个变量之间存在正相关性。<br>运用相关思维，通常包括以下 3 个步骤：<br>（1）收集相关数据<br>（2）绘制散点图形<br>（3）计算相关系数<br>需要注意的是，相关不等于因果。即使两个变量之间相关，也不代表其中一个变量的改变，是由另一个变量的变化引起的。<br>比如说，国家的诺贝尔奖数量，与巧克力消费量之间呈现正相关关系，但这并不是说，多吃巧克力有助于获得更多的诺贝尔奖。<br>一种合理的解释是，诺贝尔奖的数量与巧克力的消费量，很可能都是由其他变量导致的，例如国民的受教育程度和富裕程度。</li>
<li>六段：假设思维<br>胡适先生说过：<br>大胆假设，小心求证。<br>这句话非常适合用在数据分析领域。<br>大胆假设，就是要打破既有观念的束缚，挣破旧有思想的牢笼，大胆创新，对未解决的问题提出新的假设。<br>小心求证，就是基于上面的假设，用一种严谨务实的态度，寻找真相，不能有半点马虎。<br>比如说，有一天小明去买水果，跟卖水果的阿姨说：<br>“阿姨，你这桔子甜不甜？”<br>阿姨：“甜啊，不信你试试。”<br>小明：“好，那我试一个。”<br>小明剥开一个桔子，尝了一口说：<br>“嗯，不错，确实挺甜的，给我称两斤。”<br>运用假设思维，通常包括以下 3 个步骤：<br>（1）提出假设<br>（2）统计检验<br>（3）做出判断<br>大胆假设并非绝对可靠，但是通过小心求证，我们可以更好地认识世界上的许多现象，从而得出更有价值的分析结论。</li>
<li>七段：逆向思维<br>到了七段，你已经具备比较丰富的数据分析经验，此时如果想要进一步有所突破，就得打破常规，具有逆向思维的能力。<br>比如说，有一天小明去买西红柿：“阿姨，你这西红柿多少钱一斤？”<br>阿姨：“两块五。”<br>小明挑了 3 个放到秤盘：“阿姨，帮我称一下。”<br>阿姨：“一斤半，3 块 7 毛。”<br>小明去掉其中最大的西红柿：“做汤不用那么多。”<br>阿姨：“一斤二两，3 块。”<br>小明拿起刚刚去掉的那个最大的西红柿，付了 7 毛钱，扭头就走了。<br>你看，本来是阿姨想占小明的便宜，虚报重量。但是，小明利用逆向思维，反而让阿姨吃了哑巴亏。<br>常见的逆向思维有以下 5 种：<br>（1）结构逆向<br>（2）功能逆向<br>（3）状态逆向<br>（4）原理逆向<br>（5）方法逆向<br>理解这些逆向的方法，有助于你打开数据分析的思路，不断提升自己的可迁移能力，尤其是底层的思维能力，做到以不变应万变。</li>
<li>八段：演绎思维<br>演绎思维的方向是由一般到个别，主要形式是「三段论」，由大前提、小前提、结论三部分组成。<br>比如说，小明不仅知道：金属都能导电；而且知道：铜是一种金属；所以小明可以得出结论：铜能导电。<br>运用演绎思维，应该遵循 5 项基本原则：<br>（1）不要出现第四个概念<br>（2）中项要能向外延伸<br>（3）大项和小项都不能扩大<br>（4）前提都为否，结论不必然<br>（5）前提有一否，结论必为否<br>掌握以上基本原则，能帮你建立更加严谨的数据分析思维。</li>
<li>九段：归纳思维<br>归纳思维的方向与演绎正好相反，归纳的过程是从个别到一般。<br>比如说，小明先知道：金、银、铜、铁等金属分别能导电，然后归纳出一个结论：所有金属都能导电。<br>这个过程，是先接触到个别事物，然后再进行归纳总结。<br>常见的归纳方法有以下 5 种：<br>（1）求同法<br>（2）求异法<br>（3）共用法<br>（4）共变法<br>（5）剩余法<br>这些方法是我们获取新知识的重要途径，不过需要注意的是，很多案例和故事都说明，有限的观察并不等于真理。<br>为了避免以偏概全，我们还要加强归纳思维的训练，积累更多实战的经验，这样归纳总结出来的结论，才能经得起时间的考验，才会更有现实意义。<br>通过归纳总结，得出有价值的分析结论，这既是数据分析的终点，也是数据分析的起点，形成一个正向的循环系统。<br>最后的话<br>正确的思维能力，是做好数据分析的必备条件，这也是很多人相对比较欠缺的一种能力。<br>要想成为一个有洞察力的人，就要多学习、多思考、多总结、多实践，通过刻意练习，举一反三，把数据分析的思维，应用到日常的工作和生活中去，逐渐提升自己的数据分析思维能力。</li>
</ol>
]]></content>
      <categories>
        <category>数据</category>
      </categories>
      <tags>
        <tag>数据</tag>
      </tags>
  </entry>
  <entry>
    <title>期货业务学习</title>
    <url>/2022/10/04/%E6%9C%9F%E8%B4%A7%E4%B8%9A%E5%8A%A1%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h3 id="1-什么是头寸？"><a href="#1-什么是头寸？" class="headerlink" title="1. 什么是头寸？"></a>1. 什么是头寸？</h3><p>在期货中，把买进期货合约做多者称为多头，卖出期货合约做空者称为空头。 多头是指投资者对期货市场看好，预计期货合约的价格将会上涨，于是趁低价买进期货合约，待价格上涨后再卖出以获得差额收益；相反，空头就是对未来期货价格看跌，而卖出期货合约，待价格下跌后再买进以获得差额收益。那期货头寸是什么呢？头寸也叫“部位”（position），是指期货投资者持有的仓位，即未进行对冲处理的买或卖期货合约数量。对做多者，称处于多头头寸；对做空者，称处于空头头寸。多单与空单的差值，称为“净头寸”。</p>
<h3 id="2-什么是点价？"><a href="#2-什么是点价？" class="headerlink" title="2. 什么是点价？"></a>2. 什么是点价？</h3><p>点价我知道原来在大豆进出口贸易有这个概念。美国是最大的大豆出口国，我国是最大的大豆进口国。大豆价格波动很大，这个交易涉及到三方，美国农民、美国贸易商、中国油厂。美国农民通过点价卖货的方式把大豆卖给贸易商，即卖出后并不确定卖出价，而是相对某月期货确定一个升贴水，农民可自行选择一定期限内约定期货的价格，再计算上升贴水就是农民获得的售货款。中国油厂点价买货则是接受贸易商的升贴水报价，签订进口合同时，并不直接确定大豆的价格，在合同中约定以CBOT某月大豆合约作为标的合约，在一定期限内 以期货价格均价加升贴水作为最终的进口价格。而贸易商在中间则是利用期货套期保值的功能，达到低风险交易的目的。<br>具体分三步：<br>第一步：贸易商向农民收购大豆，同时在期货市场卖出相应期货保值，手中持有大豆现货多头和相应期货空头；<br>第二步：向中国油厂报升贴水价格，并与之签订合同，中国油厂接受升贴水报价，并在一定期限内购买相应数量的期货（即中国油厂点价）<br>第三步：中国油厂将期货多单转给贸易商，贸易商平提手中的期货空头，同时中国油厂从贸易商手中购买相应数量的大豆现货，过程完成后，贸易商手中的大豆现货多头和期货空头同时平仓。<br>最初大豆交易并非用的点价方式，但有几年大豆价格跌的厉害，大豆在运送过程中，比如40天，价格大跌，船到港后，大豆购买方宁愿不要保证金也要违约，贸易商损失惨重，而在大豆价格大幅上涨时，这一情形又反过来。反正渐渐的，大豆就使用点价交易了。另外，感觉中国大豆的进口史也是有挺多值得细细说一说的。</p>
<h3 id="3-什么是正套、反套？"><a href="#3-什么是正套、反套？" class="headerlink" title="3. 什么是正套、反套？"></a>3. 什么是正套、反套？</h3><p>近有很多交易者问我关于套利的事情，我发现很多交易者甚至连正套和反套都不是很理解，也有的人是死记硬背、生搬硬套，所以今天我们来一起了解一下正套和反套。<br>我从以下三个角度来帮助你理解正反套：</p>
<ol>
<li>时间维度——跨期套利</li>
<li>产业链维度——产业套利</li>
<li>贸易流维度——跨市套利<br>首先，从跨期套利角度来讲。通常情况下，只有先拥有商品，才有对商品的卖出处置权。人们可以通过生产、采购甚至借贷现货来实现最终的卖出交割，这种符合商品正常流向的近期买入、远期卖出的套利方式，我们称之为正向套利。同样，由于时间的不可逆性，我们无法让未来的拥有来满足现在的需要，所以期货市场中近期卖出、远期买入的套利方式，我们称之为反向套利。</li>
</ol>
<p>其次，从产业套利角度来讲。在产业套利当中，整个产业链分为原材料、产成品。产成品是由原材料生产和加工而来的，所以做多原料做空成品属于正向套利，反之，做空原料做多成品属于反向套利。我们以最常见的大豆产业链来说，做多大豆做空豆油豆粕属于正向套利，而做空大豆做多豆油豆粕就属于反向套利。</p>
<p>最后，从跨市套利角度来讲。在跨市场套利中，正向套利的意思是做多国外，做空国内。之所以称之为正向套利，原因在于中国是净进口国，净贸易流方向为国外到国内。正向套利的实物逻辑在于进口贸易流，做多国外同时做空国内，意味着从国外买入，再卖到国内，与贸易流方向一致。以棉花为例，国内棉花价格一直高于美棉的原因有两个：一是国内棉花种植的机械化程度不强，种植成本远超美国；二是中国和美国对棉花种植的扶持政策存在差异，美国直接补贴棉农，而国内则是通过发改委国储局的棉花收抛储政策来影响市场供给，进而维持价格稳定，达到保障棉农利益、调控国内棉价的双重目的。所以，每年我们国家都会从美国进口一部分棉花，贸易流是从美国流向中国，所以做多美棉，做空郑棉，这就属于跨市套利中的正向套利。当然，棉花和白糖这两个品种都是配额制的，在一定程度上会受政策的干预和影响。</p>
<h3 id="4-杨老师普及期货知识"><a href="#4-杨老师普及期货知识" class="headerlink" title="4. 杨老师普及期货知识"></a>4. 杨老师普及期货知识</h3><p>对于期货的开仓，就是开多和开空，然后平仓的时候就是平多和平空。<br>对于这个ZLYD&#x2F;XMD公司来说，有套期保值和套利2种方式。具体如下：<br>在梳理套期保值和套利之前首先要明确几个名词：<br>1、持仓：也可以叫头寸，就是你现在手头上的合约，比如持有202210的豆粕空单10手。<br>2、基差：现货和期货的价差，比如现货市场价5000，期货市场价5500，基差就是现货-期货 &#x3D; -500。<br>3、正套：买现货，卖期货，适用预期后面要涨的市场。<br>4、反套：卖现货，买期货，使用预期后面要降的市场。<br>5、套期保值：买现货的同时卖期货。</p>
<p><strong>正套</strong>：正套可以做套期保值也可以做套利。<br>正套主要的操作是买现货的时候开一个期货的空单，比如现货的价格是4000，期货的价格是4500，基差是-500。<br>那么当这笔货交货的时候现货的价格是4100，期货价格是4550，当前基差是-450。<br>这个时候我们可以平掉这个空单，那么基差就是-450 - （-500） &#x3D; 50。<br>我们在这笔交易中盈利50。</p>
<p><strong>反套</strong>：完全参考正套的方式，所有买卖操作全部相反。</p>
<p><strong>套期保值</strong>：套期保值主要用在采购中。<br>套期保值完全是作为采购保值的操作来做的，比如我们采购1000吨的卷，价格为4000，但是交期为3个月，那么我们就会担心3个月后价格跌了就会造成损失，那么我们就可以在期货市场中做一笔空单，卖出1000吨的货（100手，一般10吨为1手，豆粕、热卷、螺纹钢都是）价格为4100。<br>那么当我们1000吨的现货在3个月后入库后（比如3个月后直接全部入库，举例子，实际陆续入库的话对应期货操作是一样的），当前价格是3900，我们每吨赔了100，那么我们对应期货的价格可能跌倒了3990。那么我们就平掉期货的仓位，这个时候我们在现货中赔了100块，但是在期货市场中赚了110块，总体每吨赚10块。如果期货价格为4010，那么我们在现货中赔了100，但是在期货市场赚了90，总体每吨赔了10块钱。<br>所以套期保值可以锁定大部分的利润，明细的降低了价格的波动风险。</p>
]]></content>
      <categories>
        <category>业务学习</category>
      </categories>
      <tags>
        <tag>业务学习</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析项目实施实战思路</title>
    <url>/2022/07/20/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%9A%84%E5%AE%9E%E6%96%BD%E6%80%9D%E8%B7%AF%E5%AE%9E%E6%88%98/</url>
    <content><![CDATA[<h3 id="实施思路"><a href="#实施思路" class="headerlink" title="实施思路"></a>实施思路</h3><p>1、背景：作为一名开发顾问进入数据分析项目，主要负责数仓的搭建，接口的数据抽取，报表的制作（部分），但是还是要不断的熟悉业务和熟知业务上的痛点来出发，做真正能够帮助业务提升的项目。</p>
<p>2、本次项目的王顾问经验非常的丰富，能够提出不少很有效的管理思路，作为学习方，作下记录：</p>
<p>3、实施的思路：</p>
<p>如果从大阶段分的话，一般为：调研、蓝图设计、数仓搭建、报表设计、交付。</p>
<p>如果是按照项目流程来讲，在顾问入厂后应该是先开启动会的，在启动会上宣读会议的组织架构、会议章程、项目主计划等，但是由于这次项目是高度定制和有外包实施商的，并且实施商对目前公司的现状并不清晰，所以先进行了一次轻调研，轻调研的意思是先了解有那些表单、岗位上对于数据有那些痛点和难点，并了解下公司的整体的业务现状。</p>
<p>这里的启发是：在不确定项目目标的情况下，不要死板的去套流程，所有汇报其实都是一个秀，让参会人员获取知识、了解目标、明确责任才是目的，而不是为了启动会而开启动会。</p>
<h3 id="调研阶段"><a href="#调研阶段" class="headerlink" title="调研阶段"></a>调研阶段</h3><p>目前调研阶段主顾问做了这么几个动作：</p>
<p>1、收集所有岗位的报表，在和各个岗位聊的时候手头是有东西的，而不是无的放矢。</p>
<p>2、做好问题点的规划：主要就是从数据项目能给你带来什么价值；目前还有什么痛点；目前对数据还有什么需求；给领导上报那些报表；每天在报表上处理花费的时长等方面引导。</p>
<p>3、对于和用户交流过程中出现的偏差能及时引导和划清界限，比如明确确定这个功能点不是我们要管的，就绝对不会放到项目范围里去，但是可以适当的给用户提一下解决方案。</p>
<p><strong>备注：一定要在调研过程中做好录音，后期准备好逐字稿进行备忘。</strong></p>
<p>4、对业务的理解一定要到位，目前的主顾问对各个环节的理解非常的到位，同时对技术的了解也够深，这是我还需要学习的地方。</p>
<p>5、还有就是对于主计划的制订，这个是我们这边要求的，但是也很考验项目经理的能力。</p>
<p>6、项目主计划制定出来以后，还需要制定双周计划，主计划作为指引，双周计划作为实际工作计划的落地执行参考，双周计划更加的细致。</p>
<hr>
<p>7、早夕会制度在项目中要坚持，项目的早会主要是制定当日工作计划，夕会主要是收敛今日工作。</p>
<p>8、调研阶段出具的项目主计划样式：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220721172717.png" alt="20220721172717"></p>
<p>9、项目双周计划的样式：</p>
<p>10、在项目简单调研阶段完成后，还需要同步下《行业词根规范》这个是需要收集整理本行业里特有的专业名称，收集后来支持数仓字段的命名、报表的命名等。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220722083145.png" alt="20220722083145"></p>
<hr>
<p>11、在项目初步调研完成后应该是开启动会，开启动会之前需要和总经理同步下初步调研完成的结果，项目的方向和本期要达成的目标，其实项目经理就是一个上下贯通，拉皮条的活~。</p>
<p>12、在开完项目启动会后，就可以进入详细调研阶段了，在这个阶段最好的方法是直接去各个部门的关键岗位上，学习和交流他们用的表的结构、取值逻辑、加工逻辑和的表用途，这个非常的关键，因为只有理解了他们的逻辑才能规划我们要在系统里实现什么，能够做到什么程度。这个阶段的产出物是《业务调研报告》&#x2F;《需求分析报告》。</p>
<p>12.1、在产出《业务调研报告》时候要进一步跟进demo的设计，业务调研报告不会一版就通过的，不会把所有人力都堆到业务调研报告的编制上，那么有部分人尤其是开发人员就需要开始着手对确定的的需求进行demo的设计，demo的设计主要是根据管理者的手稿进行图形化展现（这里的手稿是在详细调研的过程中，要求管理者手工绘制的），一般来说根据手稿出具的demo比较容易通过验收，同时可以根据demo来梳理关键指标和指导蓝图规划的输出，可以更快的让管理者知道能够看到什么东西。demo的实现主要就是利用现成的模板和随机数快速搭建样例。</p>
<p>12.2、在demo驾驶舱绘制的过程中，需要搭建一个新的数据库，最好用mysql，方便导入数据，利用excel+mysql+帆软内置数据设计模式进行快速demo开发。同时demo设计要遵循一定的规则，具体规则待更新。</p>
<p><strong>做demo设计的过程也是了解业务的过程</strong></p>
<p><strong>demo设计这个环节是之前在项目中没有遇到过，这个环节上承现状调研，下接蓝图方案确认，实在是本项目中的非常重要的一环</strong></p>
<p><strong>demo设计环节需要和管理层不断的反复确认样式、指标、模型等关键节点，只有能够确认demo的样式，才能进行下一步操作，在对于样式的调整上，可以适当的借力外来团队力量</strong></p>
<p>13、根据需求文档&#x2F;调研报告，设计关键指标和业务蓝图，形成《蓝图方案》，在这个阶段会有大量的蓝图设计讨论会，关键指标将来会做到公式级别，根据指标和蓝图形成报表与驾驶舱。后面落地就是系统实现阶段了。</p>
<p>14、系统实现阶段是相对来说比较简单的，主要就是堆上合理的技术人员和评估技术实现的复杂度问题。</p>
<p>15、指标库的构成<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220906083435.png" alt="20220906083435"></p>
<p>to be continue</p>
]]></content>
      <categories>
        <category>数据</category>
      </categories>
      <tags>
        <tag>数据</tag>
      </tags>
  </entry>
  <entry>
    <title>深度好文：关于数仓建设及数据治理的超全概括</title>
    <url>/2022/07/08/%E6%B7%B1%E5%BA%A6%E5%A5%BD%E6%96%87%EF%BC%9A%E5%85%B3%E4%BA%8E%E6%95%B0%E4%BB%93%E5%BB%BA%E8%AE%BE%E5%8F%8A%E6%95%B0%E6%8D%AE%E6%B2%BB%E7%90%86%E7%9A%84%E8%B6%85%E5%85%A8%E6%A6%82%E6%8B%AC/</url>
    <content><![CDATA[<p>在谈数仓之前，先来看下面几个问题：</p>
<h3 id="数仓为什么要分层？"><a href="#数仓为什么要分层？" class="headerlink" title="数仓为什么要分层？"></a>数仓为什么要分层？</h3><ol>
<li>用空间换时间，通过大量的预处理来提升应用系统的用户体验（效率），因此数据仓库会存在大量冗余的数据；不分层的话，如果源业务系统的业务规则发生变化将会影响整个数据清洗过程，工作量巨大。</li>
<li>通过数据分层管理可以简化数据清洗的过程，因为把原来一步的工作分到了多个步骤去完成，相当于把一个复杂的工作拆成了多个简单的工作，把一个大的黑盒变成了一个白盒，每一层的处理逻辑都相对简单和容易理解，这样我们比较容易保证每一个步骤的正确性，当数据发生错误的时候，往往我们只需要局部调整某个步骤即可。</li>
</ol>
<p>数据仓库之父 Bill Inmon对数据仓库做了定义——面向主题的、集成的、相对稳定的、反映历史变化的数据集合，用于支持管理决策。从定义上来看，数据仓库的关键词为面向主题、集成、稳定、反映历史变化、支持管理决策，而这些关键词的实现就体现在分层架构内。</p>
<p>一个好的分层架构，有以下好处：</p>
<ol>
<li><strong>清晰数据结构</strong>：每一个数据分层都有对应的作用域，在使用数据的时候能更方便的定位和理解。</li>
<li><strong>数据血缘追踪</strong>：提供给业务人员或下游系统的数据服务时都是目标数据，目标数据的数据来源一般都来自于多张表数据。若出现目标数据异常时，清晰的血缘关系可以快速定位问题所在。而且，血缘管理也是元数据管理重要的一部分。</li>
<li><strong>减少重复开发</strong>：数据的逐层加工原则，下层包含了上层数据加工所需要的全量数据，这样的加工方式避免了每个数据开发人员都重新从源系统抽取数据进行加工。</li>
<li><strong>数据关系条理化</strong>：源系统间存在复杂的数据关系，比如客户信息同时存在于核心系统、信贷系统、理财系统、资金系统，取数时该如何决策呢？数据仓库会对相同主题的数据进行统一建模，把复杂的数据关系梳理成条理清晰的数据模型，使用时就可避免上述问题了。</li>
<li><strong>屏蔽原始数据的影响</strong>：数据的逐层加工原则，上层的数据都由下一层的数据加工获取，不允许跳级取数。而原始数据位于数仓的最底层，离应用层数据还有多层的数据加工，所以加工应用层数据的过程中就会把原始数据的变更消除掉，保持应用层的稳定性。</li>
</ol>
<h3 id="数仓分几层最好？"><a href="#数仓分几层最好？" class="headerlink" title="数仓分几层最好？"></a>数仓分几层最好？</h3><p>目前市场上主流的分层方式眼花缭乱，不过看事情不能只看表面，还要看到内在的规律，<strong>不能为了分层而分层</strong>，没有最好的，只有适合的。</p>
<p>分层是以解决当前业务快速的数据支撑为目的，为未来抽象出共性的框架并能够赋能给其他业务线，同时为业务发展提供稳定、准确的数据支撑，并能够按照已有的模型为新业务发展提供方向，也就是数据驱动和赋能。</p>
<h3 id="如何搭建一个好的数仓？"><a href="#如何搭建一个好的数仓？" class="headerlink" title="如何搭建一个好的数仓？"></a>如何搭建一个好的数仓？</h3><ol>
<li><strong>稳定</strong>：数据产出稳定且有保障。</li>
<li><strong>可信</strong>：数据干净、数据质量高。</li>
<li><strong>丰富</strong>：数据涵盖的业务足够广泛。</li>
<li><strong>透明</strong>：数据构成体系足够透明。</li>
</ol>
<h2 id="数仓设计"><a href="#数仓设计" class="headerlink" title="数仓设计"></a>数仓设计</h2><p>数仓设计的3个维度：</p>
<ul>
<li><strong>功能架构</strong>：结构层次清晰。</li>
<li><strong>数据架构</strong>：数据质量有保障。</li>
<li><strong>技术架构</strong>：易扩展、易用。</li>
</ul>
<h3 id="数仓架构"><a href="#数仓架构" class="headerlink" title="数仓架构"></a>数仓架构</h3><p>按照数据流入流出的过程，数据仓库架构可分为：<strong>源数据</strong>、<strong>数据仓库</strong>、<strong>数据应用</strong>。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/297aea6b440fa45ca1dba17135b4dd7e.png" alt="img"></p>
<p>数据仓库</p>
<p>数据仓库的数据来源于不同的源数据，并提供多样的数据应用，数据自下而上流入数据仓库后向上层开放应用，而数据仓库只是中间集成化数据管理的一个平台。</p>
<p><strong>源数据</strong>：此层数据无任何更改，直接沿用外围系统数据结构和数据，不对外开放；为临时存储层，是接口数据的临时存储区域，为后一步的数据处理做准备。</p>
<p><strong>数据仓库</strong>：也称为细节层，DW层的数据应该是一致的、准确的、干净的数据，即对源系统数据进行了清洗（去除了杂质）后的数据。</p>
<p><strong>数据应用</strong>：前端应用直接读取的数据源；根据报表、专题分析需求而计算生成的数据。</p>
<p>数据仓库从各数据源获取数据及在数据仓库内的数据转换和流动都可以认为是ETL（<strong>抽取Extra, 转化Transfer, 装载Load</strong>）的过程，ETL是数据仓库的流水线，也可以认为是数据仓库的血液，它维系着数据仓库中数据的新陈代谢，而数据仓库日常的管理和维护工作的大部分精力就是保持ETL的正常和稳定。</p>
<p>建设数据仓库犹如创造一条新的生命，分层架构只是这条生命的逻辑骨架而已。想要在骨架上长出血肉，就必须进行合适的数据建模，数据仓库的强壮还是孱弱，健美还是丑陋，就取决于建模的结果。</p>
<h3 id="数仓建模方法"><a href="#数仓建模方法" class="headerlink" title="数仓建模方法"></a>数仓建模方法</h3><p>数据仓库的建模方法有很多种，每一种建模方法代表了哲学上的一个观点，代表了一种归纳、概括世界的一种方法。常见的有 <strong>范式建模法、维度建模法、实体建模法</strong>等，每种方法从本质上将是从不同的角度看待业务中的问题。</p>
<h4 id="1-范式建模法"><a href="#1-范式建模法" class="headerlink" title="1. 范式建模法"></a>1. 范式建模法</h4><p>范式建模法其实是我们在构建数据模型常用的一个方法，该方法的主要由 Inmon 所提倡，主要解决关系型数据库的数据存储，利用的一种技术层面上的方法。目前，我们在关系型数据库中的建模方法，大部分采用的是三范式建模法。</p>
<p>范式 是符合某一种级别的关系模式的集合。构造数据库必须遵循一定的规则，而在关系型数据库中这种规则就是范式，这一过程也被称为规范化。目前关系数据库有六种范式：第一范式（1NF）、第二范式（2NF）、第三范式（3NF）、Boyce-Codd范式（BCNF）、第四范式（4NF）和第五范式（5NF）。</p>
<p>在数据仓库的模型设计中，一般采用第三范式。一个符合第三范式的关系必须具有以下三个条件 :</p>
<ul>
<li>每个属性值唯一，不具有多义性 ;</li>
<li>每个非主属性必须完全依赖于整个主键，而非主键的一部分 ;</li>
<li>每个非主属性不能依赖于其他关系中的属性，因为这样的话，这种属性应该归到其他关系中去。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/b77fe0772f99c363984d086836d84626.png" alt="img"></p>
<p>范式建模</p>
<p>根据 Inmon 的观点，数据仓库模型的建设方法和业务系统的企业数据模型类似。在业务系统中，企业数据模型决定了数据的来源，而企业数据模型也分为两个层次，即主题域模型和逻辑模型。同样，主题域模型可以看成是业务模型的概念模型，而逻辑模型则是域模型在关系型数据库上的实例化。</p>
<h4 id="2-实体建模法"><a href="#2-实体建模法" class="headerlink" title="2. 实体建模法"></a>2. 实体建模法</h4><p>实体建模法并不是数据仓库建模中常见的一个方法，它来源于哲学的一个流派。从哲学的意义上说，客观世界应该是可以细分的，客观世界应该可以分成由一个个实体，以及实体与实体之间的关系组成。那么我们在数据仓库的建模过程中完全可以引入这个抽象的方法，将整个业务也可以划分成一个个的实体，而每个实体之间的关系，以及针对这些关系的说明就是我们数据建模需要做的工作。</p>
<p>虽然实体法粗看起来好像有一些抽象，其实理解起来很容易。即我们可以将任何一个业务过程划分成 3 个部分，<strong>实体，事件，说明</strong>，如下图所示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/57d96b64ffa2cbd3f4246dbe901d9456.png" alt="img"></p>
<p>实体建模</p>
<p>上图表述的是一个抽象的含义，如果我们描述一个简单的事实：“小明开车去学校上学”。以这个业务事实为例，我们可以把“小明”，“学校”看成是一个实体，“上学”描述的是一个业务过程，我们在这里可以抽象为一个具体“事件”，而“开车去”则可以看成是事件“上学”的一个说明。</p>
<h4 id="3-维度建模法"><a href="#3-维度建模法" class="headerlink" title="3. 维度建模法"></a>3. 维度建模法</h4><p>维度模型是数据仓库领域另一位大师Ralph Kimall所倡导，他的《数据仓库工具箱》是数据仓库工程领域最流行的数仓建模经典。维度建模以分析决策的需求出发构建模型，构建的数据模型为分析需求服务，因此它重点解决用户如何更快速完成分析需求，同时还有较好的大规模复杂查询的响应性能。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/0576134712f68a0a39023f34e8a4a023.png" alt="img"></p>
<p>星形模型</p>
<p>典型的代表是我们比较熟知的星形模型（Star-schema），以及在一些特殊场景下适用的雪花模型（Snow-schema）。</p>
<p>维度建模中比较重要的概念就是 事实表（Fact table）和维度表（Dimension table）。其最简单的描述就是，按照事实表、维度表来构建数据仓库、数据集市。</p>
<p>目前在互联网公司最常用的建模方法就是维度建模。</p>
<p><strong>维度建模怎么建：</strong></p>
<p>在实际业务中，给了我们一堆数据，我们怎么拿这些数据进行数仓建设呢，数仓工具箱作者根据自身60多年的实际业务经验，给我们总结了如下四步。</p>
<p>数仓工具箱中的维度建模四步走：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/404be01fbe86c6ca3d57efd49be4ee05.png" alt="img"></p>
<p>维度建模四步走</p>
<p>这四步是环环相扣，步步相连。下面详细拆解下每个步骤怎么做</p>
<p><strong>1、选择业务过程</strong></p>
<ul>
<li>维度建模是紧贴业务的，所以必须以业务为根基进行建模，那么选择业务过程，顾名思义就是在整个业务流程中选取我们需要建模的业务，根据运营提供的需求及日后的易扩展性等进行选择业务。比如商城，整个商城流程分为商家端，用户端，平台端，运营需求是总订单量，订单人数，及用户的购买情况等，我们选择业务过程就选择用户端的数据，商家及平台端暂不考虑。业务选择非常重要，因为后面所有的步骤都是基于此业务数据展开的。</li>
</ul>
<p><strong>2、声明粒度</strong></p>
<ul>
<li>先举个例子：对于用户来说，一个用户有一个身份证号，一个户籍地址，多个手机号，多张银行卡，那么与用户粒度相同的粒度属性有身份证粒度，户籍地址粒度，比用户粒度更细的粒度有手机号粒度，银行卡粒度，存在一对一的关系就是相同粒度。为什么要提相同粒度呢，因为维度建模中要求我们，在<strong>同一事实表</strong>中，必须具有<strong>相同的粒度</strong>，同一事实表中不要混用多种不同的粒度，不同的粒度数据建立不同的事实表。并且从给定的业务过程获取数据时，强烈建议从关注原子粒度开始设计，也就是从最细粒度开始，因为原子粒度能够承受无法预期的用户查询。但是上卷汇总粒度对查询性能的提升很重要的，所以对于有明确需求的数据，我们建立针对需求的上卷汇总粒度，对需求不明朗的数据我们建立原子粒度。</li>
</ul>
<p><strong>3、确认维度</strong></p>
<ul>
<li>维度表是作为业务分析的入口和描述性标识，所以也被称为数据仓库的“灵魂”。在一堆的数据中怎么确认哪些是维度属性呢，如果该列是对具体值的描述，是一个文本或常量，某一约束和行标识的参与者，此时该属性往往是维度属性，数仓工具箱中告诉我们<strong>牢牢掌握事实表的粒度，就能将所有可能存在的维度区分开</strong>，并且要<strong>确保维度表中不能出现重复数据，应使维度主键唯一</strong></li>
</ul>
<p><strong>4、确认事实</strong></p>
<ul>
<li>事实表是用来度量的，基本上都以数量值表示，事实表中的每行对应一个度量，每行中的数据是一个特定级别的细节数据，称为粒度。维度建模的核心原则之一<strong>是同一事实表中的所有度量必须具有相同的粒度</strong>。这样能确保不会出现重复计算度量的问题。有时候往往不能确定该列数据是事实属性还是维度属性。记住<strong>最实用的事实就是数值类型和可加类事实</strong>。所以可以通过分析该列是否是一种包含多个值并作为计算的参与者的度量，这种情况下该列往往是事实。</li>
</ul>
<p><strong>其中粒度是非常重要的</strong>，粒度用于确定事实表的行表示什么，建议从关注原子级别的粒度数据开始设计，因为原子粒度能够承受无法预估的用户查询，而且原子数据可以以各种可能的方式进行上卷，而一旦选择了高粒度，则无法满足用户下钻细节的需求。</p>
<p><strong>事实是整个维度建模的核心</strong>，其中雪花模型或者星型模型都是基于一张事实表通过外健关联维表进行扩展，生成一份能够支撑可预知查询需求的模型宽表，而且最后的查询也是落在事实表中进行。</p>
<h2 id="实际业务中数仓分层"><a href="#实际业务中数仓分层" class="headerlink" title="实际业务中数仓分层"></a>实际业务中数仓分层</h2><p>数仓分层要结合公司业务进行，并且需要清晰明确各层职责，要保证数据层的稳定又要屏蔽对下游影响，一般采用如下分层结构：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/4bc29f0794a1040e43fbaa7e13435225.png" alt="img"></p>
<p>数据分层架构</p>
<h3 id="数据层具体实现"><a href="#数据层具体实现" class="headerlink" title="数据层具体实现"></a>数据层具体实现</h3><blockquote>
<p>使用四张图说明每层的具体实现</p>
</blockquote>
<ul>
<li><strong>数据源层ODS</strong></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/16140484aac109442bfb2a6b148ebebf.png" alt="img"></p>
<p>数据源层</p>
<p>数据源层主要将各个业务数据导入到大数据平台，作为业务数据的快照存储。</p>
<ul>
<li><strong>数据明细层DW</strong></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/9ab3e9c3c75a5f7d5adbcfd1fa763151.png" alt="img"></p>
<p>数据明细层</p>
<p>事实表中的每行对应一个度量，每行中的数据是一个特定级别的细节数据，称为粒度。维度建模的核心原则之一是<strong>同一事实表中的所有度量必须具有相同的粒度</strong>。这样能确保不会出现重复计算度量的问题。</p>
<p>维度表一般都是单一主键，少数是联合主键，注意维度表不要出现重复数据，否则和事实表关联会出现<strong>数据发散</strong>问题。</p>
<p>有时候往往不能确定该列数据是事实属性还是维度属性。记住<strong>最实用的事实就是数值类型和可加类事实</strong>。所以可以通过分析该列是否是一种包含多个值并作为计算的参与者的度量，这种情况下该列往往是事实；如果该列是对具体值的描述，是一个文本或常量，某一约束和行标识的参与者，此时该属性往往是维度属性。但是还是要结合业务进行最终判断是维度还是事实。</p>
<ul>
<li><strong>数据轻度汇总层DM</strong></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/a0fbc1813048e3c9a6c91f644c46c46d.png" alt="img"></p>
<p>数据轻度汇总层</p>
<p>此层命名为轻汇总层，就代表这一层已经开始对数据进行汇总，但是不是完全汇总，只是对相同粒度的数据进行关联汇总，不同粒度但是有关系的数据也可进行汇总，此时需要将粒度通过聚合等操作进行统一。</p>
<ul>
<li><strong>数据应用层APP</strong></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/227d7c2f4bf8007faac56311404708d8.png" alt="img"></p>
<p>数据应用层</p>
<p>数据应用层的表就是提供给用户使用的，数仓建设到此就接近尾声了，接下来就根据不同的需求进行不同的取数，如直接进行报表展示，或提供给数据分析的同事所需的数据，或其他的业务支撑。</p>
<p><strong>一张图总结下数据仓库的构建整体流程</strong>：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/649d68a75ace139a62abf593f71517a5.png" alt="img"></p>
<p>数仓整体流程</p>
<h2 id="数据治理"><a href="#数据治理" class="headerlink" title="数据治理"></a>数据治理</h2><p><strong>数仓建设真正的难点不在于数仓设计，而在于后续业务发展起来，业务线变的庞大之后的数据治理</strong>，包括资产治理、数据质量监控、数据指标体系的建设等。</p>
<p>其实数据治理的范围很⼴，包含数据本⾝的管理、数据安全、数据质量、数据成本等。在DAMA 数据管理知识体系指南中，数据治理位于数据管理“车轮图”的正中央，是数据架构、数据建模、数据存储、数据安全、数据质量、元数据管理、主数据管理等10大数据管理领域的总纲，为各项数据管理活动提供总体指导策略。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/a2c687316cabc8b5e5fe833c1f2262c7.png" alt="img"></p>
<h3 id="数据治理之道是什么"><a href="#数据治理之道是什么" class="headerlink" title="数据治理之道是什么"></a>数据治理之道是什么</h3><h5 id="1-数据治理需要体系建设"><a href="#1-数据治理需要体系建设" class="headerlink" title="1. 数据治理需要体系建设"></a>1. 数据治理需要体系建设</h5><p>为发挥数据价值需要满足三个要素：<strong>合理的平台架构、完善的治理服务、体系化的运营手段</strong>。</p>
<p>根据企业的规模、所属行业、数据量等情况选择合适的平台架构；治理服务需要贯穿数据全生命周期，保证数据在采集、加工、共享、存储、应用整个过程中的完整性、准确性、一致性和实效性；运营手段则应当包括规范的优化、组织的优化、平台的优化以及流程的优化等等方面。</p>
<h5 id="2-数据治理需要夯实基础"><a href="#2-数据治理需要夯实基础" class="headerlink" title="2. 数据治理需要夯实基础"></a>2. 数据治理需要夯实基础</h5><p>数据治理需要循序渐进，但在建设初期至少需要关注三个方面：<strong>数据规范、数据质量、数据安全</strong>。规范化的模型管理是保障数据可以被治理的前提条件，高质量的数据是数据可用的前提条件，数据的安全管控是数据可以共享交换的前提条件。</p>
<h5 id="3-数据治理需要IT赋能"><a href="#3-数据治理需要IT赋能" class="headerlink" title="3. 数据治理需要IT赋能"></a>3. 数据治理需要IT赋能</h5><p>数据治理不是一堆规范文档的堆砌，而是需要将治理过程中所产生的的规范、流程、标准落地到IT平台上，在数据生产过程中通过“以终为始”前向的方式进行数据治理，避免事后稽核带来各种被动和运维成本的增加。</p>
<h5 id="4-数据治理需要聚焦数据"><a href="#4-数据治理需要聚焦数据" class="headerlink" title="4. 数据治理需要聚焦数据"></a>4. 数据治理需要聚焦数据</h5><p>数据治理的本质是管理数据，因此需要加强元数据管理和主数据管理，从源头治理数据，补齐数据的相关属性和信息，比如：元数据、质量、安全、业务逻辑、血缘等，通过元数据驱动的方式管理数据生产、加工和使用。</p>
<h5 id="5-数据治理需要建管一体化"><a href="#5-数据治理需要建管一体化" class="headerlink" title="5. 数据治理需要建管一体化"></a>5. 数据治理需要建管一体化</h5><p>数据模型血缘与任务调度的一致性是建管一体化的关键，有助于解决数据管理与数据生产口径不一致的问题，避免出现两张皮的低效管理模式。</p>
<h3 id="浅谈数据治理方式"><a href="#浅谈数据治理方式" class="headerlink" title="浅谈数据治理方式"></a>浅谈数据治理方式</h3><p>如上面所说，数据治理的范围非常广，其中最重要的是数据质量治理，而数据质量涉及的范围也很广，贯穿数仓的整个生命周期，从<strong>数据产生-&gt;数据接入-&gt;数据存储-&gt;数据处理-&gt;数据输出-&gt;数据展示</strong>，每个阶段都需要质量治理，评价维度包括<strong>完整性、规范性、一致性、准确性、唯一性、关联性</strong>等。</p>
<p>在系统建设的各个阶段都应该根据标准进行数据质量检测和规范，及时进行治理，避免事后的清洗工作。</p>
<p>质量检测可参考以下维度：</p>
<table>
<thead>
<tr>
<th align="center">维度</th>
<th align="center">衡量标准</th>
</tr>
</thead>
<tbody><tr>
<td align="center">完整性</td>
<td align="center">业务指定必须的数据是否缺失，不允许为空字符或者空值等。例如，数据源是否完整、维度取值是否完整、数据取值是否完整等</td>
</tr>
<tr>
<td align="center">时效性</td>
<td align="center">当需要使用时，数据能否反映当前事实。即数据必须及时，能够满足系统对数据时间的要求。例如处理（获取、整理、清洗、加载等）的及时性</td>
</tr>
<tr>
<td align="center">唯一性</td>
<td align="center">在指定的数据集中数据值是否唯一</td>
</tr>
<tr>
<td align="center">参照完整性</td>
<td align="center">数据项是否在父表中有定义</td>
</tr>
<tr>
<td align="center">依赖一致性</td>
<td align="center">数据项取值是否满足与其他数据项之间的依赖关系</td>
</tr>
<tr>
<td align="center">正确性</td>
<td align="center">数据内容和定义是否一致</td>
</tr>
<tr>
<td align="center">精确性</td>
<td align="center">数据精度是否达到业务规则要求的位数</td>
</tr>
<tr>
<td align="center">技术有效性</td>
<td align="center">数据项是否按已定义的格式标准组织</td>
</tr>
<tr>
<td align="center">业务有效性</td>
<td align="center">数据项是否符合已定义的</td>
</tr>
<tr>
<td align="center">可信度</td>
<td align="center">根据客户调查或客户主动提供获得</td>
</tr>
<tr>
<td align="center">可用性</td>
<td align="center">数据可用的时间和数据需要被访问时间的比例</td>
</tr>
<tr>
<td align="center">可访问性</td>
<td align="center">数据是否便于自动化读取</td>
</tr>
</tbody></table>
<hr>
<p>下面是根据美团的技术文章总结的几点具体治理方式：</p>
<h5 id="1-规范治理"><a href="#1-规范治理" class="headerlink" title="1. 规范治理"></a>1. 规范治理</h5><p>规范是数仓建设的保障。为了避免出现指标重复建设和数据质量差的情况，统一按照最详细、可落地的方法进行规范建设。</p>
<p>(1) <strong>词根</strong></p>
<p>词根是维度和指标管理的基础，划分为普通词根与专有词根，提高词根的易用性和关联性。</p>
<ul>
<li>普通词根：描述事物的最小单元体，如：交易-trade。</li>
<li>专有词根：具备约定成俗或行业专属的描述体，如：美元-USD。</li>
</ul>
<p>(2) <strong>表命名规范</strong></p>
<p>通用规范</p>
<ul>
<li>表名、字段名采用一个下划线分隔词根（示例：clienttype-&gt;client_type）。</li>
<li>每部分使用小写英文单词，属于通用字段的必须满足通用字段信息的定义。</li>
<li>表名、字段名需以字母为开头。</li>
<li>表名、字段名最长不超过64个英文字符。</li>
<li>优先使用词根中已有关键字（数仓标准配置中的词根管理），定期Review新增命名的不合理性。</li>
<li>在表名自定义部分禁止采用非标准的缩写。</li>
</ul>
<p>表命名规则</p>
<ul>
<li><strong>表名称</strong> &#x3D; 类型 + 业务主题 + 子主题 + 表含义 + 存储格式 + 更新频率 +结尾，如下图所示：</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/a51c515d30df671286a7d198494e5047.jpg" alt="img"><br>统一的表命名规范</p>
<p>(3) <strong>指标命名规范</strong></p>
<p>结合指标的特性以及词根管理规范，将指标进行结构化处理。</p>
<ol>
<li>基础指标词根，即所有指标必须包含以下基础词根：</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/cc44ec072eefd412745ca4a5b69cd89e.png" alt="img"></p>
<ol>
<li>业务修饰词，用于描述业务场景的词汇，例如trade-交易。</li>
</ol>
<p>3.日期修饰词，用于修饰业务发生的时间区间。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/6f78a6f5dc592acefc627a60a4f65ac1.png" alt="img"></p>
<p>4.聚合修饰词，对结果进行聚集操作。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/faec13fac369c151c58af3515f9d0cfc.png" alt="img"></p>
<p>5.基础指标，单一的业务修饰词+基础指标词根构建基础指标 ，例如：交易金额-trade_amt。</p>
<p>6.派生指标，多修饰词+基础指标词根构建派生指标。派生指标继承基础指标的特性，例如：安装门店数量-install_poi_cnt。</p>
<p>7.普通指标命名规范，与字段命名规范一致，由词汇转换即可以。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/c7aa39c0efce32e81aa285150eb7c0ca.png" alt="img"></p>
<h5 id="2-架构治理"><a href="#2-架构治理" class="headerlink" title="2. 架构治理"></a>2. 架构治理</h5><p>(1) <strong>数据分层</strong></p>
<p>优秀可靠的数仓体系，往往需要清晰的数据分层结构，即要保证数据层的稳定又要屏蔽对下游的影响，并且要避免链路过长，一般的分层架构如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/3de8fe118f00602ce367334c97a1a111.jpg" alt="img"></p>
<p>(2) <strong>数据流向</strong></p>
<p>稳定业务按照标准的数据流向进行开发，即ODS–&gt;DWD–&gt;DWA–&gt;APP。非稳定业务或探索性需求，可以遵循ODS-&gt;DWD-&gt;APP或者ODS-&gt;DWD-&gt;DWT-&gt;APP两个模型数据流。在保障了数据链路的合理性之后，又在此基础上确认了模型分层引用原则：</p>
<ul>
<li>正常流向：ODS&gt;DWD-&gt;DWT-&gt;DWA-&gt;APP，当出现ODS &gt;DWD-&gt;DWA-&gt;APP这种关系时，说明主题域未覆盖全。应将DWD数据落到DWT中，对于使用频度非常低的表允许DWD-&gt;DWA。</li>
<li>尽量避免出现DWA宽表中使用DWD又使用（该DWD所归属主题域）DWT的表。</li>
<li>同一主题域内对于DWT生成DWT的表，原则上要尽量避免，否则会影响ETL的效率。</li>
<li>DWT、DWA和APP中禁止直接使用ODS的表， ODS的表只能被DWD引用。</li>
<li>禁止出现反向依赖，例如DWT的表依赖DWA的表。</li>
</ul>
<h5 id="3-元数据治理"><a href="#3-元数据治理" class="headerlink" title="3. 元数据治理"></a>3. 元数据治理</h5><p>元数据可分为技术元数据和业务元数据：</p>
<p><strong>技术元数据</strong>为开发和管理数据仓库的IT 人员使用，它描述了与数据仓库开发、管理和维护相关的数据，包括数据源信息、数据转换描述、数据仓库模型、数据清洗与更新规则、数据映射和访问权限等。</p>
<p>常见的技术元数据有：</p>
<ul>
<li>存储元数据：如表、字段、分区等信息。</li>
<li>运行元数据：如大数据平台上所有作业运行等信息：类似于 Hive Job 日志，包括作业类型、实例名称、输入输出、 SQL 、运行参数、执行时间，执行引擎等。</li>
<li>数据开发平台中数据同步、计算任务、任务调度等信息：包括数据同步的输入输出表和字段，以及同步任务本身的节点信息：计算任务主要有输入输出、任务本身的节点信息 任务调度主要有任务的依赖类型、依赖关系等，以及不同类型调度任务的运行日志等。</li>
<li>数据质量和运维相关元数据：如任务监控、运维报警、数据质量、故障等信息，包括任务监控运行日志、告警配置及运行日志、故障信息等。</li>
</ul>
<p><strong>业务元数据</strong>为管理层和业务分析人员服务，从业务角度描述数据，包括商务术语、数据仓库中有什么数据、数据的位置和数据的可用性等，帮助业务人员更好地理解数据仓库中哪些数据是可用的以及如何使用。</p>
<ul>
<li>常见的业务元数据有维度及属性(包括维度编码，字段类型，创建人，创建时间，状态等)、业务过程、指标(包含指标名称,指标编码，业务口径，指标类型，责任人，创建时间，状态，sql等)，安全等级，计算逻辑等的规范化定义，用于更好地管理和使用数据。数据应用元数据，如数据报表、数据产品等的配置和运行元数据。</li>
</ul>
<p>元数据不仅定义了数据仓库中数据的模式、来源、抽取和转换规则等，而且是整个数据仓库系统运行的基础，元数据把数据仓库系统中各个松散的组件联系起来，组成了一个有机的整体。</p>
<p><strong>元数据治理主要解决三个问题</strong>：</p>
<ol>
<li>通过建立相应的组织、流程和工具，推动业务标准的落地实施，实现指标的规范定义，消除指标认知的歧义；</li>
<li>基于业务现状和未来的演进方式，对业务模型进行抽象，制定清晰的主题、业务过程和分析方向，构建完备的技术元数据，对物理模型进行准确完善的描述，并打通技术元数据与业务元数据的关系，对物理模型进行完备的刻画；</li>
<li>通过元数据建设，为使用数据提效，解决“找数、理解数、评估”难题以及“取数、数据可视化”等难题。</li>
</ol>
<h5 id="4-安全治理"><a href="#4-安全治理" class="headerlink" title="4. 安全治理"></a>4. 安全治理</h5><p>围绕数据安全标准，首先要有数据的分级、分类标准，确保数据在上线前有着准确的密级。第二，针对数据使用方，要有明确的角色授权标准，通过分级分类和角色授权，来保障重要数据拿不走。第三，针对敏感数据，要有隐私管理标准，保障敏感数据的安全存储，即使未授权用户绕过权限管理拿到敏感数据，也要确保其看不懂。第四，通过制定审计标准，为后续的审计提供审计依据，确保数据走不脱。</p>
<h5 id="5-数据生命周期治理"><a href="#5-数据生命周期治理" class="headerlink" title="5. 数据生命周期治理"></a>5. 数据生命周期治理</h5><p>任何事物都具有一定的生命周期，数据也不例外。从数据的产生、加工、使用乃至消亡都应该有一个科学的管理办法，将极少或者不再使用的数据从系统中剥离出来，并通过核实的存储设备进行保留，不仅能够提高系统的运行效率，更好的服务客户，还能大幅度减少因为数据长期保存带来的储存成本。数据生命周期一般包含在线阶段、归档阶段（有时还会进一步划分为在线归档阶段和离线归档阶段）、销毁阶段三大阶段，管理内容包括建立合理的数据类别，针对不同类别的数据制定各个阶段的保留时间、存储介质、清理规则和方式、注意事项等。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/cff6b9a18ec5e99a3a4dff7df3031da1.jpg" alt="img"></p>
<p>从上图数据生命周期中各参数间的关系中我们可以了解到，数据生命周期管理可以使得高价值数据的查询效率大幅提升，而且高价格的存储介质的采购量也可以减少很多；但是随着数据的使用程度的下降，数据被逐渐归档，查询时间也慢慢的变长；最后随着数据的使用频率和价值基本没有了之后，就可以逐渐销毁了。</p>
<p>参考链接：</p>
<p><a href="https://mp.weixin.qq.com/s/h6HnkROzljralUj2aZyNUQ">https://mp.weixin.qq.com/s/h6HnkROzljralUj2aZyNUQ</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/137454121">https://zhuanlan.zhihu.com/p/137454121</a></p>
<p><a href="https://www.infoq.cn/article/KJzDGU6IkWKyaPZXbFkB">https://www.infoq.cn/article/KJzDGU6IkWKyaPZXbFkB</a></p>
<p><a href="https://blog.csdn.net/MeituanTech/article/details/102617733">https://blog.csdn.net/MeituanTech/article/details/102617733</a></p>
<p><a href="https://baijiahao.baidu.com/s?id=1699535513357258268">https://baijiahao.baidu.com/s?id=1699535513357258268</a></p>
<p><a href="https://tech.meituan.com/2020/03/12/delivery-data-governance.html">https://tech.meituan.com/2020/03/12/delivery-data-governance.html</a></p>
<p><strong>【END】</strong></p>
]]></content>
      <categories>
        <category>数据</category>
      </categories>
      <tags>
        <tag>数据</tag>
      </tags>
  </entry>
  <entry>
    <title>物料价格分析CKM3</title>
    <url>/2022/07/01/%E7%89%A9%E6%96%99%E4%BB%B7%E6%A0%BC%E5%88%86%E6%9E%90CKM3/</url>
    <content><![CDATA[<p>许多刚接触SAP的财务人员，对成本这一块可能比较困惑，产品的单台成本是多少？其中直接材料是多少，人工是多少？ 物料差异该如何分析？差异是怎么形成的？SAP中该如何查看这些信息呢？</p>
<p>今天给大家介绍SAP成本控制模块中非常重要的报表CKM3N（CKM3 物料价格分析），成本会计必须读懂的一个报表！通过CKM3N可以分析物料的价格变化，以及成本构成（自制件）。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-f775359dde0313c9240cfb826fc4f293_720w.jpg" alt="img"></p>
<p>按照如上路径，进入CKM3的主界面如下</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-80c0040d021bbe1a88a08d13c8530f12_720w.jpg" alt="img"></p>
<p>CKM3显示的内容为“工厂&#x2F;物料”的明细账，记录了“工厂&#x2F;物料”的数量及价值变化情况。这个账本可以细化到“评估类型”以及“销售订单”或“项目”（即对项目库存单独评估）。</p>
<p>其中，期间状态为绿色，表示已经在当前期间运行完ML（CKMLCP）的相关步骤，全部为绿色代表已经执行ML过账。点击“价格和存货值”，可以看到物料当前的库存量、单价，以及库存总金额（下图）。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-9d4a6ec128233203242b2634dbae27af_720w.jpg" alt="img"></p>
<p>在“查看”中选择“价格确定结构”显示内容如下，</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-2ae448122b8059fef1418de844b459b9_720w.jpg" alt="img"></p>
<p><strong>初始库存</strong>： 本期的初始值，等于上期期末数。</p>
<p><strong>收 据</strong>： 本期增加部分，如采购入库、发票校验、生产入库、订单结算等。</p>
<p><strong>库存累计</strong>： 初始库存 + 收据。</p>
<p><strong>消 耗</strong>： 本期减少部分，如生产领用、成本中心消耗、销售出库、差异重估等。</p>
<p><strong>期末库存</strong>： 库存累计 – 消耗。</p>
<p><strong>初级评估</strong>： 数量 × 标准价得到的金额</p>
<p><strong>价格差异</strong>： 实际价格与标准价之间的成本差异，例如标准价是100.00，入库价格为105.00，数量100，此时计入初级评估的成本为10000.00，计入差异的金额为500.00。</p>
<p><strong>汇率差异</strong>： 汇率原因引起的差异，例如标准价65.00CNY，采购价格为10.00USD，订单数量为1；入库时汇率为6.80000，计入初级评估的金额为65.00，计入价格差异的金额为3.00；收到发票时汇率为6.90000，此时1.00的差异计入汇率差异。</p>
<p><strong>价 格</strong>： 物料的实际价格。</p>
<p>点击A列左边的小三角，可以展开查看每一项的明细数据，如下图。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-b3e2510de4aa24aff37da04330f910a9_720w.jpg" alt="img"></p>
<p>以收据中的生产为例，可以看到差异5825.00由两部分构成，订单的结算和底层物料差异的上卷。</p>
<p>在“查看”中选择“成本组件”可以分析物料的成本构成</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-00210a50bd7720f5173efcce4cae37ae_720w.jpg" alt="img"></p>
<p>从B行可以看到物料3010000001的成本构成中，直接材料、直接人工、燃料动力、折旧费用、制造费用的金额分别是多少。其中，直接人工、燃料动力、折旧费用、制造费用与作业类型相对应，SAP中最多可以定义6个作业。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-d47d25b1fe8381070bec73c2f08d4cac_720w.jpg" alt="img"></p>
<p>分析物料的成本组件时，可以分别查看实际值、标准值、价格差异、汇率差异等，并且可以分别查看本层、底层的成本（上图）。在CKM3N的界面上，点击如下按钮还可以查询价格的成本构成，以及ML结账的会计凭证。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-a3dbc3773856dd64328bd8f44d2f4782_720w.jpg" alt="img"></p>
<p>点击图标1，查看物料价格的成本构成，</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-b21a6040d91ecb5bf03b5b72307b6add_720w.jpg" alt="img"></p>
<p>点击图标2，查看ML（物料账）结账对应的会计凭证，</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-67ca7d38edffdfc2715c3ed4ac80718e_720w.jpg" alt="img"></p>
<p><strong>说明</strong>： CKM3N为“工厂&#x2F;物料”的明细账，SAP针对工厂下的每一个物料都有这样的明细账（启用ML后），详细记录了“工厂&#x2F;物料”的数量及价值变化。经常有朋友询问SAP是否有可以批量输出CKM3N的信息呢？事实上，CKM3N本身是物料的明细账本，包含的信息非常丰富，SAP无法按照CKM3N的内容进行批量输出。大家想要的可能是同时输出多个物料的成本构成，或者是输出多个物料的期初、增加、减少、期末汇总数（数量和金额），类似于下图的报表。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-d6de81c423200865e24a2885b7a52c92_720w.jpg" alt="img"></p>
<p>或</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/v2-11e8ae2ebccb5c3cbbc7a107de1d084d_720w.jpg" alt="img"></p>
<p>SAP的标准功能中没有类似于上图的报表，以上报表都是自定义开发的。</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>致远Dee接口堵塞弹窗记录</title>
    <url>/2022/05/23/%E8%87%B4%E8%BF%9CDee%E6%8E%A5%E5%8F%A3%E5%A0%B5%E5%A1%9E%E5%BC%B9%E7%AA%97%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="问题背景："><a href="#问题背景：" class="headerlink" title="问题背景："></a>问题背景：</h2><p>在致远OA传输到SAP接口时，需要校验下接口能否调用成功，比如OA询比价写入SAP的时候没有维护供应商，如果不加校验这一步的话会导致SAP返回错误，OA流程结束，这样只能去SAP调整问题，然后手工调用接口，很麻烦。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>利用Dee的高级功能，堵塞即可解决以上的需求，当传输接口有问题的时候，直接弹出报错弹窗，待处理人解决问题后提交SAP，也就是说只要是能提交到SAP的数据都是正确的。</p>
<h2 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h2><ol>
<li>SAP接口要求：要求SAP的接口返回值包含TYPE&#x2F;FLAG的标识和MESSAGE的返回错误消息，不要在外面包一层，不然解析很麻烦。</li>
<li>SAP接口配置完成以后，再写一个转换元数据的脚本，这个的意思就是把返回的数据解析为Dee能够解析的元数据，这个元数据就是来拼接XML，具体代码如下：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">String MESSAGE=getParaByName(document,&quot;MESSAGE&quot;);  &quot;解析SAP返回的错误消息</span><br><span class="line">String FLAG=getParaByName(document,&quot;FLAG&quot;);  &quot;解析SAP返回标识</span><br><span class="line"></span><br><span class="line">String xml=&quot;&lt;root&gt;&quot;;</span><br><span class="line">xml+=&quot;&lt;area count=\&quot;1\&quot; totalCount=\&quot;1\&quot;&gt;&quot;;</span><br><span class="line">xml+=&quot;&lt;row&gt;&quot;;</span><br><span class="line">xml+=&quot;&lt;MESSAGE&gt;&quot;+MESSAGE+&quot;&lt;/MESSAGE&gt;&quot;;</span><br><span class="line">xml+=&quot;&lt;FLAG&gt;&quot;+FLAG+&quot;&lt;/FLAG&gt;&quot;;</span><br><span class="line">xml+=&quot;&lt;/row&gt;&quot;;</span><br><span class="line">xml+=&quot;&lt;/area&gt;&quot;;</span><br><span class="line">xml+=&quot;&lt;/root&gt;&quot;;</span><br><span class="line">createDocByXml(xml);</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>根据解析的元数据进行堵塞处理，具体代码如下：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">String sta = &quot;&quot;;</span><br><span class="line">String FLAG=getParaByName(document,&quot;FLAG&quot;);</span><br><span class="line">String MSG = getParaByName(document,&quot;MESSAGE&quot;);</span><br><span class="line">if(FLAG.equals(&quot;Y&quot;))&#123;</span><br><span class="line">  sta = &quot;T&quot;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">  sta = &quot;F&quot;;</span><br><span class="line">&#125;;</span><br><span class="line">setHighSetStr(document,sta,&quot;Y&quot;,MSG,&quot;&quot;);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>致远OA</category>
      </categories>
      <tags>
        <tag>致远OA</tag>
      </tags>
  </entry>
  <entry>
    <title>致远OA与北森组织架构同步</title>
    <url>/2022/11/15/%E8%87%B4%E8%BF%9COA%E4%B8%8E%E5%8C%97%E6%A3%AE%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5/</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>需求是致远OA完成与北森HR的数据组织架构同步，包括集团、单位、部门、职务、岗位、人员信息。北森本身有以上信息的接口，然后致远OA中组织架构同步的方式分别有CTP开发平台进行而开，CIP平台进行应用集成。</p>
<p>目前我们使用的是CIP应用集成的方式进行。CIP集成的方式又分为中间表、视图、接口方式，当前我们使用中间表方式。利用此方式的原因是刚完成北森HR与BI系统的同步，可以直接使用kettle的任务来进行数据的抽取，加工后直接进中间表后即可。</p>
<h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><h3 id="1-北森HR接口"><a href="#1-北森HR接口" class="headerlink" title="1. 北森HR接口"></a>1. 北森HR接口</h3><p>北森HR中接口主要包含以下几个（在北森开放平台中都能查到）：<br>0. 拿token接口<br><a href="https://openapi.italent.cn/token">https://openapi.italent.cn/token</a></p>
<ol>
<li><p>读取组织接口：<br><a href="https://openapi.italent.cn/TenantBaseExternal/api/v5/Organization/GetByTimeWindow">https://openapi.italent.cn/TenantBaseExternal/api/v5/Organization/GetByTimeWindow</a></p>
</li>
<li><p>读取部门接口（和组织相同）：<br><a href="https://openapi.italent.cn/TenantBaseExternal/api/v5/Organization/GetByTimeWindow">https://openapi.italent.cn/TenantBaseExternal/api/v5/Organization/GetByTimeWindow</a></p>
</li>
<li><p>读取职务接口：<br><a href="https://openapi.italent.cn/TenantBaseExternal/api/v5/JobPost/GetByTimeWindow">https://openapi.italent.cn/TenantBaseExternal/api/v5/JobPost/GetByTimeWindow</a></p>
</li>
<li><p>读取职位接口：<br><a href="https://openapi.italent.cn/TenantBaseExternal/api/v5/Position/GetByTimeWindow">https://openapi.italent.cn/TenantBaseExternal/api/v5/Position/GetByTimeWindow</a> </p>
</li>
<li><p>读取人员接口：<br><a href="https://openapi.italent.cn/TenantBaseExternal/api/v5/Employee/GetEmployeeOfOrganization">https://openapi.italent.cn/TenantBaseExternal/api/v5/Employee/GetEmployeeOfOrganization</a></p>
</li>
</ol>
<h3 id="2-致远OA平台（版本V8-1SP2集团版）"><a href="#2-致远OA平台（版本V8-1SP2集团版）" class="headerlink" title="2.致远OA平台（版本V8.1SP2集团版）"></a>2.致远OA平台（版本V8.1SP2集团版）</h3><ol>
<li>首先登录系统管理员，并切换集团管理员账号，只有集团管理员才有权限操作CIP集成。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221115192357.png" alt="20221115192357"></li>
</ol>
<p>进入组织同步菜单。</p>
<p>进入后需要进行组织同步的方案设置，在设置之前需要先注册第三方应用（在主数据同步的上面菜单），进行产品登记和产品注册。产品登记和产品注册没什么好说的，只是根据第三方系统的信息提交下，全部是手工填报。</p>
<p>组织同步步骤：</p>
<ol>
<li><p>同步方案设置<br>第一次首先进行同步的方案创建，这里我们主要是选中间表，配置好数据库连接地址，基本是在OA库里就可以。然后如果没有中间表可以点击创建中间库，这样系统会自动创建mid开头的中间表。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221115192810.png" alt="20221115192810"><br>如图所示，点击确定。</p>
</li>
<li><p>同步初始化<br>新建同步的详细设置，主要就是是集团匹配还是单位匹配，我们这里直接就选择集团匹配。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221115192956.png" alt="20221115192956"><br>把所有的勾都打上。</p>
</li>
<li><p>同步操作<br>这里就是可以手工执行同步的方案，直接跑数据<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221115193101.png" alt="20221115193101"><br>也可以定时同步数据，考虑服务器压力和HR中人员岗位调整后对表单的影响，不建议设置定时自动跑数据。</p>
</li>
<li><p>同步日志<br>第3步执行结束后会弹窗跳转日志页面，也可以手工点日志页面，主要展现同步的情况。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221115193234.png" alt="20221115193234"></p>
</li>
</ol>
<p>至此OA层面上的操作完成，同步的逻辑是如果系统中已经存在人员，第一次同步会把所有人员信息失效，然后需要再跑一次然后就可以同步正确的组织架构信息了。这里能够同步组织架构的前提是中间表里已经有了正确的数据，所以我们需要第三步，定时从kettle中取数。</p>
<p>** 这里还需要注意致远里的中间表的取值问题 **<br>这里中间表的取值需要参考致远开放平台的组织架构中间表取值逻辑。具体连接如下。<br><a href="http://open.seeyon.com/book/ji-cheng-zu-jian/zhu-shu-ju-tong-bu/tong-bu-she-zhi.html?h=%E7%BB%84%E7%BB%87%E5%90%8C%E6%AD%A5">http://open.seeyon.com/book/ji-cheng-zu-jian/zhu-shu-ju-tong-bu/tong-bu-she-zhi.html?h=%E7%BB%84%E7%BB%87%E5%90%8C%E6%AD%A5</a> </p>
<h3 id="3-KETTLE取值到中间表"><a href="#3-KETTLE取值到中间表" class="headerlink" title="3.KETTLE取值到中间表"></a>3.KETTLE取值到中间表</h3><ol>
<li>KETTLE任务整体概览：<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221115193844.png" alt="20221115193844"><br>这里是做了一个job，然后进行token获取、读取组织、部门等等一系列的操作，而且当前面任务失败时不进行后面的流转。同时做了定时设置，固定时间内进行数据抽取。</li>
<li>具体job操作<br>2.1 获取TOKEN<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221115194134.png" alt="20221115194134"><br>2.2 读取组织<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221115194158.png" alt="20221115194158"><br>这里的读取组织是读取GP控股下所有的子公司和部门，保持和北森HR中的一致性。同时这里也用了一个循环，确保在组织读取完成以后正常结束任务。<br>2.2.3 写入组织<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221115194353.png" alt="20221115194353"><br>这里是读取组织中的转换任务，进入后可以读取我们想要的组织并进行过滤和写入中间表。<br>2.3 读取人员，KETTLE任务中其余的和读取组织都大同小异，区别就是URL的不同，但是在人员中需要关联部门表并进行group_id的写死，如下：<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20221115194648.png" alt="20221115194648"></li>
</ol>
<p>整体KETTLE任务的目的就是参照致远开放平台对中间表各个字段的定义和要求，通过北森HR的接口利用各种手段拼接起来并插入中间库的过程。</p>
<h2 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h2><p>这个需求本来没打算接，但是没谈拢所以又落在我手里，实现需求的方式有2个，二开和CIP，二开的成本和时间要求太高，供应商也没有使用CIP平台做过这种集成，而且时间要求比较紧张，所以仓促上来导致开始没想好对接的方案，也是逐渐在做的过程中理清了思路。目前通过这种方式能够很好的实现组织架构的同步。<br>在这个过程中最难不是技术的实现，而是方案的确定，尤其是这种闭源系统，只有开放平台和后台的知识文档，这样的话就只能去扒开放平台的知识和尽量的咨询外部实现过类似方案的顾问。在实施公司明确说没有做过类似需求的情况下，咨询外部顾问聊确定能够集成，这也给了我坚持往下做的信心。</p>
]]></content>
      <categories>
        <category>致远OA</category>
      </categories>
      <tags>
        <tag>致远OA</tag>
      </tags>
  </entry>
  <entry>
    <title>致远OA查询请求REST</title>
    <url>/2022/06/15/%E8%87%B4%E8%BF%9COA%E6%9F%A5%E8%AF%A2%E8%AF%B7%E6%B1%82REST/</url>
    <content><![CDATA[<h2 id="问题背景："><a href="#问题背景：" class="headerlink" title="问题背景："></a>问题背景：</h2><p>致远OA请求rest接口查询数据，需要对查询的数据进行组装。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>根据致远document的需求，按需组装，<strong>尤其是要记住表的标签要加count和totalCount。</strong></p>
<h2 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h2><ol>
<li>请求rest</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220615115114147.png" alt="image-20220615115114147"></p>
<ol start="2">
<li>获取token</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220615115155617.png" alt="image-20220615115155617"></p>
<ol start="3">
<li>根据rest请求</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220615115246703.png" alt="image-20220615115246703"></p>
<ol start="4">
<li>塞data</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import com.alibaba.fastjson.JSONObject;</span><br><span class="line">import com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import static net.sf.json.JSONSerializer.toJSON;</span><br><span class="line">import net.sf.json.JSON;</span><br><span class="line">import net.sf.json.xml.XMLSerializer;</span><br><span class="line"></span><br><span class="line">Object aaa = getRestResult(document);</span><br><span class="line">//解析json拿到data</span><br><span class="line">com.alibaba.fastjson.JSONObject jsonObject = com.alibaba.fastjson.JSON.parseObject(aaa);</span><br><span class="line">//debug(&quot;12&quot;,&quot;alibaba&quot;,jsonObject);</span><br><span class="line">String data = jsonObject.getString(&quot;data&quot;);</span><br><span class="line"></span><br><span class="line">//在data外层拼接一层intab</span><br><span class="line">String data1 = &quot;&#123; &quot;+&quot;\&quot;&quot;+&quot;ET_DATAA&quot;+ &quot;\&quot;&quot; +&quot;:&quot; + data + &quot;&#125;&quot;;</span><br><span class="line">//把取到的值都塞到data</span><br><span class="line"></span><br><span class="line">setParam(document, &quot;data&quot;, data1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//aaa</span><br><span class="line">Object dataa = document.getContext().getParameters().getValue(&quot;data&quot;);</span><br><span class="line">//Object dataa = getParaByName(document,&quot;data&quot;);</span><br><span class="line"></span><br><span class="line">net.sf.json.JSON json = toJSON(dataa);</span><br><span class="line"></span><br><span class="line">XMLSerializer serializer = new XMLSerializer();</span><br><span class="line"></span><br><span class="line">serializer.setTypeHintsEnabled(false);</span><br><span class="line">serializer.setObjectName(&quot;root&quot;);</span><br><span class="line">serializer.setElementName(&quot;row&quot;);</span><br><span class="line"></span><br><span class="line">String xml = serializer.write(json);</span><br><span class="line"></span><br><span class="line">createDocByXml(xml);</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>拼接count和totalcount</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Element root = getRootElement(document);</span><br><span class="line">Element t = getChildByName(root, &quot;ET_DATAA&quot;);</span><br><span class="line">List&lt;Element&gt; chds = getAllChildOfElement(t); //获取et_dataa节点的子节点</span><br><span class="line">t.setAttribute(&quot;count&quot;, chds.size());</span><br><span class="line">t.setAttribute(&quot;totalCount&quot;, chds.size());</span><br><span class="line">//debug(&quot;3&quot;,&quot;aaa&quot;,t);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>致远OA</category>
      </categories>
      <tags>
        <tag>致远OA</tag>
      </tags>
  </entry>
  <entry>
    <title>物料编码的经验浅谈</title>
    <url>/2022/06/20/%E7%89%A9%E6%96%99%E7%BC%96%E7%A0%81%E7%9A%84%E7%BB%8F%E9%AA%8C%E6%B5%85%E8%B0%88/</url>
    <content><![CDATA[<p>物料的名称、规格等都不能作为区别物料的标示，同名同规格的物料总是存在的。要实现物料的科学管理，物料编码是基础。</p>
<p>　　为了对物料实现统一编码，许多企业特别是大中型企业，通常设有独立的物料编码机构，或组织专项编码培训班等。但往往实践证明，相关的执行部门最终还是没有严格按照物料编码的规则执行，工作也没有达到预想中的效果。物料编码和企业标准化工作也息息相关，很多企业在推行标准化（模块化设计）工作中，花费了大量的人力和物力，又是抽调骨干队伍，又是收集图纸、制定标准，一干就是好几年。但最后，往往又是无疾而终。物料编码，是一件简单的事情，但绝对不是一件容易做好的事情；是一件重要且有意义的事情，但绝对不是每家企业都能做好的事情。</p>
<p><strong>一、物料编码的功能</strong></p>
<p>　　物料编码是以简短的文字、符号或数字、号码来代表物料、品名、规格或类别及其它有关事项的一种管理工具。在物料极为单纯、物料种类极少的工厂或许有没有物料编码都无关紧要，但在物料多到数百种或数千、数万种以上的工厂，物料编码就显得格外重要了。此时，物料的领发、验收，请购、跟催、盘点、储存等工作极为频紧，而借着物料编码，使各部门提高效率，各种物料数据传递迅速、意见沟通更加容易。物料编码之功能如下：</p>
<p>　　1、增强物料数据的正确性；</p>
<p>　　物料的领发、验收、请购、跟催、盘点、储存、记录等一切物料之活动均有物料编码可以查核，因此物料数据更加正确。至于一物多名，一名多物或物名错乱之现象不致于发生。</p>
<p>　　2、提高物料管理的工作效率；</p>
<p>　　物料既有系统的排列，以物料编码代替文字的记述，物料管理简便省事，效率因此提高。</p>
<p>　　3、利于计算机的管理；</p>
<p>　　物料管理在物料编码推行彻底之后，方能进一步利用计算机作更有效的处理，以达到物料管理之效果。</p>
<p>　　4、降低物料库存、降低成本；</p>
<p>　　物料编码利于物料库存量的控制，同时利于呆料的防止，并提高物料管理工作的效率，因此可减轻资金的积压，降低成本。</p>
<p>　　5、防止物料舞弊事件之发生；</p>
<p>　　物料一经编码后，物料记录正确而迅速，物料储存井然有序，可以减少舞弊事件之发生。</p>
<p>　　6、便于物料之领用；</p>
<p>　　库存物料均有正确的统一的名称及规格予以编码。对用料部门的领用以及物料仓库的发料都十分方便。</p>
<p>　　7、便于压缩物料的品种、规格。</p>
<p>　　对物料进行编码时，可以对某些性能相近或者相同的物料进行统一、合并和简化，压缩物料的品种、规格。</p>
<p><strong>二、物料编码的误区</strong></p>
<p>　　图号作为物料编码</p>
<p>　　随着信息化的不断推进，当前大部分的中国企业都在使用CAD等辅助设计系统。由于设计管理规范的要求，每张图纸都会有一个图号，于是大部分的企业直接使用图号作为物料的编码。但使用图号作为物料编码，会存在如下问题：</p>
<p>　　1、由于技术部门并不负责原材料的管理，原材料就没有图号；</p>
<p>　　2、图号并不唯一；</p>
<p>　　很多使用图号作为物料编码的企业，他们一直认为这是比较合理的。图号能够表述物料的唯一性吗？他们认为：“可以……但是，极个别的不能。”为什么极个别的不能？同样一张设计图纸，可以使用不锈钢制造，也可以使用镀锌板制造，两种不同的原材料制造出来的产品，我们能够说是一样的吗？但他们的图号确实就是一样的。</p>
<p>　　3、图号的管理本身不规范；</p>
<p>　　大部分的研发部门对于图号的编码管理本身就不严谨。不同的设计人员、不同的设计小组遵循的编码规则并不相同，导致后续使用图号的混乱，图号作为物料编码就更加不合适了。因</p>
<p>　　要求物料编码表述大量的信息</p>
<p>　　部分企业由于缺乏物料编码的经验，在制定编码规则的时候，往往希望制定出一套万能的、一见到编码就可以知道物料所有情况的规则。包括物料种类、属性、供应商信息，甚至包括存放仓库的信息。这些对于编码的过高期望，都是由于没有编码制定经验造成的。期望越高，失望就越大。编码就是编码，它无法表达其根本无法承载的过多信息。</p>
<p>　　把制定编码规则的工作交给个别人或部门去完成</p>
<p>　　企业的管理层往往习惯把编码工作交给技术部门或者某个资深员工来主持完成。这种做法忽略了一点，编码真正使用最多的是物料管理部门、财务部门，而非制定编码规则的技术部门。制定物料编码，应该联合技术部门、物料管理部门、财务门，组成制定团队共同完成。</p>
<p><strong>三、物料编码的原则</strong></p>
<p>　　物料编码必须合乎物料编码的原则，合理的物料编码，必须具备下列基本原则：★简单性 ★分类展开性 ★完整性 ★单一性  ★一贯性  ★可伸缩性  ★组织性 ★适应计算机管理 ★充足性。</p>
<p>　　1、简单性</p>
<p>　　编码的目的在于将物料化繁为简，便于物料的管理，如果编码过于繁杂，则违反了编码之目的。因切此物料编码在应用文字元号或数字上应力求简单明了，这样可节省阅读、填写、抄录的时间与手续，并可减少其中的错误机会。</p>
<p>　　2、分类展开性</p>
<p>　　物料复杂，物料编码大分类后还要加以细分，如果采用阿拉伯数字十进制，则每段最多只能由十个细分的项目，如果采用英文字母，则每段有26个细分项目，然而细分项目太多，就难于查找，而细分项目太少，则分类展开太慢，分类细分项目通常以五至九个较佳。例如采用阿拉伯数字十进制，有十八个项目时，其分类展开可以利用下列方法。</p>
<p>　　3、完整性</p>
<p>　　在物料编码时，所有的物料都应有物料编码可归，这样物料编码才能完整。若有些物料找不到赋予之物料编码，则很显然物料编码缺乏完整性。新产品新物料的产生容易破坏物料编码的完整性。因此每当有新物料产生，即应赋予新的物料编码，并规定新的物料没有编码，采购部门不得从事采购，即使没物料编码的新物料采购进来了，仓库部门或会计部门发现物料订购单缺少物料编码，即应请采购部门补填物料编码，否则不予入库、不予付款。这样才能确保物料编码的完整性。</p>
<p>　　4、单一性</p>
<p>　　物料编码的单一性是指一个物料编码只能代表一种物料，同一种物料只能找到一个物料编码，而绝无一个物料有数个物料编码，或一个物料编码有数项物料，一般地，只要物料的物理或化学性质有变化、只要物料要在仓库中存储、就必须为其指定一个编码，举例，如某零件要经过冲压成型、钻孔、喷漆三道工序才能完成。如果该物料的三道工序都在同一车间完成，不更换加工单位，即冲压成型后立即进行钻孔，紧接着进行喷漆，中间没有入库、出库处理，则该物料可取一个代码。如果该物料的三道工序不在同一个车间完成，其顺序是冲压、入库、领料、钻孔、入库、领料、喷漆、入库，则在库存管理中为了区分该物料的三种状态，必须取不同的物料编码。例：3000A,3000B,3000C三个编码分别表示三种不同加工状态的物料。</p>
<p>　　5、一贯性</p>
<p>　　物料编码要统一而有一贯性，如以年限分类为标准时，就应一直沿用下去，在中途不能改变用籍贯或姓氏别来分类，若要这么做必须要分段或分级进行。</p>
<p>　　6、伸缩性</p>
<p>　　物料编编码要考虑到未来新产品发展以及产品规格的变更而发生物料扩展或变动的情形。预留物料的伸缩余地，并不能仅就目前物料的现状加以物料编码的安排，否则他日新物料产生时，就有新物料无号可编的情况。</p>
<p>　　7、组织性</p>
<p>　　物料编码依其编码的系统，作井然有序的组织与排列，以便随时可从物料编码查知某项物料帐卡或数据。物料编码的组织性，对物料管理可以省掉不必要的麻烦。</p>
<p>　　8、适应电脑管理</p>
<p>　　电脑的应用已经比较普及，因此在编码时一定要考虑录入的方便性,如编码尽可能短、少使用其它符号，如‘#’、‘-’、‘*’等。</p>
<p>　　9、充足性</p>
<p>　　物料编码所采用的文字、记号或数字，必须有足够的数量，以便所组成的个别物料编码，足以代表所有个别物料，以及应付将来物料扩展时的实际需要，以免遇有特殊物料时无号可编。否则物料系统被破坏，费时误事。</p>
<p>　　10、易记性</p>
<p>　　在不影响上述九项原则之下，物料编码应选择易于记忆的文字、符号或数字，或赋予暗示及联想性。但这原则是属于次要原则，若上述九项原则俱全而独缺乏此项原则的物料编码，仍不失为优秀的物料编码。</p>
<p><strong>四、物料编码的技巧</strong></p>
<p>　　1、编码规则需尽可能反映物料大类。</p>
<p>　　物料大类可以让我们对物料的类别有一个直接的判断。比如我们每天都在使用移动电话，如果我们看到139号段的号码，就知道是移动的来电。大类的划分原则往往是：第一码：产成品、半成品、原材料、辅料、低值易耗，主要供财务使用；第二码：真正的类别，依据企业不同的情况具体制定。</p>
<p>　　2、编码需要长短适中。</p>
<p>　　按照人的记忆习惯，7-13位的编码是比较合理的。</p>
<p>　　3、尽量不要使用有特别意义的编码。</p>
<p>　　很多物料编码的初衷是为了清晰明了地表述物料，如将钢板编码成GB，简单易懂。但随着物料种类的增加，以GB编码的物料也不再仅限于“钢板”，“钢笔”就以GB命名。</p>
<p>　　4、避免使用难以交流和区别的字符。</p>
<p>　　文字代表了中华民族博大精深的文化，拼音更被誉为世界上最复杂的字符之一。如果单纯通过拼音字母，如G和J，很大部分人会因为不标准的发音而难以进行区分。另外，字母L的小写打印出来以后和数字1没有区别，O打印出来后和数字0没有区别等等。我们在制定编码规则过程中，要尽量避免使用这些容易产生混淆的字符。</p>
<p>　　5、不要把可能变动的信息编入编码。</p>
<p>　　什么是可能变动的信息？举个最简单的例子，现在很多企业将员工编码规则定为：部门号+流水码。笔者认为这是最不合理的编码，员工如果发生人事变动或者岗位变换，编码就无法准确表述其所在部门。如果员工的人事和岗位变动频繁了，编码反而成为企业的困扰。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/5fltuh25yi.jpeg" alt="img"></p>
<p><strong>五、物料编码如何有效推行</strong></p>
<p>　　很多企业在花费了大量的人力、物力和财力制定出一套科学的、合乎企业实际情况的物料编码体系后，就像他们制定的其他厚厚的管理制度文件一样，被锁进了黑暗的文件柜中，仅仅在进行相关质量体系认证时拿出来使用。当然，有同行过来参观的时候，也会时常拿出来进行炫耀。</p>
<p>　　制定完善的物料编码规则只是物料编码工作的第一步。如何使制定的编码规则在企业内部真正得到推行，改善和解决技术、物管、财务等部门各自为政、多套编码并存、多种物料称谓混乱等企业管理问题，才是物料编码工作中最实质性的一步。有效推行企业的物料编码工作有两种途径：</p>
<p>　　1、实施软件管理系统</p>
<p>　　实施ERP等信息化软件系统，是在系统中固化物料编码，实现强制推行的最容易也最有效的方式。ERP系统会按照企业制定的物料编码规则，自动生成编码。ERP系统具备的便捷的查询、排序等功能，也可以让员工快速体验统一编码带来的效益，进而积极配合编码工作的执行。合理的编码规则结合ERP、PDM系统中的查询、排序功能，对于企业标准化工作的推行会起到直接的积极影响。</p>
<p>　　2、设定专人负责编码</p>
<p>　　如果企业尚不具备实施ERP、PDM等信息化系统的条件，要实现物料编码规则的贯彻执行，唯一的办法就是通过制定物料控制流程，设定专人控制物料编码。在流程的执行过程中，严格遵守物料编码唯一出口原则。</p>
<p>　　企业制定出来的物料编码规则得不到真正有效推行，究其原因，在推行组织机构的设定、物料编码流程的执行等方面一定有不到位的地方。因此设定专人负责物料，不失为有效地办法。</p>
<p><strong>附录：解析物料需求计划的概念和特点</strong></p>
<p> MRP是根据何时主生产计划表上需要物料来决定订货和生产,从理论上来看,是比较占优势的一种方法。</p>
<p><strong>物料需求计划的概念</strong></p>
<p>　　物料是一个广义的概念,它不仅仅指原材料而言,而是包含原材料、自制品(零部件)、成品、外购件和服务件(备品备件)这个更大范围的物料。因此,这是一个广义的物料。对于各种物料的管理并非仅仅是对物料的库存管理,而是包括建立科学的、系统的物料需求计划;协调和控制各部门适当数量的物料。在物料管理中,一方面要满足生产过程中的物料的充分供应,保证生产过程的连续进行而不发生中断;另一方面又要控制物料储备量的限度,减少所占用的流动资金,加速资金周转,降低产品成本。我们已经了解物料管理中的订货点方法是根据需要量,提前期和安全库存来维护需求而决定何时订货。物料管理中另一种方法是物料需求计划方法。</p>
<p>　　物料需求计划MRP(Material Requirements Planning)是60年代在美国出现,70年代发展起来的一种管理技术和方法。MRP是根据何时主生产计划表上需要物料来决定订货和生产,从理论上来看,是比较占优势的一种方法。但是,在计算机应用之前,人工需用6～13个星期计算物料需要量,因此也只能按季度订货,这样的话,MRP方法也不见得比订货点方法优越。然而,应用计算机之后,情况就大不同了,计算物料需求量的时间被缩短至1～2天,订货日期短、订货过程快,可以由每季订货改为每月。因此,MRP成为人们公认的物料管理的好方法。随着计算机计算能力的增强,许多企业每个星期重新研究订货量,这种根据实际情况进行计算的能力使订货期缩短为每个星期。这样,物料的”需求期”更加明确,经过了大约十年,人们渐渐感觉到订货必须按照主生产计划才能更有效。人们逐渐地认识到,主生产计划应该是代表工厂中真正能生产的物料,才能保证物料需求计划中计算出有用的需求日期。如果主生产计划表上有许多不可能生产的物料或者因为原料缺乏而不能进行制造的物料,MRP便不能发挥作用了。然而,根据缺料情况计算出来的缺料表确是一个实用的MRP。因此,也就有了所谓的优先计划。</p>
<p>　　缺料表的理论是基本而实用的。从主生产计划上可以了解工厂将要生产什么,然后从物料清单查出所要的物料,根据所要的物料查核物料库存量,列出一张缺料表。</p>
<p>　　如果使用计算机进行以上工作,把主生产计划输入至计算机中,物料清单和库存量分别储存在<a href="https://cloud.tencent.com/solution/database?from=10680">数据库</a>中,经过计算机计算,便可以输出一份完整的物料需求计划了。物料需求计划方法克服了许多缺料表使用上的难题:计划的期限能延伸至1～2年,计划的周期可以每周、每天或者是随机的;计划变动的修改方便灵活。在制造业里,缺料表才是真正的计划系统。人们可以预测未来一年里会有什么物料短缺。虽然主生产计划表还是会有改变,但是物料需求计划有可能跟着改变,解决未来的物料短缺不是等到短缺发生后再进行,而是事先根据MRP的计算而产生一份计划表了,这样就降低了库存量,压缩库存资金,降低成本。</p>
<p>　　计算机使物料需求计划成为一个可行的系统,这个系统的基本逻辑是:</p>
<p>　　我们将制造什么?(按主生产计划制造)；</p>
<p>　　用什么东西来制造?(根据物料清单)；</p>
<p>　　我们具备些什么?(库存)；</p>
<p>　　我们还需要些什么?(生产计划和采购计划)；</p>
<p>　　MRP的基本原理是:根据需求和预测来测定未来物料供应和生产计划与控制的方法。它提供了物料需求的准确时间和数量。</p>
<p>　　并非所有的不使用订货点方法的物料管理都是属于MRP系统,因为MRP系统并不是仅仅代替订货点方法开订单的库存管理系统,而是一种能提供物料计划及控制库存,决定订货优先度,根据产品的需求自动地推导出构成这些产品的零件与材料的需求量,由产品的交货期展开成零部件的生产进度日程和原材料与外购件的需求日期,即将生产计划转换为物料需求表,并能为能力需求计划提供信息的系统。应用MRP系统必须要决定物料的毛需求量和净需求量,可先将物料的毛需求量转化为净需求量,从而进行毛需求量的净化过程,然后根据净需求量和需求时间预先排定订单,以便事先了解缺料情况。</p>
<p>　　使用MRP系统对于已经具有一定生产能力的工厂来说,可以借助系统掌握在已知生产能力情况下能生产些什么;对于已经具有已定主生产计划的工厂来说,可以借助系统明确应生产些什么。MRP系统不仅给出订单数量,而且特别强调需要的时间,因此,系统的输出可以作为采购,生产等工厂中各项管理的输入,它是各项管理的基础。</p>
<p><strong>物料需求计划的特点</strong></p>
<p>　　When、What、How many几个词代表了物料需求计划MRP的精华所在,意思是什么时间、需要什么和需要多少。它们不仅从数量上解决了缺料问题,更重要的是从时间上来解决缺料问题,因此,物料信息的时间阶段化是MRP的主要特点,划分物料信息时间界面称为时间阶段化。</p>
<p>　　在以往的物料管理中,使用台帐或货卡来登录各种物料信息,物料的情况可以用以下公式来计算: X&#x3D;A+B-C</p>
<p>　　式中:A表示现有库存</p>
<p>　　B表示计划收到</p>
<p>　　C表示需求量</p>
<p>　　X表示可用数量</p>
<p>　　其中计划收到B为已订购数量,需求量C可根据如下情况而定,若是成品可通过客户订单和产品结构的用料消耗计算而得,若是备品备件可通过预测而得。假设现有库存为30,计划收到为50,需求量为65,根据计算可以得到可用数量为15。假设现有库存为30,计划收到为25,需求量为65,根据计算可以得到可用数量为-10。</p>
<p>　　A—现有库存 30或</p>
<p>　　B—计划收到 50或</p>
<p>　　C—需求量 65或</p>
<p>　　X—可用数量 15 -10</p>
<p>　　当可用数量X为正值时,说明此物料不需订货;反之,当可用数量X为负值时,说明此种物料库存量不足,应进行订货。以上方法解决了需要什么物料和需要多少物料的问题,即解决了What和How many,至于什么时间需要,是否一次订货还是分期订货,什么时间到货,何时可能断档,何时订货,物料何时发放等许多围绕着时间而提出的问题,则只能凭管理人员的经验估计和推测。</p>
<p>　　时间阶段化的物料管理与非时间阶段化的物料管理在信息需求,信息处理以及信息存贮方面都有很大的差异。对于同一物料信息,相比之下,时间阶段化物料信息量多,这是由于非时间阶段化只有数量的更新而无时间更新,而时间阶段化有数量更新,还有时间更新,因而信息处理工作量大,而且需要及时,并且采用人工方法处理不能适应要求,只有采用计算机来进行处理。这也就是物料需求计划MRP的实现必然依赖于计算机的道理。</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>评估类别、评估类和评估类型</title>
    <url>/2022/06/30/%E8%AF%84%E4%BC%B0%E7%B1%BB%E5%88%AB%E3%80%81%E8%AF%84%E4%BC%B0%E7%B1%BB%E5%92%8C%E8%AF%84%E4%BC%B0%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<h2 id="评估类别（Valuation-Category）"><a href="#评估类别（Valuation-Category）" class="headerlink" title="评估类别（Valuation Category）"></a>评估类别（Valuation Category）</h2><p>  Determines whether stocks of the material are valuated together or separately.</p>
<p>  In the case of split valuation, this indicator also determines which valuation types are allowed, that is, the criteria by which stocks can be valuated.</p>
<p><strong>评估类别，决定物料评估要评估到多细，例如：</strong></p>
<p>  1）个别计价法一般用X按批次进行评估；</p>
<p>  2）同时有自制和外购的可以用B单独创建自制和外购的评估类型作为评估的最低维度区分自制和外购的成本；</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/word-image-52.png" alt="评估类别、评估类和评估类型"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/word-image-53.png" alt="评估类别、评估类和评估类型"></p>
<h2 id="评估类（Valuation-Class）"><a href="#评估类（Valuation-Class）" class="headerlink" title="评估类（Valuation Class）"></a>评估类（Valuation Class）</h2><p>  The valuation class has the following functions:</p>
<ul>
<li>Allows the stock values of materials of the same material type to be posted to different G&#x2F;L accounts.</li>
<li>Allows the stock values of materials of different material types to be posted to the same G&#x2F;L account.</li>
<li>Determines together with other factors the G&#x2F;L accounts updated for a valuation-relevant transaction (such as a goods movement).</li>
</ul>
<p><strong>评估类，对物料记账按会计科目进行大的分类，例如材料、半成品、成品、商品、周转材料、低值易耗品，评估类在OBYC中结合评估更改和具体的MM业务就能确定对应物料对应业务的<a href="https://www.gavindong.com/special/sap-fico">SAP FICO</a>唯一记账科目。</strong></p>
<p><strong>评估更改和评估类的分配关系见OMWC配置，相当于给评估类再做了一个归类，这样OBYC配置的时候同一个评估类和不同评估更改的组合、对于同一种业务就能记账到不同的科目，一般可以用工厂代码作为评估更改（例如：不同工厂下相同属性的材料相同的业务想记账到不同的会计科目，业务不复杂的公司一般用默认交付的0001再组合评估类就够用了，这里如果分的很细，OBYC的配置就几何级增加）。</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/word-image-54.png" alt="评估类别、评估类和评估类型"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/word-image-55.png" alt="评估类别、评估类和评估类型"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/word-image-56.png" alt="评估类别、评估类和评估类型"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/word-image-57.png" alt="评估类别、评估类和评估类型"></p>
<h2 id="评估类型（Valuation-Type）"><a href="#评估类型（Valuation-Type）" class="headerlink" title="评估类型（Valuation Type）"></a>评估类型（Valuation Type）</h2><p>  Uniquely identifies stocks of a material that are subject to split valuation.</p>
<p>  If a material is valuated by origin (for example, valuation category H), you can define the possible countries of origin as valuation types.</p>
<p>  The valuation category defines the valuation types allowed for a material.</p>
<p><strong>评估类型，被评估的具体对象，例如自定义类型（自制、外购、捐赠获得等）、批次号等，其值的范围由评估类别的配置决定。</strong></p>
<p><strong>如果评估类别维护的是X，则评估类型就是批次号，即个别计价法，每个批次的价格都可以不同，CKM3N分析的时候也能到批次。</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/word-image-58.png" alt="评估类别、评估类和评估类型"></p>
<p>当然，如果同一物料既有自制又有外购，可以用评估类别B并在中维护好固定的评估类型，然后物料主数据分别创建对应的评估类型，采购入库和工单入库时就会更新不同的视图，有利于区分自制和外购的成本。</p>
<p>  在SPRO中创建的Valuation Type称为Global Types。</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/word-image-59.png" alt="评估类别、评估类和评估类型"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/word-image-60.png" alt="评估类别、评估类和评估类型"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/word-image-61.png" alt="评估类别、评估类和评估类型"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/word-image-62.png" alt="评估类别、评估类和评估类型"></p>
<p>SAP系统中的物料异动记账规则是可以根据需要进行很灵活的配置的，具体要看企业的实际业务，太细了势必会造成管理成本的上升，太粗了又无法提升管理质量。采取什么样的管理方式，要综合考虑企业的管理水平、风控要求、后续扩展性要求。</p>
<hr>
<p><strong>综上所述：评估类别和评估类型决定了物料的批次分割。评估类只是确定物料进财务的那个科目。</strong></p>
<p><strong>评估类的进一步解释：</strong></p>
<p>评估类是用来确定物料各种不同交易时记入哪个科目的，评估类和物料的移动类型中的科目修改一起确定会计科目，说白了，评估类是物料的科目确定标志码，评估类+科目修改得到会计科目。</p>
<p>想设置多少个评估类最好先看看企业的报表，比如，将劳保和办公用品物料都对应到备品备件3007，物料消耗时和一般的备品备件都对应到物料消耗-备品备件科目，结果企业需要统计劳保和办工用品，系统虽然还提供了物料组区分劳保和办公用品，也即使说物料消耗-备品备件科目+物料组依旧可区分出当期的劳保消耗和办公用品消耗，但是用户认为没有直接走科目直观，并且物料消耗-备品备件是需要考核的，所以最好还是新增劳保和办公用品两个评估类，直接对应到劳保费和办公费科目。</p>
<p>财务人员当然更喜欢直接从科目上直接进行报表分析.</p>
]]></content>
      <categories>
        <category>SAP</category>
      </categories>
      <tags>
        <tag>SAP</tag>
      </tags>
  </entry>
  <entry>
    <title>记致远OA线程堵塞遇坑</title>
    <url>/2022/06/16/%E8%AE%B0%E8%87%B4%E8%BF%9COA%E5%A0%B5%E5%A1%9E%E9%81%87%E5%9D%91/</url>
    <content><![CDATA[<h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>在2022年6月15号下午左右，致远OA开始出现点击提交到下一个节点后，下一个节点无法接收待办的情况；同时出现无法正常回写底表问题；同时在OA回传SAP状态，回写SAP数据等情况都不会触发DEE任务。</p>
<h2 id="问题查找"><a href="#问题查找" class="headerlink" title="问题查找"></a>问题查找</h2><p>1、在6月15号下午，以为是数据库内存占用过大的问题，通过查询发现数据库内存占用超过90%，在重启数据库并新增内存资源后，数据库使用占比降低。但是在重启后问题依然存在。这个时候只能手工推送SAP单据</p>
<p>2、6月16号上午，反馈致远研发，研发在看log日志后判断是迈锐思插件（费控）问题，然后找迈锐思客服打上了补丁，但是打完补丁重启OA服务器以后，该问题依然存在。</p>
<p>3、继续反馈致远研发查找问题，发现是在节点跳转的时候有问题，导致所有合并节点的操作都挂掉了，导致了无法接受待办问题。</p>
<p>4、然后继续查，发现其实是环境问题，由于线程堵塞导致所有的操作均会卡掉，具体的原因如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220616191133868.png" alt="image-20220616191133868"></p>
<p>通过这个界面，可以看出来，由于这个插件导致一直未响应堵塞，导致堆栈无法释放。</p>
<p>5、找到真正原因后，把这个自开发插件停用掉，重启服务，恢复。</p>
<h2 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h2><p>1、以后再遇到这种问题，首先要先去system中查看系统监控</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220616191402865.png" alt="image-20220616191402865"></p>
<p>2、如果监控有问题，具体的排错是在</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/image-20220616191502501.png" alt="image-20220616191502501"></p>
<p>点进去，就能看到所有的堵塞的线程情况，进一步进行排错。</p>
]]></content>
      <categories>
        <category>致远OA</category>
      </categories>
      <tags>
        <tag>致远OA</tag>
      </tags>
  </entry>
  <entry>
    <title>致远OA遇坑记录</title>
    <url>/2022/05/20/%E8%87%B4%E8%BF%9COA%E9%81%87%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="数据源问题"><a href="#数据源问题" class="headerlink" title="数据源问题"></a>数据源问题</h2><p>1、数据源这里如果配置OA数据源，必须要点OA元数据，不然不会出现OA元数据的各个表单，只会出现OA数据库中的各个数据表。</p>
<p><strong>如果数据源更换，Dee任务中的查询链接可能失效，需要重新修改保存重置链接。</strong></p>
<p>2、数据源配置外部数据库需要注意数据库的权限，不然可能会出现只能查询出前50条的情况，这个在链接SCC数据库中的遇到过。</p>
<h2 id="常用OA数据库表"><a href="#常用OA数据库表" class="headerlink" title="常用OA数据库表"></a>常用OA数据库表</h2><p>COL_SUMMARY:流程表，主要记录了表单的发起日期、结束日期、标题、发起人等信息。object_id 和 CTP_AFFAIR表中的id匹配。<br>CTP_AFFAIR:审批记录表，主要记录表单中所有的发起人、审批人、审批权限、接受日期、处理日期等。<br>ORG_MEMBER:人员表<br>ORG_UNIT:部门表<br>FORM_DEFINITION:模板表<br>CAP_FORM_DEFINITION:CAP4模板表，一般来说和上一张表一块用，一个是CAP3的，一个是CAP4的。<br>COL_COMMENT:审批意见表</p>
<h2 id="DEE任务"><a href="#DEE任务" class="headerlink" title="DEE任务"></a>DEE任务</h2><p><strong>1、在接收SAP任务回传时要主要看SAP接口是表还是结构，选择相对应的映射模块。</strong></p>
<p><strong>2、Dee将接口传来的json解析为xml代码</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import static net.sf.json.JSONArray.fromObject;</span><br><span class="line">import static net.sf.json.JSONSerializer.toJSON;</span><br><span class="line">import net.sf.json.JSON;</span><br><span class="line">import net.sf.json.JSONObject;</span><br><span class="line">import net.sf.json.xml.XMLSerializer;</span><br><span class="line"></span><br><span class="line">Object data = document.getContext().getParameters().getValue(&quot;data&quot;);</span><br><span class="line">JSON json = toJSON(data);</span><br><span class="line">XMLSerializer serializer = new XMLSerializer();</span><br><span class="line">serializer.setTypeHintsEnabled(false);</span><br><span class="line">serializer.setObjectName(&quot;root&quot;);</span><br><span class="line">serializer.setElementName(&quot;row&quot;);</span><br><span class="line">String xml = serializer.write(json);</span><br><span class="line">createDocByXml(xml);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>3、Dee将json解析为xml代码并按照部分字段排序：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import static net.sf.json.JSONSerializer.toJSON;</span><br><span class="line"></span><br><span class="line">import java.util.Comparator;</span><br><span class="line"></span><br><span class="line">import net.sf.json.JSONArray;</span><br><span class="line">import net.sf.json.JSONObject;</span><br><span class="line">import net.sf.json.xml.XMLSerializer;</span><br><span class="line">Object data = document.getContext().getParameters().getValue(&quot;data&quot;);</span><br><span class="line"></span><br><span class="line">JSONObject json = (JSONObject) toJSON(data);</span><br><span class="line">JSONArray intab = json.getJSONArray(&quot;intab&quot;);</span><br><span class="line"></span><br><span class="line">// 按posnr数字从小到大对intab排序</span><br><span class="line">intab.sort(new Comparator&lt;JSONObject&gt;() &#123;</span><br><span class="line">	public int compare(JSONObject o1, JSONObject o2) &#123;</span><br><span class="line">		return o1.optInt(&quot;posnr&quot;) - o2.optInt(&quot;posnr&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">XMLSerializer serializer = new XMLSerializer();</span><br><span class="line"></span><br><span class="line">serializer.setTypeHintsEnabled(false);</span><br><span class="line">serializer.setObjectName(&quot;root&quot;);</span><br><span class="line">serializer.setElementName(&quot;row&quot;);</span><br><span class="line"></span><br><span class="line">String xml = serializer.write(json);</span><br><span class="line"></span><br><span class="line">createDocByXml(xml);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>4、Dee调用Dee任务代码</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line">import com.seeyon.v3x.dee.Parameters;</span><br><span class="line">import com.seeyon.v3x.dee.Document;</span><br><span class="line">import com.seeyon.v3x.dee.TransformException;</span><br><span class="line">import com.seeyon.v3x.dee.TransformFactory;</span><br><span class="line">import com.seeyon.v3x.dee.adapter.Adapter;</span><br><span class="line">import com.seeyon.v3x.dee.resource.DbDataSource;</span><br><span class="line">import com.seeyon.v3x.dee.util.DocumentUtil;</span><br><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.PreparedStatement;</span><br><span class="line">import java.sql.ResultSet;</span><br><span class="line">import java.sql.SQLException;</span><br><span class="line">import java.sql.ResultSetMetaData;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Iterator;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import java.sql.Statement;</span><br><span class="line">import java.io.File;</span><br><span class="line">import org.dom4j.DocumentException;</span><br><span class="line">import com.seeyon.v3x.dee.Document.Element;</span><br><span class="line">import com.seeyon.v3x.dee.datasource.XMLDataSource;</span><br><span class="line">import com.seeyon.v3x.dee.DEEClient;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> Document  doc = formDataToDoc();</span><br><span class="line">Element root = doc.getRootElement();</span><br><span class="line">// 主表</span><br><span class="line">Element table = getChildByName(root,&quot;formmain_3647&quot;);</span><br><span class="line">Element row = getChildByName(table,&quot;row&quot;);</span><br><span class="line">Element shuzhi = row.getChild(&quot;field0074&quot;);</span><br><span class="line">Element shuzhi1 = row.getChild(&quot;field0060&quot;);</span><br><span class="line">Element fkzt = row.getChild(&quot;field0077&quot;);</span><br><span class="line">Object a=getElementValue(shuzhi);</span><br><span class="line">Object b=getElementValue(shuzhi1);</span><br><span class="line">Object fkzt1 = getElementValue(fkzt);</span><br><span class="line">double c=Double.parseDouble(b.toString());</span><br><span class="line">println(a);</span><br><span class="line">DEEClient deeClient = new DEEClient();</span><br><span class="line">Parameters parameters = doc.getContext().getParameters();</span><br><span class="line"></span><br><span class="line">if(a.equals(&quot;1&quot;)&amp;&amp;c&gt;0.00 &amp;&amp; fkzt1.equals(&#x27;01&#x27;))&#123;</span><br><span class="line">//银企费用报销费用审核-处理前</span><br><span class="line">deeClient.execute(&quot;-6384030398507104060&quot;,parameters);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">deeClient.execute(&quot;9192960576302960201&quot;,parameters);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>5、主机异常关闭导致Dee所有调用任务失败</strong></p>
<p>现象是：重启A8进程后，所有的dee任务都失效，前台体现是任务监控是空，任务管理是空。</p>
<p>主要原因是：关闭A8进程后，dee.mv.db没有正常shutdown，导致进程堵塞。</p>
<p>解决办法是关闭对应的进程，或者直接重启服务器释放所有进程。</p>
<p><strong>6、OA服务器链接不上数据库问题</strong></p>
<p>因为我们的OA服务器与数据库是分离的，所以在A8进程启动时会首先校验数据源，这就导致在某些情况下会出现链接不到数据库的情况，主要情况如下：</p>
<p>链接数据源超时。。。。（类似的控制台打印）</p>
<p>解决此问题的方法：在数据库服务器中执行：netsh Winsock reset</p>
<p>就是重置数据库服务器的所有基础网络，通过重置网络就可以恢复OA服务器 与数据库的链接。</p>
<p><strong>7、跳号问题（怀疑是致远OA的bug）</strong></p>
<p>跳号问题的表现原因是：比如在付款申请单中，发起一张单据，流水号在前台显示00001，但是审批结束后流水号实际就成了00002，出现了跳号。</p>
<p>解决办法1：打补丁，截至2022-01-08还没有打上。</p>
<p>解决办法2：改变流水号设置地方，出现这个问题主要是流水号利用公式写在表单上。改变流水号到操作设置里即可解决此问题。</p>
<p><strong>8、Dee任务新增搜索</strong></p>
<p>Dee任务搜索主要是靠后台搜索，所以需要拿到搜索框里的数据再去调用Dee任务去拿到搜索后的数据（后台搜索）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import com.alibaba.fastjson.JSONArray;</span><br><span class="line">import com.alibaba.fastjson.JSONObject;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import net.sf.json.JSON;</span><br><span class="line">import net.sf.json.JSONObject;</span><br><span class="line">Object json = getParaByName(document,&quot;cap4_magic_condition&quot;);</span><br><span class="line">//截取字符串</span><br><span class="line">Object data = document.getContext().getParameters().getValue(&quot;cap4_magic_condition&quot;);</span><br><span class="line">if(data != null)&#123;</span><br><span class="line">  String name = null;</span><br><span class="line">  String meins = null;</span><br><span class="line">  for (int i = 0;i&lt; data.size();i++)&#123;</span><br><span class="line">     HashMap&lt;String,String&gt; dataMap = (HashMap&lt;String, String&gt;) data.get(i);</span><br><span class="line">     namekey = dataMap.get(&quot;fieldName&quot;);</span><br><span class="line">     name = dataMap.get(&quot;fieldValue&quot;);</span><br><span class="line">    if(namekey == &quot;NAME1&quot;)&#123;</span><br><span class="line">     setParam(document, &quot;NAME1&quot;, name);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    System.out.println(name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>主要是利用cap4_magic_condition的这个字段，然后还需要根据这个字段拿到的搜索数据进行参数的增加。</p>
<p><strong>9、外部系统请求致远OA写入文件接口</strong></p>
<p>首先参照致远开放平台文件上传接口：<a href="http://open.seeyon.com/book/ctp/restjie-kou/wen-dang-fu-wu-guan-li.html">http://open.seeyon.com/book/ctp/restjie-kou/wen-dang-fu-wu-guan-li.html</a></p>
<p>然后根据文档要求请求token，这里的token是需要绑定用户的，所以：具体请求token的参数里还需要加上loginName，如图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220722160222.png" alt="20220722160222"></p>
<p>请求完成以后，根据文档要求上传file，这里要注意的是postman请求的地址需要是它允许上传的路径，具体的配置在：file-&gt;settings-&gt;working directory里面。</p>
<p>具体的请求界面：<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220722160136.png" alt="20220722160136"></p>
<p>请求完成以后，可以在CTP_FILE表中查看具体的上传文件id，这里要区分下CTP_ATTACHMENT表的区别，后面这个只是单纯的附件表，前面的是所有上传文件都在CTP_FILE表中，其中CTP_FILE表相当于包含CTP_ATTACHEMENT表的内容。</p>
]]></content>
      <categories>
        <category>致远OA</category>
      </categories>
      <tags>
        <tag>致远OA</tag>
      </tags>
  </entry>
  <entry>
    <title>记致远OA系统DEE挂掉遇坑</title>
    <url>/2022/08/08/%E8%AE%B0%E8%87%B4%E8%BF%9COA%E7%B3%BB%E7%BB%9FDEE%E6%8C%82%E6%8E%89%E9%81%87%E5%9D%91/</url>
    <content><![CDATA[<h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>在2022年8月7号下午左右，致远OA所有任务调用都出现问题，所有的任务都出现操作异常的弹窗。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220808155648.png" alt="20220808155648"></p>
<h2 id="问题查找"><a href="#问题查找" class="headerlink" title="问题查找"></a>问题查找</h2><p>1、尝试重启致远主服务、重启物理机均无效</p>
<p>2、查看线程日志发现是所有的dee任务都在运行中，如下所示：<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220808155803.png" alt="20220808155803"></p>
<p>3、通过咨询致远代老师，拿到了解决方案，有3种方案：<br>方案一：<br>1、停止OA服务<br>2、将A8\base\dee\data下除了dee.mv.db或dee.h2.db外的，其他2个文件（dee.trace.db、dee.lock.db）删除<br>3、删除A8\base\dee\history下所有文件（没有history文件夹则不用管这个）<br>4、重启OA，连接上dee数据库</p>
<p>备注：集群OA的话每个节点需要做一次上面的操作</p>
<p>方案二：<br>如果上述操作后还是看不到dee控制台的数据，则按如下操作：<br>1、停止OA服务<br>2、备份A8\base\dee\data文件夹，比如改名data为data-bak<br>3、新建一个名为data的空文件夹<br>4、删除A8\base\dee\history下所有文件（没有history文件夹则不用管这个）<br>5、重启OA<br>6、在A8\base\dee\drpHistory下找到日期最近的drp文件（2020-12-10.drp），在dee控制台部署一下即可</p>
<p>备注：集群OA的话每个节点需要做一次上面的操作</p>
<p>方案三：<br>如果上述操作后还不行，则如下操作：<br>1、如果有自己备份drp，或则有dee工具（包含所有OA的dee任务，则导出OA里的任务为drp包）<br>2、停止OA服务<br>3、备份A8\base\dee\data文件夹，比如改名data为data-bak<br>4、新建一个名为data的空文件夹<br>5、删除A8\base\dee\history下所有文件（没有history文件夹则不用管这个）<br>6、重启OA<br>7、导入drp即可</p>
<p>备注：集群OA的话每个节点需要做一次上面的操作</p>
<p>4、通过测试，方案二解决问题，但是所有的任务全部失效，从dee平台中重新导出一份到OA解决问题。</p>
<h2 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h2><p>1、dee插件在致远系统中的数据库是H2内存数据库，猜测由于没有正常停用服务进程导致H2数据库没有正常释放导致此问题。</p>
<p>2、官方反馈原因<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/ce47ecc297f7f5c4e035e32b08fe219.png" alt="ce47ecc297f7f5c4e035e32b08fe219"></p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/ae78b02e0154845397879b58741ccda.png" alt="ae78b02e0154845397879b58741ccda"></p>
<p>他的意思是， DEE数据库是H2. 是这个数据库的弊端。 如果连接比较频繁，容易造成卡死。一般重启服务是能解决的。总体来说，是DEE本身数据库的弊端</p>
<p>7.1版本，日志是在在同一个数据库文件中dee.mv.db，高并发会出现线程中断，导致文件受损以至于dee任务无法执行；8.1新的版本，dee做了改良，把日志记录的数据给剥离出来了，放到另外的一个数据库文件中，his_mv.db中，能保证dee任务正常使用；</p>
<p>解决方案就是代老师给的三个解决办法。然后把定时器关了，防止有频繁的连接。</p>
]]></content>
      <categories>
        <category>致远OA</category>
      </categories>
      <tags>
        <tag>致远OA</tag>
      </tags>
  </entry>
  <entry>
    <title>财务业务学习</title>
    <url>/2022/08/14/%E8%B4%A2%E5%8A%A1%E4%B8%9A%E5%8A%A1%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<h3 id="财务业务流程"><a href="#财务业务流程" class="headerlink" title="财务业务流程"></a>财务业务流程</h3><p>1、 一般来说在SAP里财务分为2大类，一个是财务会计FI，一个是成本会计CO。我们根据这2个方面来。<br>FI:<br>主要包含4部分，总账GL,应收AR,应付AP,资产AM。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220814090927.png" alt="20220814090927"><br>主要模块<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220814091245.png" alt="20220814091245"><br>业财一体<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220814091318.png" alt="20220814091318"></p>
<p>2、借贷关系<br>采购流程的借贷关系<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220814091401.png" alt="20220814091401"></p>
<p>生产流程借贷关系<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220814091549.png" alt="20220814091549"></p>
<p>销售流程借贷关系<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220814091607.png" alt="20220814091607"></p>
<hr>
<h3 id="财务业务报表"><a href="#财务业务报表" class="headerlink" title="财务业务报表"></a>财务业务报表</h3><p>ZFI030:ZLYD财务管理报表<br>ZFI013:轧辊管理明细<br>ZFI007:往来余额：供应商、客户、员工余额表<br>ZFI006:XMD科目余额三栏账<br>FAGLL03H:总账科目预览</p>
]]></content>
      <categories>
        <category>业务学习</category>
      </categories>
      <tags>
        <tag>业务学习</tag>
      </tags>
  </entry>
  <entry>
    <title>销售业务学习</title>
    <url>/2022/08/13/%E9%94%80%E5%94%AE%E4%B8%9A%E5%8A%A1%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<h3 id="销售业务流程"><a href="#销售业务流程" class="headerlink" title="销售业务流程"></a>销售业务流程</h3><p>1、客户主数据维护</p>
<p>由客服专员利用OCR工具将开票信息或者营业执照转换成文本进行整理核对后导入SAP系统，若客户为一般纳税人，则在SAP系统中经过天眼查验证，再完成SAP系统内创建过程，最后将客户基础信息下发至MDM系统，并存储MDM系统返回的BP编码；若客户非一般纳税人，将客户身份证号作为税号录入到SAP中，经SAP系统税号唯一性验证后，将客户基础信息下发至MDM系统，并存储MDM系统返回的BP编码；当客户信息变更时，客服专员在SAP系统内完成客户信息修改，并将客户全部基础信息下发至MDM系统的过程。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220813172416.png" alt="20220813172416"></p>
<p>2、价格主数据维护</p>
<p>实现本月结算合同的结算以及下月结算合同指导价在SAP系统中的应用，需要销售专员在每月25日与原料采购专员确定本月邯邢价格及优惠政策后，按照SAP价格表模板在线下完成《LY结算价格表》与《SX结算价格表》的制作，经过销售经理、销售总监线下审核后，由销售专员将结算价格表录入到SAP中，首次导入后，销售专员后期的维护只需要将需要修改的引用到OA系统中完成修改后发起审批流程，审批通过后SAP价格生效的流程。</p>
<p>使用VK11或者ZSD020A进行批导<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220813172753.png" alt="20220813172753"></p>
<p>3、原料备货申请<br>每月末根据当前运营库存和销售订单量，制定出下月的原料总需求，由销售专员在OA发起原料备货申请，经销售经理审批、原料采购专员确认后，自动将表单内容同步到SAP原料备货申请模块的过程；每月中随时产生原料变更与新需求时，销售专员在OA发起原料备货申请，对原先原料备货申请进行变更以及对新增原料需求申请的流程。</p>
<p>OA发起备货申请-&gt; MM采购计划。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220813173049.png" alt="20220813173049"></p>
<p>4、销售合同制作&#x2F;修改<br>由客服专员在SAP中创建（或修改）并打印销售合同，并与客户完成销售合同签字盖章确认后，客服专员在SAP内提交销售合同，系统自动生成OA销售合同审批流程，经销售经理、销售总监、结算管理会计在OA系统审批完成后，销售合同在SAP内开始生效，客服专员将纸质合同进行存档的流程。<br>ZSD001<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220813173339.png" alt="20220813173339"></p>
<p>OA销售合同<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220813173534.png" alt="20220813173534"></p>
<p>5、欠款质押发货额度申请<br>客户提出需要使用欠款&#x2F;质押手续进行发货时，销售专员与客户对接，客户来我司签订欠款证明，销售专员将纸质欠款证明提交至各级审批人的同时，在SAP中进行欠款额度的维护，线上线下同步催办审批，经过销售总监、经营副总、总经理、董事长、结算管理会计审批完成在OA中同步通知财务总监后，欠款额度在SAP中生效的流程。<br>ZSD003<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220813175110.png" alt="20220813175110"><br>OA单据<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220813175136.png" alt="20220813175136"></p>
<p>6、分货流程<br>客服专员通过SAP对已产出成品不能按照正常订单进行分货，或者是无订单排产导致的合同号不存在的库存进行分货的业务，需要客服专员在SAP系统中将合同号匹配标注进行分货，合同号标注完成后通过客户微信提货群将每个客户的分货明细发至客户的流程。<br>ZSD002&#x2F;ZSD002A 创建发货单<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220813175351.png" alt="20220813175351"></p>
<p>7、发货<br>客服专员通过微信接收客户的提货需求时，客户进行货款打款后将电子回单发至客服专员，客服专员在SAP系统中进行货款确认后制作发货订单，将客户需提的货物引入进发货订单并进行保存的同时，SAP系统对货款进行检查，若发生使用定金、质押、欠款进行发货时，发货订单需结算管理会计进行审核。发货订单保存并审核通过后，客服专员在发货订单中填入运输车辆车号进行发货的流程。<br>ZSD005，根据ZSD002中创建的发货单，推送OA审批<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220813180254.png" alt="20220813180254"><br>OA单据<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220813180358.png" alt="20220813180358"></p>
<p>8、出库<br>客服专员在发货订单中填入车号后，司机入厂后由装车组进行货物的称重与装车，称重过程中若重量与标签重量不符，则由保管在SAP系统中进行重量的修改，轧机生产人员打印标签后替换原标签；若标签规格与PDA货物规格不符，则由品管员打印标签并替换原标签。更改重量后由客服专员在原发货订单中重新引入货物信息，装车完成后司机出厂过磅，若磅差超出合理范围则司机需返回车间再次复称后进行出厂过磅，过磅完成后由门岗使用PDA进行扫码对货物进行核验，核验信息无误后司机完成发货出厂的流程。<br>主要是在ECP系统中跑流程，主要流程：<br>扫码登记进厂过磅-&gt;ECP记录空车毛重-&gt;PDA接受销售发货单-&gt;货物复称-&gt;核对信息-&gt;装车，PDA扫码提交-&gt;出厂过磅-&gt;核对磅差-&gt;PDA扫码并打印出门证-&gt;（协议车辆）收货工厂保管在出门证签字确认，司机拍照上传小程序-&gt;自动确认收入-&gt;结束。</p>
<p>9、销售补差<br>销售部某合同执行完成后，在发票开具前因在业务执行中产生的小卷优惠、购货优惠、质量异议、酸洗加工补料、酸洗运费结算、返利、降级品优惠、结算指导价调整、特殊优惠等需要对客户账户返款或扣款时，销售专员或客服专员需要在SAP系统中创建借贷项订单，经过销售经理、销售总监、经营副总、总经理、结算管理会计审核后，在系统内实现对客户账户余额在系统账中进行调整的流程。<br>ZSD009:政策补差&#x2F;ZSD010:其他补差<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220813181217.png" alt="20220813181217"><br>OA单据<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220813181311.png" alt="20220813181311"></p>
<p>10、发票开具<br>营销中心销售部销售合同执行结束后客服专员及销售专员在发起开票申请前先将开票资料：销售合同复印件、销售对账单、收货确认函、业务委托书准备完成，并完成结算对账单、收货确认函中客户的签字盖章。开票资料准备完成后交至税务会计进行审核，审核通过后客服或销售专员在SAP系统中发起开票申请的流程。<br>ZSD013:开票申请<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220813181624.png" alt="20220813181624"><br>ZSD032:开票申请<br>红票会推送OA系统，非红票直接审批，推送金税系统。</p>
<h3 id="销售业务其他流程"><a href="#销售业务其他流程" class="headerlink" title="销售业务其他流程"></a>销售业务其他流程</h3><p>1、冷硬客诉处理<br>2、红字发票开具<br>3、套筒押金退回<br>4、销售退货<br>5、虚拟退货<br>6、XX来料加工交货差异量付款<br>7、标签更改<br>8、销售部另用料销售<br>9、废料销售<br>10、外储调拨<br>11、销售运费付款<br>12、协议车辆保证金利息付款<br>13、运输事故处理<br>14、运输管理费收入<br>15、余款退回</p>
<h3 id="销售业务报表"><a href="#销售业务报表" class="headerlink" title="销售业务报表"></a>销售业务报表</h3><p>1、ZSD019:发货清单报表<br>2、ZSD023:信贷报表<br>3、ZSD027:销售补差报表<br>4、ZSD028:开票报表<br>5、ZSD030:合同报表<br>6、ZSD039:自行优惠报表，这个报表的主要作用是客户在本月已经提货，但是没有出结算价，并且没有进行补差的，应收会计根据这个表里的差值（已出的当月结算价）手工制作凭证冲减当月的销售收入，并在次月对该凭证进行冲销，走完补差流程，自动生成准确的收入凭证。<br>7、ZSD021:XMD销售定金报表<br>8、ZSD038:ZLYD销售定金管理报表<br>9、ZSD022:ZLYD利用XMD的地方进行的仓储操作，提供仓储服务，卷是别人家的卷，只提供场地进行存储；因为仓储业务采用了511移动类型的免费收货，所以在收货时并没有生成有效的入库凭证，所以需要创建借贷项订单，并根据借贷项订单开票。</p>
<p>ZSD022A:仓储入库，采用批导的方式进入，同时能查询到所有入库卷的信息（有无库存）。<br>ZSD022B:仓储货转，卷的所有人发生变化，操作卷的转入客户及转出客户。<br>ZSD022C:仓储提货，创建卷的提货单，并查看卷的费用情况，包括基本费用、超期费用、其他费用。<br>ZSD022D:仓储借贷项订单，付款后创建借贷项订单<br>ZSD022E:仓储开票，根据借贷项订单进行开票，并发送OA申请。</p>
<p>10、ZSD037:仓储库存表，查询XMD仓库里热卷的实时库存及仓储费用情况。<br>11、ZSD040:ZLYD销售补差报表，查询ZLYD补差明细。</p>
]]></content>
      <categories>
        <category>业务学习</category>
      </categories>
      <tags>
        <tag>业务学习</tag>
      </tags>
  </entry>
  <entry>
    <title>采购仓储业务学习</title>
    <url>/2022/08/02/%E9%87%87%E8%B4%AD%E4%BB%93%E5%82%A8%E4%B8%9A%E5%8A%A1%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<h3 id="采购业务流程"><a href="#采购业务流程" class="headerlink" title="采购业务流程"></a>采购业务流程</h3><p>通过交流学习，现在将XX公司采购业务流程记录如下：</p>
<p>对于主料的采购业务主要记录如下：</p>
<p>1、销售部门根据销售计划制定备货计划，通过OA表单制定备货计划，并回传SAP系统。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220802192443.png" alt="20220802192443"></p>
<p>2、在SAP系统中进行销售需求转采购计划的手动拆分，手动拆分完成后，点击审批，推送OA进行计划的审批。<br>ZMM003<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220802192652.png" alt="20220802192652"></p>
<p>3、OA审批完成后，推送SAP回传采购计划审批状态。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220802192730.png" alt="20220802192730"></p>
<p>4、在SAP中功能开发，直接查询出审批通过的采购计划转采购订单<br>ZMM005<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220802192841.png" alt="20220802192841"></p>
<p>5、点击创建PO后，自动跳转的创建采购订单界面，并录入表头，比如：合同号、交货日期、运输方式等。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220802192341.png" alt="20220802192341"></p>
<p>其中创建的PO的视图中，合同号、运输方式、采购组、仓库、合同数量、交货日期都是必填的，然后在计划转订单的明细行中，物料的指导价是自动带出来的。</p>
<p><code>这里引申除了另外一个情况：物料的指导价是怎么带出来的，其实是在ZMM009存在指导价格维护，维护完成后，就在物料的会计视图中新增月份的计划价格，这里就是带出来了物料的计划价格。</code></p>
<p>然后填写运费、短倒费等费用，点击保存，自动生成采购订单。</p>
<p><strong>在这里需要明确锁价和结算价2个价格的问题：<br>锁价：就是你采购或者销售当天的价格，比如你今天想买1斤桃子是5块钱，那么就锁定桃子的价格是5元，以后桃子价格的涨跌和你没有关系，开票也是5元。<br>结算价：结算价是你今天想买桃子，但是桃子的价格还没出来，可能在25号才能出来桃子的具体价格，那么你先按照5元&#x2F;斤的价格付款，商家正常给你供应桃子，已25号出来的价格来结算，如果出来的价格是4.5元&#x2F;斤，那么商家给你的开票价格就是4.5元。在系统中你入的价格是5元&#x2F;斤，然后再通过导入优惠项等方式调整发票金额至4.5元&#x2F;斤。</strong></p>
<hr>
<h3 id="采购到货入库流程"><a href="#采购到货入库流程" class="headerlink" title="采购到货入库流程"></a>采购到货入库流程</h3><p>采购到到货入库分为信息齐全和信息不齐全2种。<br>信息齐全：到货信息齐全的入库业务，客服专员在SAP系统ZMM007导入到货明细生成到货通知单，司机到厂扫码登记，领取到货任务，司机自动过磅称取毛重，原料班卸车后PDA输入库位并提交，司机自动过磅称取皮重，保卫班PDA提交出厂后，到货数据回传SAP系统自动过账入库。</p>
<p>信息不齐全：到货信息不全的入库业务，地磅员在ECP系统录入到货明细创建到货通知，司机过磅称取毛重，原料班卸车PDA输入库位并提交，司机过磅称取皮重，保卫班PDA提交出厂后，到货数据回传SAP系统，客服专员在SAP系统ZMM007关联采购订单后过账入库。</p>
<p>啥信息都没有的：地磅员在ECP系统中维护车号、卷号，推送到SAP，SAP在ZMM007维护界面中“维护采购订单”自动关联到货车号，并维护采购订单信息。</p>
<p>采购入库到货主要用ZMM007:采购到货平台，ZMM010:批量收货，migo标准功能<br>ZMM007：查询界面，主要查询所有的到货明细<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220803083153.png" alt="20220803083153"><br>ZMM007: 创建界面，主要是客服专员来导入到货明细，创建到货通知单<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220803194459.png" alt="20220803194459"><br>ZMM007: 维护界面，主要是客服专员来维护未关联采购订单的到货明细<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220803194539.png" alt="20220803194539"><br>ZMM007: 到货通知单样式<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220803194658.png" alt="20220803194658"></p>
<p>ZMM010<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220803083223.png" alt="20220803083223"></p>
<hr>
<h3 id="采购结算"><a href="#采购结算" class="headerlink" title="采购结算"></a>采购结算</h3><p>采购员根据钢厂给到的结算价导入，根据价差、优惠、运费补助等生成物料的结算价并生成优惠结算表，钢厂根据结算价开具发票。</p>
<h3 id="采购发票预制"><a href="#采购发票预制" class="headerlink" title="采购发票预制"></a>采购发票预制</h3><p>采购员基于供应商结算价并根据结算政策计算最终结算价，制作优惠结算表导入SAP系统，经原材管理会计SAP系统审批后自动调整暂估差异，最后由采购员将发票明细导入SAP系统进行发票预制。<br>ZMM012<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220802195628.png" alt="20220802195628"></p>
<p><strong>注意，利用ZMM012发票校验平台时，业务只有导入发票和优惠结算表的权限，财务只管过账，但是只限于结算价的采购订单，锁价的订单直接用MIRO标准功能进行校验与过账。</strong></p>
<hr>
<h3 id="采购仓储业务报表"><a href="#采购仓储业务报表" class="headerlink" title="采购仓储业务报表"></a>采购仓储业务报表</h3><p>1、ZMM006：进销存报表<br>主要是用来查询物料的库存数量、批次、批次特性等值，这个表是不断变动的，发货、产成品入库都会影响这个表里的数据。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220803185120.png" alt="20220803185120"></p>
<p>2、ZMM023: 采购订单执行情况跟踪报表<br>主要用来查询原料、辅料的采购订单执行情况，包括订单明细、订单金额、已付款金额、未付款金额等数据。<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220803185729.png" alt="20220803185729"></p>
<p>3、ZMM024: 采购入库单打印<br>主要用来打印采购入库单和查询采购入库单明细<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220803190554.png" alt="20220803190554"></p>
<p>4、ZMM013: 调拨明细表<br>主要用来操作场内转储311的物料移动，调拨、过账、冲销。并生成相关物料凭证</p>
<p>5、ZMM043: 委外包装对账表<br>主要查询包装前、包装后的卷号、批次、包装单价等。其中在SAP中A是酸洗卷，B是冷硬卷，C是包装卷。</p>
<table>
<thead>
<tr>
<th>事务代码</th>
<th>描述</th>
<th>事务代码</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>zmm000</td>
<td>配置表</td>
<td>mm01</td>
<td>物料主数据创建</td>
</tr>
<tr>
<td>zmm001</td>
<td>物料主数据业务视图批导		    mm02</td>
<td>物料主数据修改</td>
<td></td>
</tr>
<tr>
<td>zmm002</td>
<td>供应商主数据业务视图批导</td>
<td>mm03、mm60</td>
<td>物料主数据查询</td>
</tr>
<tr>
<td>zmm003</td>
<td>依据销售计划创建采购计划</td>
<td>bp</td>
<td>供应商主数据创建</td>
</tr>
<tr>
<td>zmm004</td>
<td>批量关闭采购订单</td>
<td>bp</td>
<td>供应商主数据修改</td>
</tr>
<tr>
<td>zmm005</td>
<td>采购计划转采购订单</td>
<td>bp</td>
<td>供应商主数据查询</td>
</tr>
<tr>
<td>zmm006</td>
<td>物料库存表		               mmbe</td>
<td>库存概览</td>
<td></td>
</tr>
<tr>
<td>zmm007</td>
<td>采购到货平台（创建、维护、查看）</td>
<td>me51n</td>
<td>采购申请创建</td>
</tr>
<tr>
<td>zmm008</td>
<td>采购到货平台（冲销、过账）</td>
<td>me52n</td>
<td>采购申请修改</td>
</tr>
<tr>
<td>zmm009</td>
<td>采购指导价维护</td>
<td>me53n、me5a</td>
<td>采购申请查询</td>
</tr>
<tr>
<td>zmm010</td>
<td>正常采购受托加工批量收货</td>
<td>me54n</td>
<td>采购申请审批</td>
</tr>
<tr>
<td>zmm011</td>
<td>调拨单维护创建与维护</td>
<td>me41</td>
<td>建立报价邀请</td>
</tr>
<tr>
<td>zmm012</td>
<td>采购发票校验平台</td>
<td>me21n</td>
<td>采购订单创建</td>
</tr>
<tr>
<td>zmm012A</td>
<td>优惠结算表上传</td>
<td>me22n</td>
<td>采购订单修改</td>
</tr>
<tr>
<td>zmm012B</td>
<td>优惠结算表审批冲销</td>
<td>me29n&#x2F;me28</td>
<td>采购订单审批</td>
</tr>
<tr>
<td>zmm012C</td>
<td>发票明细上传</td>
<td>me23n&#x2F;me2l&#x2F;me2n&#x2F;me2m</td>
<td>采购订单 查询</td>
</tr>
<tr>
<td>zmm012D</td>
<td>发票明细审批冲销</td>
<td>migo</td>
<td>收货</td>
</tr>
<tr>
<td>zmm013</td>
<td>调拨单过账与冲销</td>
<td>mi07</td>
<td>盘盈亏过账</td>
</tr>
<tr>
<td>zmm014</td>
<td>部门领用单查询</td>
<td>mi09</td>
<td>输入盘点凭证</td>
</tr>
<tr>
<td>zmm015</td>
<td>批次进销存</td>
<td>mir7</td>
<td>发票预制</td>
</tr>
<tr>
<td>zmm016</td>
<td>质量异议信息维护及打印</td>
<td>miro</td>
<td>发票校验</td>
</tr>
<tr>
<td>zmm020</td>
<td>供应商主数据批导查询</td>
<td>mr8m</td>
<td>发票校验冲销</td>
</tr>
<tr>
<td>zmm021</td>
<td>物料主数据批导查询</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm022</td>
<td>安全库存警示报表</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm023</td>
<td>采购订单执行跟踪报表</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm024</td>
<td>采购入库单打印</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm025</td>
<td>委托加工平台</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm025A</td>
<td>委托出库单维护</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm025B</td>
<td>委托出库单过账与冲销</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm025C</td>
<td>委托入库单维护</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm025D</td>
<td>委托入库单过账与冲销</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm026</td>
<td>委托出库单</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm027</td>
<td>盘点记录表</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm028</td>
<td>物料到期登记表</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm029</td>
<td>以旧换新报表</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm034</td>
<td>调拨单派车</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm039</td>
<td>库位调整明细报表</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm042</td>
<td>物料账龄表</td>
<td></td>
<td></td>
</tr>
<tr>
<td>zmm043</td>
<td>委外包装对账表</td>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>业务学习</category>
      </categories>
      <tags>
        <tag>业务学习</tag>
      </tags>
  </entry>
  <entry>
    <title>git的博客配置图床</title>
    <url>/2022/06/06/%E9%85%8D%E7%BD%AEgit%E7%9A%84%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<h2 id="1、配置git上传仓库"><a href="#1、配置git上传仓库" class="headerlink" title="1、配置git上传仓库"></a>1、配置git上传仓库</h2><p>省略</p>
<h2 id="2、使用-jsDelivr-进行-CDN-加速"><a href="#2、使用-jsDelivr-进行-CDN-加速" class="headerlink" title="2、使用 jsDelivr 进行 CDN 加速"></a>2、使用 jsDelivr 进行 CDN 加速</h2><p>前面已经利用 GitHub 仓库实现了图床功能，但是大家都知道，GitHub 在国内访问很慢，甚至经常打不开，那么我们的图片就存在加载速度慢的问题，怎么办呢？<strong>jsDelivr</strong> 可以解决此问题，显著提高图片访问的响应速度，并且开源免费！其官网为：jsDelivr - A free, fast, and reliable CDN for open source。</p>
<p>使用方法也非常的简单，直接在浏览器通过地址<code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</code>就可以访问 GitHub 上的图片，并且响应速度非常快！其中@发布的版本号可以直接省略，默认加载最新版本，即直接可以简写为<code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名/文件路径</code></p>
<p>比如：<a href="https://cdn.jsdelivr.net/gh/yifeng-talking/pictures/avatar.jpg">https://cdn.jsdelivr.net/gh/yifeng-talking/pictures/avatar.jpg</a></p>
<h2 id="3、使用PicGo上传图片"><a href="#3、使用PicGo上传图片" class="headerlink" title="3、使用PicGo上传图片"></a>3、使用PicGo上传图片</h2><p>前面实现了 GitHub 仓库作为图床，jsDelivr 对图片进行加速。但是每次我们都需要使用 Git 工具或者在 GitHub 仓库中进行上传图片，并且要自己拼接图片地址，非常麻烦，有没有更快速更简洁的方式呢？此时神器 <strong>PicGo</strong> 就派上了用场，同样开源免费！</p>
<p>PicGo 是一个用于快速上传图片并获取图片 URL 链接的工具，支持多个图床进行使用，其中当然包括我们现在使用的 GitHub 图床了，它同时支持 Windows、macOS、Linux平台，详情可见：Molunerfinn&#x2F;PicGo: A simple &amp; beautiful tool for pictures uploading built by vue-cli-electron-builder (github.com)</p>
<p>这里以 Windows 为例，说明 PicGo 的使用方法。</p>
<ul>
<li>下载并安装 PicGo，<a href="https://github.com/Molunerfinn/PicGo/releases/download/v2.2.2/PicGo-Setup-2.2.2.exe">https://github.com/Molunerfinn/PicGo/releases/download/v2.2.2/PicGo-Setup-2.2.2.exe</a></li>
<li>打开 PicGo 软件，找到<code>图床设置</code>中的<code>GitHub图床</code>，填写相关信息。</li>
<li><ul>
<li><strong>设定仓库名【必填】</strong>：填写<code>你的用户名/你的仓库名</code>，比如我的 yifeng-talking&#x2F;pictures</li>
<li><strong>设定分支名【必填】</strong>：填写<code>main</code></li>
<li><strong>设定Token【必填】</strong>：在Github主页点击自己头像后，依次选择【Settings】-&gt;【Developer settings】-&gt;【Personal access tokens】-&gt;【Generate new token】，填写Note描述（随便），设置过期时间Expiration为永不过期No expiration，设定勾选【repo】，然后点击下方的【Generate token】生成一个Token，这个Token只会显示一次，自行保存，然后复制到 PicGo 中。</li>
<li>指定存储路径【选填】：填写图片要存储的路径，比如填【images&#x2F;】，这样就会在仓库下创建一个名为 images 的文件夹，图片将会储存在此文件夹中，这里不填。</li>
<li><strong>设定自定义域名【选填】</strong>：图片上传后，PicGo 会按照【自定义域名+上传的图片名】的方式生成访问链接，放到剪贴板上，因为我们要使用 jsDeliver 进行加速，因而这里设置为<code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名</code>，比如我设置为<strong><a href="https://cdn.jsdelivr.net/gh/yifeng-talking/pictures">https://cdn.jsdelivr.net/gh/yifeng-talking/pictures</a></strong></li>
</ul>
</li>
<li><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/b219ebc4b74543a9be32bf495e2f988bb80114ce.png" alt="img"></li>
<li>接着就可以在<code>上传区</code>，将自己的图片上传，甚至可以直接将剪切板的截图上传，上传成功后会直接将相应链接复制到剪切板中，我们就可以直接复制到博客（MarkDown 编辑器）中。</li>
<li>在<code>PicGo设置中</code>，可以自定义一些设置，比如上传前重命名、时间戳重命名等，自行设置。</li>
</ul>
<h2 id="4、typora配置PicGo上传"><a href="#4、typora配置PicGo上传" class="headerlink" title="4、typora配置PicGo上传"></a>4、typora配置PicGo上传</h2><p>前面使用了 PicGo 工具快速上传图片并获取图片 URL 链接，方便了很多，但是每次都要先在 PicGo 中进行上传，然后将剪切板中链接复制到 MarkDown 编辑器中，有没有更优雅简便的方式，可以将两步合二为一呢？答案是<strong>Typera+PicGo</strong>。</p>
<p>Typera 是一款轻便简洁的 Markdown 编辑器，可以即时渲染，并且完全免费，推荐大家用此软件进行写作，其官网为：Typora — a markdown editor, markdown reader.</p>
<p>下面介绍 Typora 结合 PicGo 实现上传功能。</p>
<ul>
<li>下载 Typora，网址Typora — a markdown editor, markdown reader.</li>
<li>打开 PicGo，在<code>PicGo设置</code>中，点击【设置 Server 】，将监听端口修改为：36677</li>
<li>打开 Typera，点击【文件】 -&gt; 【偏好设置】-&gt; 【图像】，然后进行如下配置，其中 PicGo 路径是你的 PicGo 的安装路径。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/4034970a304e251fdd70f5ea9ebedb1e7e3e53d9.png" alt="img"></p>
<ul>
<li>在 Typera 中书写文章，插入图片（也可以直接将截图复制）时会自动将图片进行上传，并显示在文章中，非常的方便。当然插入图片时也可以不选择上传图片，也就是不自动上传图片，可以手动在图片上右击上传图片。</li>
</ul>
<hr>
<p>新增next样式的搜索：</p>
<p>已经集成在Next主题中，只需要简单的配置即可使用，而且体验非常好。<a href="https://links.jianshu.com/go?to=http://theme-next.iissnan.com/third-party-services.html%23local-search">官方文档中</a>也有详细的安装说明，如下图</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/11018813-eb5a93591305d185.png" alt="img"></p>
<p>第一步，安装 <code>hexo-generator-searchdb</code>，在站点的根目录下执行以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>第二步，编辑【站点配置文件】，新增以下内容到任意位置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Local Search搜索功能</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>

<p>第三步，编辑【主题配置文件】，启用本地搜索功能：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<p>成功</p>
<hr>
<p>如果用vscode来编辑md的话，使用markdown editor插件，图片上传使用picgo插件，但是需要重新配置图床。</p>
<p>配置图床<br><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220716084457.png" alt="20220716084457"></p>
<p>测试插入图片</p>
<p><img src="https://cdn.jsdelivr.net/gh/bigtiao/pic/images/20220716083954.png" alt="20220716083954"></p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
</search>
